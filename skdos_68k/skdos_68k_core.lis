00001 00000000                               OPT      PAG
00002 00000000
00003 00000000                      * SK*DOS DISK OPERATING SYSTEM FOR THE 68K
00004 00000000
00005 00000000                      * COPYRIGHT (C) 1986 BY PETER A. STARK
00006 00000000                      * STAR-K SOFTWARE SYSTEMS CORP.
00007 00000000                      * PO BOX 209, MT. KISCO NY 10549
00008 00000000
00009 00000000                      * THIS IS THE .COR VERSION FOR CUSTOMIZATIO
00010 00000000
00011 00001000                               ORG      $1000                DUMM
00012 00001000                      *         LIB      1.TXEQUATE
00013 00001000                      * UPDATE HISTORY:
00014 00001000                      * VERSION 0.4 - 6-3-86 - UPDATED TO REFLECT
00015 00001000                      *    SUGGESTIONS FROM BERT VAN DER BURG - M
00016 00001000                      *    JSR RSTRIO DIRECTLY TO WARM START
00017 00001000                      * VERSION 5 - 6-8-86 - CHANGED DRIVERS TO W
00018 00001000                      *    IT IS DIFFERENT FROM MLATCH. DO RSTRIO
00019 00001000                      *    ADDED TRAP FLAG, AND INITIALIZE ALL EX
00020 00001000                      *    IF TRPFLG IS NON-ZERO. ADDED DISEEK AN
00021 00001000                      *    $AXXX TRAPS.
00022 00001000                      * VERSION 0.6 - 9-21-86 - MOD TO LET SYSTEM
00023 00001000                      *    DEPCTR STARTS WITH 1 NOT 0;
00024 00001000                      * VERSION 0.7 = 10-3-86 - MOD TO ADD BINARY
00025 00001000                      *    04, 05, 0F, 18, 19, CHANGE DRUSED TABL
00026 00001000                      *    AND BETRAP, ADDED INTERRUPT ENABLE AND
00027 00001000                      *    CHANGED FCS20,9,10 SO THEY CHECK DRUSE
00028 00001000                      *    SECTOR NUMBER INTO FCBPHY; ALSO ADDED
00029 00001000                      *    ADDED WINCHESTER TABLE, REARRANGED USR
00030 00001000                      * VERSION 0.8 - 11-1-86 - ADDED USER-SETTAB
00031 00001000                      * VERSION 0.9 - 11-9-86 - CHANGED CLOCK FRO
00032 00001000                      *    FIXED PROBLEM WITH PAUSE; FIXED ERROR
00033 00001000                      *    DISK CONTROLLER ROUTINE IN PTA VERSION
00034 00001000                      * VERSION 1.0 - 12-26-86 - CHANGED HEXIN TO
00035 00001000                      *    ADDED TOUPPER(D5) TO CONVERT LOWER TO
00036 00001000                      *    COLDST SO IT SAVES CURRENT IRQ STATUS
00037 00001000                      * VERSION 1.1 - 12-28-86 - TXTRAP NOW SAVES
00038 00001000                      *    THROUGH 29, INVOLVING THE FCB
00039 00001000                      * VERSION 1.2 - 1-15-87 ETC. - MODIFIED FOR
00040 00001000                      *    USER-CHANGEABLE DEVICE DRIVERS
00041 00001000                      * VERSION 1.3 - 1-30-87 - FIXED PROBLEM WIT
00042 00001000                      *    SET UP BATCH FILES
00043 00001000                      * VERSION 1.4 - 2-5-87 - FIXED STACK FRAME
00044 00001000                      * VERSION 1.5 - 2-16-87 - ADDED CACHE, FIXE
00045 00001000                      * VERSION 1.6 - 2-23-87 - ADDED LF AFTER IN
00046 00001000                      * VERSION 1.7 - 3-1-87 - ADDED SEENXT FUNCT
00047 00001000                      * VERSION 1.8 - 3-15-87 - ADDED JUMPS AT 10
00048 00001000                      * VERSION 1.9 - 4-16-87 - FIXED IRQ ON AND
00049 00001000                      * VERSION 2.0 - 6-27-87 - WARMSTART REENTRY
00050 00001000                      * VERSION 2.1 - 12-26-87 - LENGTHEN WX1 DEL
00051 00001000                      * VERSION 2.2 - 3-28-88 - FIX RANDOM, BASIC
00052 00001000                      * VERSION 2.3 - 4-18-88 - ADAPT FOR 68020
00053 00001000                      * VERSION 2.4 - 5-9-88 - TYPEAHEAD
00054 00001000                      * VERSION 2.5 - 6-9-88 - MULTIPLE DIRECTORI
00055 00001000                      * VERSION 2.6 - 8-19-88 - PRINT SCREEN ADDE
00056 00001000                      * VERSION 2.7 - 8-20-88 - ADDED NRETRY AND
00057 00001000                      * VERSION 2.8 - 1-19-89 - LENGTHENED BATFCB
00058 00001000                      * VERSION 2.9 - 2-23-89 - FIXED HARD DRIVE
00059 00001000                      * VERSION 3.0 - 6-27-89 - FIXED LPOINT PROB
00060 00001000                      * VERSION 3.1 - 9-06-89 - ADDED CHECK TO FW
00061 00001000                      * VERSION 3.2 - 06-29-90 - SELECTABLE DEFAU
00062 00001000                      * VERSION 3.3 - 12-1-90 - ADDED DATA AND ME
00063 00001000
00064 00001000                      *      C A U T I O N     *
00065 00001000                      * If LVL5IA or PUTCD5 change location, make
00066 00001000
00067 00001000
00068 00001000 6002                          BRA.S    LOCKUP
00069 00001002
00070 00001002 0303                          DC.W     $0303            VERSION
00071 00001004
00072 00001004 0000000000000000     LOCKUP   DC.L     0,0,0,0,0,0,0,0  ROOM FOR
               0000000000000000                        SERIAL NO AND ID
               0000000000000000
               0000000000000000
00073 00001024
00074 00001024
00075 00001024
00076 00001024 A02E                          DC       $A02E                 AND
00077 00001026 4CDF0E00                      MOVEM.L  (A7)+,A1-A3
00078 0000102A 28432920313938362C20          FCC      '(C) 1986, 1990 BY PETER
               31393930204259205045                   A. STARK. '
               54455220412E20535441
               524B2E20
00079 0000104C
00080 0000104C
00081 0000104C
00082 0000104C 414C4C20524947485453          FCC      'ALL RIGHTS RESERVED',4
               20524553455256454404
00083 00001060
00084 00001060
00085 00001060                      * FILE CONTROL BLOCK EQUATES
00086 00001060
00087 00001060 00000000             FCBDIR   EQU      0 DIRECTORY LETTER (0 IF
00088 00001060 00000001             FCBERR   EQU      1 ERROR CODE
00089 00001060 00000002             FCBRW    EQU      2 READ=1, WRITE=2
00090 00001060 00000003             FCBDRV   EQU      3 DRIVE NUMBER
00091 00001060 00000004             FCBNAM   EQU      4 FILE NAME (8 CHARS)
00092 00001060 0000000C             FCBEXT   EQU      12 FILE EXTENSION (3 CHAR
00093 00001060 0000000F             FCBATT   EQU      15 FILE PROT ATTRIBUTES (
00094 00001060 00000012             FCBFTR   EQU      18 FIRST TRACK OF FILE
00095 00001060 00000013             FCBFSE   EQU      19 FIRST SECTOR OF FILE
00096 00001060 00000016             FCBLTR   EQU      22 LAST TRACK OF FILE
00097 00001060 00000017             FCBLSE   EQU      23 LAST SECTOR OF FILE
00098 00001060 00000018             FCBSIZ   EQU      24 2-BYTE FILE SIZE IN SE
00099 00001060 0000001A             FCBRAN   EQU      26 RANDOM INDICATOR (0=SE
00100 00001060 0000001B             FCBTIM   EQU      27 TIME
00101 00001060 0000001C             FCBMON   EQU      28 MONTH
00102 00001060 0000001D             FCBDAY   EQU      29 DAY OF FILE CREATION
00103 00001060 0000001E             FCBYR    EQU      30 YEAR
00104 00001060 00000022             FCBCTR   EQU      34 CURRENT TRACK IN BUFFE
00105 00001060 00000023             FCBCSE   EQU      35 CURRENT SECTOR IN BUFF
00106 00001060 00000024             FCBNMB   EQU      36 TEMPORARY NAME BUFFER
00107 00001060 00000031             FCBDPT   EQU      49 DATA POINTER TO NEXT B
00108 00001060 00000033             FCBRIN   EQU      51 RANDOM FILE INDEX POIN
00109 00001060 00000034             FCBNMS   EQU      52 SCRATCH NAME (11 CHARS
00110 00001060 0000003A             FCBCOL   EQU      58 COLUMN NUMBER POSITION
00111 00001060 0000003B             FCBSCF   EQU      59 SPACE COMPR FLAG (0=CO
00112 00001060 0000003C             FCBSPT   EQU      60 SECTORS PER TRACK FOR
00113 00001060 0000003D             FCBUPD   EQU      61 RANDOM UPDATE FLAG
00114 00001060 0000003E             FCBTMP   EQU      62 TEMP STORAGE FOR RANDO
00115 00001060 00000044             FCBLST   EQU      68 FCB LIST POINTER TO NE
00116 00001060 00000048             FCBPHY   EQU      72 PHYSICAL DRIVE NUMBER
00117 00001060 0000004A             FCBDIT   EQU      74 DIRECTORY TRACK (0- )
00118 00001060 0000004B             FCBDIS   EQU      75 DIRECTORY SECTOR (5- )
00119 00001060 0000004D             FCBDIB   EQU      77 DIRECTORY STARTING BYT
00120 00001060 0000004E             FCBCRN   EQU      78 2-BYTE CURRENT RECORD
00121 00001060 00000060             FCBDAT   EQU      96 DATA BUFFER (256 BYTES
00122 00001060
00123 00001060                      * OFFSETS TO FIELDS IN DEVICE TABLE ENTRY
00124 00001060
00125 00001060 00000000             DTNAME   EQU      0                    NAME
00126 00001060 00000004             DTPNTR   EQU      4                    POIN
00127 00001060 00000008             DTLNTH   EQU      8                    LENG
00128 00001060 0000000C             DTINIT   EQU      12                   INIT
00129 00001060 00000010             DTINST   EQU      16                   INPU
00130 00001060 00000014             DTECHO   EQU      20                   INPU
00131 00001060 00000018             DTNECH   EQU      24                   INPU
00132 00001060 0000001C             DTICNT   EQU      28                   INPU
00133 00001060 00000020             DTOUST   EQU      32                   OUTP
00134 00001060 00000024             DTOUTC   EQU      36                   OUTP
00135 00001060 00000028             DTOCNT   EQU      40                   OUTP
00136 00001060 0000002C             DTPLIN   EQU      44                   PRIN
00137 00001060 0000002D             DTPWID   EQU      45                   PAGE
00138 00001060 0000002E             DTNULL   EQU      46                   NULL
00139 00001060 0000002F             DTSLIN   EQU      47                   SKIP
00140 00001060 00000030             DTPAUS   EQU      48                   PAUS
00141 00001060 00000031             DTDEPC   EQU      49                   DEPT
00142 00001060 00000032             DTOCOL   EQU      50                   OUTP
00143 00001060 00000033             DTBAUD   EQU      51                   BAUD
00144 00001060 00000034             DTEOFI   EQU      52                   END-
00145 00001060 00000035             DTXOFF   EQU      53                   X-OF
00146 00001060 00000036             DTXON    EQU      54                   X-ON
00147 00001060 00000038             DTSTA1   EQU      56                   INPU
00148 00001060 0000003C             DTINE1   EQU      60                   INPU
00149 00001060 00000040             DTKILL   EQU      64                   KILL
00150 00001060
00151 00001060 00000E00             USTACK   EQU      $0E00               USER
00152 00001060 00001000             STACK    EQU      $1000               SYSTE
00153 00001060
00154 00001000                               ORG      $1000
00155 00001000
00156 00001000                      *         LIB      1.TXSYSDTA         SYSTE
00157 00001000                      * SYSTEM DATA AREA
00158 00001000
00159 00001000                      * ENTRY POINTS
00160 00001000                      *   THESE ENTRY POINTS ARE FORCED AT 6-BYTE
00161 00001000                      *   TO LEAVE ROOM FOR 4-BYTE ADDRESSES LATE
00162 00001000
00163 00001000 00001000             SYSDTA   EQU      *                      ST
00164 00001000
00165 00001000 4EF900002FA8         COLDSV   JMP.L    COLDS COLDSTART
00166 00001006
00167 00001006 4EF90000301A         WARMSV   JMP.L    WARMVT WARMSTART VIA TRAP
00168 0000100C
00169 0000100C
00170 0000100C                      * USER OPTION ADDRESSES
00171 0000100C
00172 0000100C 4EF900001D20         GETDAT   JMP.L    ASKDAT              ENTRY
00173 00001012
00174 00001012 4E75                 INTIME   RTS      TRAP FOR TIME ENTRY, ELSE
00175 00001014 4E75                          RTS
00176 00001016 4E75                          RTS
00177 00001018 000062C3             OFFINI   DC.L     SKEND                END
00178 0000101C 01000000             MEMINI   DC.L     $01000000            MEME
00179 00001020 4E75                 SECTRD   RTS      TRAP FOR CACHE, RAMDISK R
00180 00001022 4E75                          RTS
00181 00001024 4E75                          RTS
00182 00001026 4E75                          RTS
00183 00001028 4E75                          RTS
00184 0000102A 4E75                          RTS
00185 0000102C 4E75                          RTS
00186 0000102E 4E75                          RTS
00187 00001030 4E75                          RTS
00188 00001032 4E75                          RTS
00189 00001034 4E75                 SECTWR   RTS      TRAP FOR CACHE, RAMDISK W
00190 00001036 4E75                          RTS
00191 00001038 4E75                          RTS
00192 0000103A 4E75                          RTS
00193 0000103C 4E75                          RTS
00194 0000103E 4E75                          RTS
00195 00001040 4E75                          RTS
00196 00001042 4E75                          RTS
00197 00001044 4E75                          RTS
00198 00001046 4E75                          RTS
00199 00001048 4E75                 SECCOL   RTS      TRAP FOR COLD START INIT
00200 0000104A 4E75                          RTS
00201 0000104C 4E75                          RTS
00202 0000104E 4E75                          RTS
00203 00001050 4E75                          RTS
00204 00001052 4E75                          RTS
00205 00001054 4E75                          RTS
00206 00001056 4E75                          RTS
00207 00001058 4E75                          RTS
00208 0000105A 4E75                          RTS
00209 0000105C 4E75                 SECWAR   RTS      TRAP FOR WARM START INIT
00210 0000105E 4E75                          RTS
00211 00001060 4E75                          RTS
00212 00001062 4E75                          RTS
00213 00001064 4E75                          RTS
00214 00001066 4E75                          RTS
00215 00001068 4E75                          RTS
00216 0000106A 4E75                          RTS
00217 0000106C 4E75                          RTS
00218 0000106E 4E75                          RTS
00219 00001070 4E75                 SECCHK   RTS      TRAP FOR DISK CHECK
00220 00001072 4E75                          RTS
00221 00001074 4E75                          RTS
00222 00001076 4E75                          RTS
00223 00001078 4E75                          RTS
00224 0000107A 4E75                          RTS
00225 0000107C 4E75                          RTS
00226 0000107E 4E75                          RTS
00227 00001080 4E75                          RTS
00228 00001082 4E75                          RTS
00229 00001084 0000                 SECFL1   DC.W     0                      SE
00230 00001086 00000000                      DC.L     0
00231 0000108A 0000                 SECFL2   DC.W     0
00232 0000108C 00000000                      DC.L     0
00233 00001090 0000                 SECFL3   DC.W     0
00234 00001092 00000000                      DC.L     0
00235 00001096
00236 00001096                      * JUMPS TO MAKE IT EASY FOR BIOS TO FIND RO
00237 00001096
00238 000010B0                               ORG      SYSDTA+$00B0
00239 000010B0
00240 000010B0 4EF900001D20         ASKDAV   JMP.L    ASKDAT             ASK FO
00241 000010B6 4EF900004210         PSTRNV   JMP.L    PSTRNG             PRINT
00242 000010BC
00243 000010BC                      * ASSORTED FLAGS
00244 000010BC
00245 000010C0                               ORG      SYSDTA+$00C0
00246 000010C0
00247 000010C0 00                   TRPFLG   DC.B     0                   0 DIS
00248 000010C1 00                   CPUTYP   DC.B     0                   (680)
00249 000010C2 00                            DC.B     0                   DUMMY
00250 000010C3 00                            DC.B     0                   DUMMY
00251 000010C4 00000028             LATRAP   DC.L     $0028               $AXXX
00252 000010C8 00000008             BETRAP   DC.L     $0008               BUS E
00253 000010CC 2700                 LSTINT   DC.W     $2700               LAST
00254 000010CE
00255 000010CE                      * PRIMARY DISK DRIVER VECTOR AREA
00256 000010CE
00257 00001100                               ORG      SYSDTA+$100
00258 00001100
00259 00001100 4E75                 DICOLD   RTS      PRIMARY COLD-START INIT
00260 00001102 4E75                          RTS
00261 00001104 4E75                          RTS
00262 00001106 4E75                 DIWARM   RTS      PRIMARY WARM-START INIT
00263 00001108 4E75                          RTS
00264 0000110A 4E75                          RTS
00265 0000110C 4E75                 DIREAD   RTS      PRIMARY DISK READ VECTOR
00266 0000110E 4E75                          RTS
00267 00001110 4E75                          RTS
00268 00001112 4E75                 DIWRIT   RTS      PRIMARY DISK WRITE VECTOR
00269 00001114 4E75                          RTS
00270 00001116 4E75                          RTS
00271 00001118 4E75                 DICHEK   RTS      PRIMARY DISK CHECK VECTOR
00272 0000111A 4E75                          RTS
00273 0000111C 4E75                          RTS
00274 0000111E 4E75                 DIMOFF   RTS      PRIMARY DISK MOTOR OFF VE
00275 00001120 4E75                          RTS
00276 00001122 4E75                          RTS
00277 00001124 4E75                 DIREST   RTS      PRIMARY DISK RESTORE VECT
00278 00001126 4E75                          RTS
00279 00001128 4E75                          RTS
00280 0000112A 4E75                 DISEEK   RTS      PRIMARY DISK SEEK VECTOR
00281 0000112C 4E75                          RTS
00282 0000112E 4E75                          RTS
00283 00001130
00284 00001130                      * THE FOLLOWING DATA APPLIES TO DISK HARDWA
00285 00001130                      * DRUSED: LOOK UP LOGICAL DRIVE NUMBER AND
00286 00001130                      *      DRIVE NUMBER
00287 00001130
00288 00001130 03030303030303030303 STPRAT   FCB      3,3,3,3,3,3,3,3,3,3  PRIM
00289 0000113A 01                   VERFLG   FCB      1                    VERI
00290 0000113B 00                            FCB      0                    NOT
00291 0000113C 10                   DRUSED   FCB      $10                  LOG
00292 0000113D 11                            FCB      $11                    00
00293 0000113E 00                            FCB      00                     1X
00294 0000113F 00                            FCB      00                     2X
00295 00001140 00                            FCB      00                     4X
00296 00001141 00                            FCB      00                     8X
00297 00001142 00                            FCB      00                     XN
00298 00001143 00                            FCB      00
00299 00001144 00                            FCB      00
00300 00001145 00                            FCB      00
00301 00001146 00000000000000000000 DRWPRO   FCB      0,0,0,0,0,0,0,0,0,0  DRIV
00302 00001150 05                   NRETRY   FCB      5                    NORM
00303 00001151 00                   FOTHER   FCB      0                    0=SK
00304 00001152 02                   NUMBHD   DC.B     2                   NUMBE
00305 00001153
00306 00001153                      * PRIMARY CONSOLE DRIVER VECTOR AREA
00307 00001153
00308 00001180                               ORG      SYSDTA+$180
00309 00001180
00310 00001180 4E75                 SINITV   RTS      SERIAL PORT INITIALIZATIO
00311 00001182 4E75                          RTS
00312 00001184 4E75                          RTS
00313 00001186 4E75                 STATVE   RTS      CHECK KEYBOARD STATUS
00314 00001188 4E75                          RTS
00315 0000118A 4E75                          RTS
00316 0000118C 4E75                 OUTCHV   RTS      OUTPUT CHARACTER TO TERMI
00317 0000118E 4E75                          RTS
00318 00001190 4E75                          RTS
00319 00001192 4E75                 INCHV    RTS      KEYBOARD INPUT WITH ECHO
00320 00001194 4E75                          RTS
00321 00001196 4E75                          RTS
00322 00001198 4E75                 KINPUV   RTS      KEYBOARD INPUT WITHOUT EC
00323 0000119A 4E75                          RTS
00324 0000119C 4E75                          RTS
00325 0000119E 4E75                 OCNTRL   RTS      OUTPUT CHANNEL CONTROL
00326 000011A0 4E75                          RTS
00327 000011A2 4E75                          RTS
00328 000011A4 4E75                 ICNTRL   RTS      INPUT CHANNEL CONTROL
00329 000011A6 4E75                          RTS
00330 000011A8 4E75                          RTS
00331 000011AA 4E75                 MONITV   RTS      RE-ENTER MONITOR
00332 000011AC 4E75                          RTS
00333 000011AE 4E75                          RTS
00334 000011B0 4E75                 RESETV   RTS      COLD RESET OF MONITOR/SYS
00335 000011B2 4E75                          RTS
00336 000011B4 4E75                          RTS
00337 000011B6 4E75                 TIMINI   RTS      TIMER INITIALIZE
00338 000011B8 4E75                          RTS
00339 000011BA 4E75                          RTS
00340 000011BC 4E75                 TIMOFF   RTS      TIMER OFF
00341 000011BE 4E75                          RTS
00342 000011C0 4E75                          RTS
00343 000011C2 4E75                 TIMON    RTS      TIMER ON
00344 000011C4 4E75                          RTS
00345 000011C6 4E75                          RTS
00346 000011C8 4E75                 OSTATV   RTS      OUTPUT STATUS VECTOR
00347 000011CA 4E75                          RTS
00348 000011CC 4E75                          RTS
00349 000011CE 4EF9000047D8         GETDTV   JMP.L    DATONL             DEFAUL
00350 000011D4 4EF900001186         STATV1   JMP.L    STATVE             STATUS
00351 000011DA 4EF900001198         KINPV1   JMP.L    KINPUV             DITTO
00352 000011E0 4E75                 KILLV1   RTS      KILL TYPEAHEAD CONTENTS I
00353 000011E2 4E75                          RTS
00354 000011E4 4E75                          RTS
00355 000011E6
00356 000011E6                      * WINCHESTER DISK DATA AREA
00357 000011E6
00358 00001200                               ORG      SYSDTA+$200
00359 00001200
00360 00001200                      * THIS TABLE CONTAINS DATA FOR TWO PHYSICAL
00361 00001200                      * EACH MAY BE SPLIT UP INTO UP TO FOUR LOGI
00362 00001200                      * THE CONVENTION FROM DRUSED TABLE, THEY WO
00363 00001200                      *      WINCHESTER DRIVE A: DRIVES 20, 21, 2
00364 00001200                      *      WINCHESTER DRIVE B: DRIVES 24, 25, 2
00365 00001200
00366 00001200                      * EACH LOGICAL DRIVE (2X) HAS A 16-BYTE ENT
00367 00001200                      * TABLE. AS NOTED BELOW, THE FIRST TRACK NU
00368 00001200                      * ZERO FOR DRIVE 20, SINCE THIS DATA IS ALS
00369 00001200                      * TRACK 0 SECTOR 0 OF THAT DRIVE
00370 00001200                      * UNLIKE FLOPPIES, WINCHESTER TRACKS AND SE
00371 00001200                      * NUMBERED STARTING WITH 0.
00372 00001200
00373 00001200
00374 00001200 FF                   WINTAB   DC.B     $FF   LOG DRIVE NUMBER ($
00375 00001201 FF                            DC.B     $FF   STEP RATE
00376 00001202 FF                            DC.B     $FF   SECTORS PER TRACK-S
00377 00001203 FF                            DC.B     $FF   NUMBER OF HEADS (US
00378 00001204 FFFF                          DC.W     $FFFF NO OF SECTOR / CYLI
00379 00001206 FFFF                          DC.W     $FFFF NO OF CYLINDERS (US
00380 00001208 FFFF                          DC.W     $FFFF FIRST CYL NUMBER (M
00381 0000120A FF                            DC.B     $FF   LAST LOGICAL TRACK
00382 0000120B FF                            DC.B     $FF   LAST LOGIVAL SECTOR
00383 0000120C FFFF                          DC.W     $FFFF CYLINDER TO PARK DR
00384 0000120E FFFF                          DC.W     $FFFF PRECOMP STARTING TR
00385 00001210
00386 00001210 FFFFFFFFFFFFFFFF              DC.L     -1,-1 SPACE FOR DRIVE 21
00387 00001218 FFFFFFFFFFFFFFFF              DC.L     -1,-1
00388 00001220
00389 00001220 FFFFFFFFFFFFFFFF              DC.L     -1,-1 SPACE FOR DRIVE 22
00390 00001228 FFFFFFFFFFFFFFFF              DC.L     -1,-1
00391 00001230
00392 00001230 FFFFFFFFFFFFFFFF              DC.L     -1,-1 SPACE FOR DRIVE 23
00393 00001238 FFFFFFFFFFFFFFFF              DC.L     -1,-1
00394 00001240
00395 00001240 FFFFFFFFFFFFFFFF              DC.L     -1,-1 SPACE FOR DRIVE 24
00396 00001248 FFFFFFFFFFFFFFFF              DC.L     -1,-1
00397 00001250
00398 00001250 FFFFFFFFFFFFFFFF              DC.L     -1,-1 SPACE FOR DRIVE 25
00399 00001258 FFFFFFFFFFFFFFFF              DC.L     -1,-1
00400 00001260
00401 00001260 FFFFFFFFFFFFFFFF              DC.L     -1,-1 SPACE FOR DRIVE 26
00402 00001268 FFFFFFFFFFFFFFFF              DC.L     -1,-1
00403 00001270
00404 00001270 FFFFFFFFFFFFFFFF              DC.L     -1,-1 SPACE FOR DRIVE 27
00405 00001278 FFFFFFFFFFFFFFFF              DC.L     -1,-1
00406 00001280
00407 00001280                      *******************************************
00408 00001280                      * THE FOLLOWING LINE ***MUST*** REMAIN SO U
00409 00001280                      * DON'T HAVE TO REWRITE DATE INPUT ROUTINES
00410 00001280                      * WERE ORG'D IN INPUT FCB DATA AREA!!!
00411 00001400                               ORG      */1024*1024+1024      ORI
00412 00001400                      *******************************************
00413 00001400
00414 00001400                      *         LIB      1.TXUSRDTA         USER
00415 00001400 00000000                      EVEN
00416 00001400 00000260             USRFCB   DS.B     608 USER FCB
00417 00001660 00000080             LINBUF   DS.B     128 LINE BUFFER
00418 000016E0 08                   BACKSP   DC.B     $08 BACKSPACE CHARACTER
00419 000016E1 18                   DELETE   DC.B     $18 CONTROL-X
00420 000016E2 3A                   ENDLIN   DC.B     ':' END OF LINE
00421 000016E3 00                   SPACOM   DC.B     0 DEFAULT SPACE COMPRESSI
00422 000016E4 00                            DC.B     0
00423 000016E5 00                            DC.B     0
00424 000016E6 00                            DC.B     0
00425 000016E7 08                   BECHO    DC.B     8 BACKSPACE ECHO
00426 000016E8 00                   SYSDIR   DC.B     0 SYSTEM DIRECTORY LETTER
00427 000016E9 00                   WRKDIR   DC.B     0 WORK DIRECTORY LETTER (
00428 000016EA 1B                   ESCAPE   DC.B     $1B ESCAPE CHARACTER
00429 000016EB 00                   SYSTDR   DC.B     0 SYSTEM DEFAULT DRIVE
00430 000016EC 00                   WORKDR   DC.B     0 WORK DRIVE
00431 000016ED 01                   REPEAT   DC.B     1 REPEAT LINE
00432 000016EE 00                   MONTH    DC.B     0 SYSTEM MONTH
00433 000016EF 00                   DAY      DC.B     0 DAY
00434 000016F0 00                   YEAR     DC.B     0 AND YEAR
00435 000016F1 0D                   LASTRM   DC.B     $0D LAST TERMINATOR
00436 000016F2 00000000             USRTAB   DC.L     0 USER COMMAND TABLE
00437 000016F6 00000000             LPOINT   DC.L     0 LINBUF POINTER
00438 000016FA 00000000             BREAK    DC.L     0 ESCAPE RETURN ADDRESS
00439 000016FE 00                   CURRCH   DC.B     0 CURRENT CHARACTER FROM
00440 000016FF 00                   PRECHR   DC.B     0 PREVIOUS CHARACTER FROM
00441 00001700 00                            DC.B     0
00442 00001702 00000000             OFFSET   DC.L     0 LOAD OFFSET ADDRESS
00443 00001706 00                   XFERFL   DC.B     0 TRANSFER FLAG
00444 00001708 00000000             EXECAD   DC.L     0 EXECUTION ADDRESS FOR B
00445 0000170C 0000                 EXECSR   DC.W     0 SR USED FOR STARTING US
00446 0000170E 00                   ERRTYP   DC.B     0 LAST FCS ERROR CODE
00447 00001710 00000000             FOADDR   DC.L     0 FILE OUTPUT ADDRESS FOR
00448 00001714 00000000             FIADDR   DC.L     0 FILE INPUT ADDR FOR GET
00449 00001718 00                   SPECIO   DC.B     0 SPECIAL I/O FLAG
00450 00001719 00                   CMFLAG   DC.B     0 EXECSD FLAG =1 IF CALLE
00451 0000171A 01                   INDOS    DC.B     1 1 IF IN DOS, 0 IF IN US
00452 0000171B 00                            DC.B     0
00453 0000171C 01000000             MEMEND   DC.L     $01000000 END OF MEMORY (
00454 00001720 FF                   INECHO   DC.B     $FF INPUT ECHO FLAG (1=EC
00455 00001721 60                   FNCASE   DC.B     $60 USED BY GETNAM FOR UP
00456 00001722 01                   MAXDRV   DC.B     1 MAX DRV NUMBER
00457 00001723 01                            DC.B     1 UNUSED - WAS VERIFY FLA
00458 00001724 0000                 TRMASK   DC.W     0 TRACE MASK: $8000 FOR T
00459 00001726 00                   SEQNO    DC.B     0                       S
00460 00001727
00461 00001727                      ***** FOLLOWING NEEDED HERE BY PROMPT, BEEP
00462 00001727 534B2A444F533A202004 PROMPT   DC.B     'SK*DOS:  ',4
00463 00001731
00464 00001731                      ***** FOLLOWING NEEDED HERE BY RAMDISK ****
00465 00001731                      *     DOSID IS USED BY RAMDISK, DAMON, DEVI
00466 00001731                      * RAMFLG IS USED BY RAMDISK AND CACHE
00467 00001732 00000004             RAMFLG   DS.L     1                      RA
00468 00001736 00000004             RAMADD   DS.L     1                      ME
00469 0000173A 00000004             RAMTRS   DS.L     1                      SI
00470 0000173E 00050204             DOSID    DC.L     $00050204               D
00471 00001742 00000000             ERRVEC   DC.L     0                      US
00472 00001746 00001000             DOSORG   DC.L     COLDSV                 PO
00473 0000174A
00474 0000174A                      * FCB AREA - KEEP HERE SO DATE ROUTINES WRI
00475 0000174A
00476 0000174A 00000000                      EVEN
00477 0000174A 00000260             DIRFCB   DS.B     608 DIRECTORY FCB
00478 000019AA 00000260             SIRFCB   DS.B     608 SIR FCB
00479 00001C0A 00000260             OUTFCB   DS.B     608 FCB FOR DISK OUTPUT
00480 00001E6A 00000260             INFCB    DS.B     608 FCB FOR DISK INPUT
00481 000020CA
00482 000020CA                      * THE FOLLOWING NEEDED FOR I/O REDIRECTION
00483 000020CA
00484 000020CA 00                   DEVIN    DC.B     0                      IN
00485 000020CB 00                   DEVOUT   DC.B     0                      OU
00486 000020CC 01                   DEVERR   DC.B     1                      ER
00487 000020CD 02                   DEVPRT   DC.B     2                      PR
00488 000020CE 00000000                      EVEN     DEVICE 0 FOLLOWS:
00489 000020CE 00000004             DEVTAB   DS.L     1                      LO
00490 000020D2 00000004                      DS.L     1                      PO
00491 000020D6 00000004                      DS.L     1                      LE
00492 000020DA 00000004                      DS.L     1                      PO
00493 000020DE 00000004             D0INST   DS.L     1                      PO
00494 000020E2 00000004                      DS.L     1                      PO
00495 000020E6 00000004             D0NECH   DS.L     1                      PO
00496 000020EA 00000004                      DS.L     1                      PO
00497 000020EE 00000004                      DS.L     1                      PO
00498 000020F2 00000004                      DS.L     1                      PO
00499 000020F6 00000004                      DS.L     1                      PO
00500 000020FA 00000001             PLINES   DS.B     1                      PR
00501 000020FB 00000001             PWIDTH   DS.B     1                      WI
00502 000020FC 00000001             NULLWT   DS.B     1                      NU
00503 000020FD 00000001             SLINES   DS.B     1                      SK
00504 000020FE 00000001             PAUSEB   DS.B     1                      PA
00505 000020FF 00000001                      DS.B     1                      DE
00506 00002100 00000001             OCOLUM   DS.B     1                      CO
00507 00002101 00000001             BAUDRT   DS.B     1                      BA
00508 00002102 00000001             EOFILC   DS.B     1                      EN
00509 00002103 00000001             XOFFC    DS.B     1                      X-
00510 00002104 00000001             XONC     DS.B     1                      X-
00511 00002105 00000001                      DS.B     1
00512 00002106 00000004                      DS.L     1                      PO
00513 0000210A 00000004                      DS.L     1                      PO
00514 0000210E 00000004                      DS.L     1                      PO
00515 00002112 0000000C                      DS.L     3                      FO
00516 0000211E 00000230                      DS.L     140                    SP
00517 0000234E 434F4E53             DEVDEF   DC.L     'CONS'                 DE
00518 00002352 00002ADA                      DC.L     DEFNAM                 PO
00519 00002356 00000000                      DC.L     0                      LE
00520 0000235A 00001180                      DC.L     SINITV                 PO
00521 0000235E 00001186                      DC.L     STATVE                 PO
00522 00002362 00001192                      DC.L     INCHV                  PO
00523 00002366 00001198                      DC.L     KINPUV                 PO
00524 0000236A 000011A4                      DC.L     ICNTRL                 PO
00525 0000236E 000011C8                      DC.L     OSTATV                 PO
00526 00002372 0000118C                      DC.L     OUTCHV                 PO
00527 00002376 0000119E                      DC.L     OCNTRL                 PO
00528 0000237A 00                            DC.B     0                      PR
00529 0000237B 00                            DC.B     0                      WI
00530 0000237C 00                            DC.B     0                      NU
00531 0000237D 00                            DC.B     0                      SK
00532 0000237E 00                            DC.B     0                      PA
00533 0000237F 00                            DC.B     0                      DE
00534 00002380 00                   DEFCOL   DC.B     0                      CO
00535 00002381 00                            DC.B     0                      BA
00536 00002382 1A                            DC.B     $1A                    EN
00537 00002383 00                            DC.B     0                      X-
00538 00002384 00                            DC.B     0                      X-
00539 00002385 00                            DC.B     0
00540 00002386 000011D4                      DC.L     STATV1                 PT
00541 0000238A 000011DA                      DC.L     KINPV1                 PT
00542 0000238E 000011E0                      DC.L     KILLV1                 PT
00543 00002392 0000000000000000              DC.L     0,0,0                  FO
               00000000                               R FUTURE USE
00544 0000239E
00545 0000239E
00546 0000239E                      ***** FOLLOWING NEEDED HERE BY CACHE *****
00547 0000239E 00000000             CACFLG   DC.L     0                      RA
00548 000023A2 00000000             CACADD   DC.L     0                      ME
00549 000023A6
00550 000023A6                      * FCS STORAGE, PUT HERE FOR BENEFIT OF BASI
00551 000023A6 00000000             FBAPTR   DC.L     0                      PO
00552 000023AA 00000040             BAREA    DS.B     64                     64
00553 000023EA
00554 000023EA                      * ENVIRONMENT AREA FOR UNIX AND 'C' ADDICTS
00555 000023EA 50524F4D50543D534B2A ENVRON   DC.B     'PROMPT=SK*DOS:',4,$0D 16
               444F533A040D                            BYTES
00556 000023FA
00557 000023FA 000003F0                      DS.B     1008                   PL
00558 000027EA
00559 000027EA                      * AN RTS WHICH IS USED BY DEVICE.COM
00560 000027EA 4E75                          RTS
00561 000027EC
00562 000027EC                      * THE FOLLOWING IS HERE FOR JACK CRENSHAW'S
00563 000027EC 00000000             DATBEG   DC.L     0                   DATA
00564 000027F0 00000000             MEMBEG   DC.L     0                   MEMOR
00565 000027F4
00566 000027F4                      * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
00567 000027F4                      * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
00568 000027F4                      ***** PRECEDING MUST REMAIN WHERE IS BECAUS
00569 000027F4                      ***** BY OTHER ROUTINES AND PROGRAMS *****
00570 000027F4
00571 000027F4                      * THE FOLLOWING IS THE SYSTEM VARIABLE AREA
00572 000027F4
00573 000027F4 00000000                      EVEN
00574 000027F4 0D0D0D0D0D0D0D0D     LINBU2   DC.L     $0D0D0D0D,$0D0D0D0D,$0D0D
               0D0D0D0D0D0D0D0D                       0D0D,$0D0D0D0D
00575 00002804
00576 00002804 0D0D0D0D0D0D0D0D              DC.L     $0D0D0D0D,$0D0D0D0D,$0D0D
               0D0D0D0D0D0D0D0D                       0D0D,$0D0D0D0D
00577 00002814
00578 00002814 0D0D0D0D0D0D0D0D              DC.L     $0D0D0D0D,$0D0D0D0D,$0D0D
               0D0D0D0D0D0D0D0D                       0D0D,$0D0D0D0D
00579 00002824
00580 00002824 0D0D0D0D0D0D0D0D              DC.L     $0D0D0D0D,$0D0D0D0D,$0D0D
               0D0D0D0D0D0D0D0D                       0D0D,$0D0D0D0D
00581 00002834
00582 00002834 0D0D0D0D0D0D0D0D              DC.L     $0D0D0D0D,$0D0D0D0D,$0D0D
               0D0D0D0D0D0D0D0D                       0D0D,$0D0D0D0D
00583 00002844
00584 00002844 0D0D0D0D0D0D0D0D              DC.L     $0D0D0D0D,$0D0D0D0D,$0D0D
               0D0D0D0D0D0D0D0D                       0D0D,$0D0D0D0D
00585 00002854
00586 00002854 0D0D0D0D0D0D0D0D              DC.L     $0D0D0D0D,$0D0D0D0D,$0D0D
               0D0D0D0D0D0D0D0D                       0D0D,$0D0D0D0D
00587 00002864
00588 00002864 0D0D0D0D0D0D0D0D              DC.L     $0D0D0D0D,$0D0D0D0D,$0D0D
               0D0D0D0D0D0D0D0D                       0D0D,$0D0D0D0D
00589 00002874
00590 00002874 00000260             BATFCB   DS.B     608 FCB FOR BATCH FILES
00591 00002AD4 00000001             DEVTMP   DS.B     1 TEMPORARY DEVICE NUMBER
00592 00002AD5 00000001             DEVNOW   DS.B     1 DEVICE NUMBER CURRENTLY
00593 00002AD6 00000004             DEVADD   DS.L     1 ADDRESS OF CURRENT DEVI
00594 00002ADA 44656661756C74206472 DEFNAM   DC.B     'Default driver',4 DEFAUL
               6976657204                             T DRIVER NAME
00595 00002AE9
00596 00002AE9 01                   INIFLG   DC.B     1 INIT FLAG - 1 DO INIT O
00597 00002AEA 00000000             ESDRET   DC.L     0 EXECSD RETURN ADDRESS
00598 00002AEE 00000000             ESUSTP   DC.L     0 EXECSD USER STACK POINT
00599 00002AF2 00000000             ESSSTP   DC.L     0 EXECSD SYSTEM STACK POI
00600 00002AF6 00                   OPCODE   DC.B     0 OPCODE IN FCS9 AND 10
00601 00002AF7 00                   DIRTMP   DC.B     0 TEMPORARY DIR CHAR IN G
00602 00002AF8 00000000             FCBADD   DC.L     0 FCB ADDRESS
00603 00002AFC 00                   ORETRY   DC.B     0 OUTER RETRY COUNTER
00604 00002AFD 00                   IRETRY   DC.B     0 INNER RETRY COUNTER
00605 00002AFE 00000000             FCSJMP   DC.L     0 FCS TEMPORARY LOCATION
00606 00002B02 00                   EXSAVE   DC.B     0 EXTENSION CODE FOR GET
00607 00002B03 00                   SCFLAG   DC.B     0 SPACE COMPRESSION INDIC
00608 00002B04 00000000             CHKSUM   DC.L     0 CHECKSUM FOR DISK NAME
00609 00002B08 00000000             DRTPTR   DC.L     0 DRIVE TABLE DATA POINTE
00610 00002B0C 00                   DEFDRV   DC.B     0 DEFAULT DRIVE (WORKDR M
00611 00002B0D 00                   DEFDIR   DC.B     0 DEFAULT DIRECTORY (WORK
00612 00002B0E 00000000             SAVLPT   DC.L     0 LPOINT MEMORY WHILE SCA
00613 00002B12 00000000             LPTSAV   DC.L     0 LPOINT MEMORY DURING DO
00614 00002B16 0000                 SEQFLG   DC.W     0 SEQUENCE RESTART FLAG
00615 00002B18 00                   GETFLG   DC.B     0 GET FLAG: 0=CHECK LOAD
00616 00002B19 00                   TPDFLG   DC.B     0 <>0 TO DISABLE TYPEAHEA
00617 00002B1A
00618 00002B1A                      * THE FOLLOWING IS FCS STORAGE
00619 00002B1A 00000000             CURFCB   DC.L     0 ADDRESS OF CURRENT FCB
00620 00002B1E
00621 00002B1E                      * THE FOLLOWING IS FOR RANDOM FILES ONLY
00622 00002B1E 00000000             RANADD   DC.L     0 ADDR OF FCB
00623 00002B22 00                   FMDRV    DC.B     0 FILE MAP DRIVE
00624 00002B24 0000                 CRNTMP   DC.W     0 TEMPORARY CURRENT RECOR
00625 00002B26 0000                 FMTRSE   DC.W     0 FILE MAP TR-SEC
00626 00002B28 0000                 HDR2     DC.W     0 SECOND SECTOR HEADER
00627 00002B2A 00000000             HDR1     DC.L     0 FIRST SECTOR HEADER
00628 00002B2E 000001F8             FILMAP   DS.B     504 LATEST FILE MAP
00629 00002D26 000000               BLANK3   DC.B     0,0,0 MUST BE AFTER FILMA
00630 00002D29 00002C2A             FMP252   EQU      FILMAP+252 BEGINNING OF S
00631 00002D29 00002D26             FMP504   EQU      FILMAP+504 END OF SECOND
00632 00002D29
00633 00002D29                      * THE FOLLOWING IS THE DRIVE DATA TABLE
00634 00002D2A 0000                 DRTABL   DC.W     0 DRIVE 0: DISK NAME/DATE
00635 00002D2C 0000                          DC.W     0 FIRST FREE T-S FROM SIR
00636 00002D2E 0000                          DC.W     0 LAST FREE T-2
00637 00002D30 0000                          DC.W     0 NUMBER OF FREE SECTORS
00638 00002D32 0000                          DC.W     0 SAVE FOR MULTI USER
00639 00002D34 0000005A                      DS.B     90 SAME FOR 9 MORE DRIVES
00640 00002D8E
00641 00002D8E                      * THE FOLLOWING IS TO BE LOCATED INSIDE THE
00642 00002D8E                      * FCB'S SET ASIDE FOR INPIPE AND OUTPIPE, S
00643 00002D8E                      * TO TEMPORARILY STORE PROGRAM COUNTER IN C
00644 00002D8E
00645 00002D8E 00002D8E             CCEND    EQU      *                    STOR
00646 00002D8E
00647 00001C0A                               ORG      OUTFCB
00648 00001C0A
00649 00001C0A                      *         LIB      1.TXINIT
00650 00001C0A
00651 00001C0A                      * EQUATES
00652 00001C0A
00653 00001C0A 0000A01F             SDEXEC   EQU      $A01F
00654 00001C0A
00655 00001C0A                      * INITIALIZATION STAGE FOR SK-DOS
00656 00001C0A
00657 00001C0A                      * CLR INI FLAG SO THE NEXT COLDSTART
00658 00001C0A                      * DOESN'T COME HERE ANY MORE
00659 00001C0A
00660 00001C0A 423900002AE9         SDINIT   CLR.B    INIFLG             WON'T
00661 00001C10
00662 00001C10                      * NOW SET CPU TYPE FLAG
00663 00001C10
00664 00001C10 260F                          MOVE.L   A7,D3             SAVE ST
00665 00001C12 2E3900000010                  MOVE.L   $0010,D7          TEMP SA
00666 00001C18 43FA0026                      LEA      CPUTRE(PC),A1        GET
00667 00001C1C 23C900000010                  MOVE.L   A1,$0010          RESET V
00668 00001C22 4239000010C1                  CLR.B    CPUTYP             START
00669 00001C28 4E7A0001                      DC.L     $4E7A0001           MOVEC
00670 00001C2C 13FC0001000010C1              MOVE.B   #$01,CPUTYP       IF OK,
00671 00001C34 4E7A0002                      DC.L     $4E7A0002           MOVEC
00672 00001C38 13FC0002000010C1              MOVE.B   #$02,CPUTYP       IF OK,
00673 00001C40 23C700000010         CPUTRE   MOVE.L   D7,$0010          THEN RE
00674 00001C46 2E43                          MOVE.L   D3,A7             AND ALS
00675 00001C48
00676 00001C48                      * ROUTINE TO CHECK FOR END OF LOGICAL MEMOR
00677 00001C48
00678 00001C48 2879000010C8                  MOVE.L   BETRAP,A4         POINT T
00679 00001C4E 2614                          MOVE.L   (A4),D3           SAVE BU
00680 00001C50 4BF900001C96                  LEA      ENDMEM,A5
00681 00001C56 288D                          MOVE.L   A5,(A4)           POINT T
00682 00001C58
00683 00001C58 203900001018                  MOVE.L   OFFINI,D0         POINT A
00684 00001C5E 068000001000                  ADD.L    #$1000,D0          MOVE U
00685 00001C64 0280FFFFF000                  AND.L    #$FFFFF000,D0      AND TH
00686 00001C6A 2A40                          MOVE.L   D0,A5
00687 00001C6C 2C3C55555555                  MOVE.L   #$55555555,D6
00688 00001C72 2E3CAAAAAAAA                  MOVE.L   #$AAAAAAAA,D7     TWO TES
00689 00001C78 2A15                 MEMLOO   MOVE.L   (A5),D5           SAVE CO
00690 00001C7A 2A86                          MOVE.L   D6,(A5)           SAVE PA
00691 00001C7C BC95                          CMP.L    (A5),D6            COMPAR
00692 00001C7E 6616                          BNE.S    ENDMEM             DIDN'T
00693 00001C80 2A87                          MOVE.L   D7,(A5)           SAVE PA
00694 00001C82 BE95                          CMP.L    (A5),D7            COMPAR
00695 00001C84 6610                          BNE.S    ENDMEM             DIDN'T
00696 00001C86 2A85                          MOVE.L   D5,(A5)           RESTORE
00697 00001C88 DBFC00001000                  ADD.L    #$1000,A5          GO UP
00698 00001C8E BBF90000101C                  CMP.L    MEMINI,A5          GONE T
00699 00001C94 63E2                          BLS.S    MEMLOO             NO, GO
00700 00001C96 2883                 ENDMEM   MOVE.L   D3,(A4)           RESTORE
00701 00001C98 2C0D                          MOVE.L   A5,D6             ADDRESS
00702 00001C9A 0286FFFFF000                  AND.L    #$FFFFF000,D6      NEXT L
00703 00001CA0 048600000001                  SUB.L    #1,D6              TOP OF
00704 00001CA6 23C60000171C                  MOVE.L   D6,MEMEND         SAVE AS
00705 00001CAC
00706 00001CAC 49F900001D6C                  LEA      SIGNON,A4
00707 00001CB2 4EB900004210                  JSR      PSTRNG               PRIN
00708 00001CB8
00709 00001CB8                      * GET SIGNON DATE. DOES A JSR TO GETDAT VEC
00710 00001CB8                      * BRINGS US BACK TO ASKDAT ROUTINE BELOW. U
00711 00001CB8                      * GETDAT VECTOR WITH A JMP TO HIS OWN ROUTI
00712 00001CB8 4EB90000100C                  JSR      GETDAT               GO A
00713 00001CBE
00714 00001CBE                      * GO OPEN 'STARTUP.BAT' FILE
00715 00001CBE 49FA0BB4                      LEA      BATFCB(PC),A4        POIN
00716 00001CC2 23CC00002B1A                  MOVE.L   A4,CURFCB         SETUP C
00717 00001CC8 297900001E4E0004              MOVE.L   STNAME,FCBNAM(A4) MOVE 'S
00718 00001CD0 297900001E520008              MOVE.L   STNAME+4,FCBNAM+4(A4)
00719 00001CD8 397900001E56000C              MOVE.W   STNAME+8,FCBNAM+8(A4)
00720 00001CE0 197900001E58000E              MOVE.B   STNAME+10,FCBNAM+10(A4)
00721 00001CE8 1979000016EB0003              MOVE.B   SYSTDR,FCBDRV(A4) SELECT
00722 00001CF0 4EB90000540A                  JSR      FCS1                 GO O
00723 00001CF6 6712                          BEQ.S    STRTOK             IF STA
00724 00001CF8 1A2C0001                      MOVE.B   FCBERR(A4),D5     CHECK E
00725 00001CFC 0C050004                      CMP.B    #4,D5              IS IT
00726 00001D00 67001338                      BEQ.L    WARMS              YES, J
00727 00001D04 4EF90000352E                  JMP      BATBAD
00728 00001D0A
00729 00001D0A                      * FOUND STARTUP.BAT FILE, GO DO IT
00730 00001D0A 4EB900005792         STRTOK   JSR      FCS4                 IMME
00731 00001D10 6600181C                      BNE.L    BATBAD
00732 00001D14 197C00010002                  MOVE.B   #1,FCBRW(A4)      MAKE DO
00733 00001D1A 4EF9000034B2                  JMP      BATLOO               THEN
00734 00001D20
00735 00001D20                      * ASKDAT ROUTINE - CALLED VIA GETDAT ONLY I
00736 00001D20                      * SUBSTITUTED HIS OWN ASKDAT ROUTINE
00737 00001D20 49F900001E22         ASKDAT   LEA      DATERQ,A4
00738 00001D26 4EB900004210                  JSR      PSTRNG               ASK
00739 00001D2C 4EB900004120                  JSR      INLINE               INPU
00740 00001D32 207C000016EE                  MOVE.L   #MONTH,A0         POINT T
00741 00001D38 6118                          BSR.S    GTDATA GET MONTH
00742 00001D3A 6116                          BSR.S    GTDATA GET DAY
00743 00001D3C 6114                          BSR.S    GTDATA GET YEAR
00744 00001D3E 49F900001E59                  LEA      THANKS,A4
00745 00001D44 4EB900004210                  JSR      PSTRNG               PRIN
00746 00001D4A 4EB900004224                  JSR      PCRLF
00747 00001D50 4E75                          RTS
00748 00001D52
00749 00001D52                      * GTDATA ROUTINE TO INPUT AND STORE DATE
00750 00001D52 4EB9000042CC         GTDATA   JSR      DECIN                GET
00751 00001D58 6408                          BCC.S    DATEOK               OK N
00752 00001D5A DFFC00000004         DATENG   ADD.L    #4,A7              REMOVE
00753 00001D60 60BE                          BRA.S    ASKDAT             AND AS
00754 00001D62 0C050063             DATEOK   CMP.B    #99,D5               SHOU
00755 00001D66 62F2                          BHI.S    DATENG             ELSE I
00756 00001D68 10C5                          MOVE.B   D5,(A0)+          SAVE IT
00757 00001D6A 4E75                          RTS
00758 00001D6C
00759 00001D6C 0D0A                 SIGNON   DC.B     $D,$A CR-LF
00760 00001D6E 20202020202020202020          DC.B     '                  Welcom
               20202020202020205765                   e to'
               6C636F6D6520746F
00761 00001D8A
00762 00001D8A
00763 00001D8A 0D0A                          DC.B     $D,$A
00764 00001D8C 20202020202020202020          DC.B     '                  SK*DOS
               2020202020202020534B                    (R)'
               2A444F5320285229
00765 00001DA8
00766 00001DA8
00767 00001DA8 0D0A                          DC.B     $D,$A
00768 00001DAA 20202020202020202020          DC.B     '                 Version
               20202020202020566572                     3.3'
               73696F6E2020332E33
00769 00001DC7
00770 00001DC7
00771 00001DC7 0D0A                          DC.B     $D,$A
00772 00001DC9 202020436F7079726967          DC.B     '   Copyright (C) 1986 -
               68742028432920313938                   1990 by Peter A. Stark'
               36202D20313939302062
               7920506574657220412E
               20537461726B
00773 00001DF7
00774 00001DF7
00775 00001DF7
00776 00001DF7
00777 00001DF7 0D0A                          DC.B     $D,$A
00778 00001DF9 20202020202020202053          DC.B     '         Star-K Software
               7461722D4B20536F6674                    Systems Corp.'
               77617265205379737465
               6D7320436F72702E
00779 00001E1F
00780 00001E1F
00781 00001E1F
00782 00001E1F 0D0A04                        DC.B     $D,$A,4
00783 00001E22 0D0A                 DATERQ   DC.B     $D,$A
00784 00001E24 506C6561736520656E74          DC.B     "Please enter today's dat
               657220746F6461792773                   e (MM,DD,YY): "
               206461746520284D4D2C
               44442C5959293A20
00785 00001E4A
00786 00001E4A
00787 00001E4A
00788 00001E4A 04                            DC.B     4
00789 00001E4C 0000                 DUMMY    DC.W     0                   GUARA
00790 00001E4E 53544152545550       STNAME   DC.B     'STARTUP'           START
00791 00001E55 00                            DC.B     0
00792 00001E56 424154                        DC.B     'BAT'
00793 00001E59 5468616E6B20796F752E THANKS   DC.B     'Thank you.',4
               04
00794 00001E64
00795 00001E64
00796 00002D8E                               ORG      CCEND            CONTINUE
00797 00002D8E
00798 00002D8E 00000000                      EVEN
00799 00002D8E
00800 00002D8E                      *         LIB      1.TXTRAP           TRAP
00801 00002D8E                      * $AXXX TRAP ENTRY AND PROCESSING
00802 00002D8E
00803 00002D8E 33D70000170C         SDTRAP   MOVE.W   (A7),EXECSR         SAVE
00804 00002D94 42390000170E                  CLR.B    ERRTYP               AND
00805 00002D9A 4287                          CLR.L    D7                   CLEA
00806 00002D9C
00807 00002D9C                      *           AFTER A 1010 TRAP, THE STACKED
00808 00002D9C                      *           1010 TRAP, RATHER THAN THE NEXT
00809 00002D9C 06AF000000020002              ADD.L    #2,2(SP)             INCR
00810 00002DA4
00811 00002DA4 2C6F0002                      MOVE.L   2(SP),A6            GET P
00812 00002DA8 1E2EFFFF                      MOVE.B   -1(A6),D7           CODE
00813 00002DAC 6714                          BEQ.S    NOSVFC               DON'
00814 00002DAE 0C07001E                      CMP.B    #30,D7
00815 00002DB2 640E                          BCC.S    NOSVFC               OR C
00816 00002DB4 23CC00002B1A                  MOVE.L   A4,CURFCB           ELSE
00817 00002DBA 13FC00010000171A              MOVE.B   #1,INDOS            AND M
00818 00002DC2
00819 00002DC2 0C070045             NOSVFC   CMP.B    #69,D7               CHEC
00820 00002DC6 6222                          BHI.S    TRAPNG               IF T
00821 00002DC8 E587                          ASL.L    #2,D7                MULT
00822 00002DCA 2C7C00002E02                  MOVE.L   #TRPTAB,A6          POINT
00823 00002DD0 2C767000                      MOVE.L   0(A6,D7),A6          POIN
00824 00002DD4 4E96                          JSR      (A6)                   GO
00825 00002DD6
00826 00002DD6                      * UPON RETURN FROM FUNCTION, CC CONTAINS PO
00827 00002DD6                      * SO PUT IT ON USER'S STACK FOR RETURN TO H
00828 00002DD6
00829 00002DD6 40C7                          MOVE.W   SR,D7               MOVE
00830 00002DD8 1F470001                      MOVE.B   D7,1(A7)            PUT C
00831 00002DDC 2C7C00001400                  MOVE.L   #USRFCB,A6          ALWAY
00832 00002DE2 42390000171A                  CLR.B    INDOS                NO L
00833 00002DE8 4E73                          RTE      AND RETURN TO HIM
00834 00002DEA
00835 00002DEA                      * FOR INVALID TRAP AX CALL, PRINT ERROR MES
00836 00002DEA
00837 00002DEA 287C00001400         TRAPNG   MOVE.L   #USRFCB,A4          POINT
00838 00002DF0 197C006E0001                  MOVE.B   #110,FCBERR(A4)     PUT E
00839 00002DF6 4EB9000043CE                  JSR      PERROR                 GO
00840 00002DFC 4EF90000303A                  JMP      WARMS                  AN
00841 00002E02
00842 00002E02                      * TRAP FUNCTION TABLE.
00843 00002E02
00844 00002E02 00002F1A             TRPTAB   DC.L     TRPRTS             00 RET
00845 00002E06 00004F10                      DC.L     FREADO             01 REA
00846 00002E0A 00005054                      DC.L     FWRITO             02 WRI
00847 00002E0E 00002DEA                      DC.L     TRAPNG             03
00848 00002E12 00002DEA                      DC.L     TRAPNG             04
00849 00002E16 0000540A                      DC.L     FCS1               05 FOP
00850 00002E1A 00005530                      DC.L     FCS2               06 FOP
00851 00002E1E 00005758                      DC.L     FCS3               07 FOP
00852 00002E22 00005792                      DC.L     FCS4               08 FCL
00853 00002E26 00004E90                      DC.L     FCSCLS             09
00854 00002E2A 00005A40                      DC.L     FCS5               10 FRE
00855 00002E2E 00005A6C                      DC.L     FCS6               11 DIR
00856 00002E32 00005A7E                      DC.L     FCS16              12 SIS
00857 00002E36 00005A86                      DC.L     FCS7               13 DSR
00858 00002E3A 00005AF8                      DC.L     FCS11              14 DSW
00859 00002E3E 00005B68                      DC.L     FCS12              15 FDE
00860 00002E42 00005C60                      DC.L     FCS13              16 FRE
00861 00002E46 00005D0C                      DC.L     FCS15              17 FSK
00862 00002E4A 00004DC0                      DC.L     FINDEV             18 FIN
00863 00002E4E 00002DEA                      DC.L     TRAPNG             19
00864 00002E52 00005EEE                      DC.L     FCS23              20 FRR
00865 00002E56 00005ECE                      DC.L     FCS22              21 FRB
00866 00002E5A 00005D56                      DC.L     FCS17              22 FRG
00867 00002E5E 00005D64                      DC.L     FCS18              23 FRP
00868 00002E62 00002DEA                      DC.L     TRAPNG             24
00869 00002E66 00002DEA                      DC.L     TRAPNG             25
00870 00002E6A 00005D9C                      DC.L     FCS20              26 FDR
00871 00002E6E 00004E78                      DC.L     FCSINI             27 FCS
00872 00002E72 00005F8C                      DC.L     FCS9               28 SRE
00873 00002E76 00005FD4                      DC.L     FCS10              29 SWR
00874 00002E7A
00875 00002E7A                      * SAVE CURFCB FOR ALL ABOVE, EXCEPT VPOINT
00876 00002E7A                      * DON'T SAVE IT FOR ALL BELOW
00877 00002E7A
00878 00002E7A 0000303A                      DC.L     WARMS              30
00879 00002E7E 000031C4                      DC.L     EXECSD             31
00880 00002E82 00006240                      DC.L     RESIO              32
00881 00002E86 0000472E                      DC.L     RESTRP             33 RES
00882 00002E8A 00003652                      DC.L     LOAD               34
00883 00002E8E 0000457E                      DC.L     GETNAM             35
00884 00002E92 00006254                      DC.L     DEFEXT             36
00885 00002E96 000031AC                      DC.L     RENTER             37 RE-
00886 00002E9A 00006036                      DC.L     DIREPH             38 DIS
00887 00002E9E 0000603E                      DC.L     DISEPH             39 DIS
00888 00002EA2 0000486C                      DC.L     ICNTRS             40 INP
00889 00002EA6 000049E4                      DC.L     GETCHS             41
00890 00002EAA 00004984                      DC.L     KINPUS             42 GET
00891 00002EAE 0000493A                      DC.L     STATVS             43
00892 00002EB2 00004120                      DC.L     INLINE             44
00893 00002EB6 00004088                      DC.L     GETNX              45
00894 00002EBA 000040D2                      DC.L     CLASF              46
00895 00002EBE 000042D4                      DC.L     HEXIN              47
00896 00002EC2 000042CC                      DC.L     DECIN              48
00897 00002EC6 000047C6                      DC.L     TOUPPR             49 CON
00898 00002ECA 000048E0                      DC.L     OCNTRS             50 OUT
00899 00002ECE 00004AFA                      DC.L     PUTCHS             51
00900 00002ED2 00004224                      DC.L     PCRLF              52
00901 00002ED6 00004210                      DC.L     PSTRNG             53 PST
00902 00002EDA 00004212                      DC.L     PDATA              54 PNS
00903 00002EDE 000043CE                      DC.L     PERROR             55
00904 00002EE2 00004244                      DC.L     OUT5D              56
00905 00002EE6 00004236                      DC.L     OUT10D             57
00906 00002EEA 00004364                      DC.L     OUT2H              58
00907 00002EEE 0000435A                      DC.L     OUT4H              59
00908 00002EF2 00004350                      DC.L     OUT8H              60
00909 00002EF6 0000496E                      DC.L     OSTATS             61 CHE
00910 00002EFA 0000410A                      DC.L     SEENXT             62 LOO
00911 00002EFE 000011CE                      DC.L     GETDTV             63 GET
00912 00002F02 00004788                      DC.L     INTOFF             64 TUR
00913 00002F06 000047A4                      DC.L     INTBON             65 INT
00914 00002F0A 00004958                      DC.L     STATU1             66 STA
00915 00002F0E 000049B8                      DC.L     KINPU1             67 KBD
00916 00002F12 00004E62                      DC.L     KILLU1             68 KIL
00917 00002F16 000047E4                      DC.L     FNPRNT             69 PRI
00918 00002F1A
00919 00002F1A                      * DUMMY RTS FOR VPOINT
00920 00002F1A
00921 00002F1A 4E75                 TRPRTS   RTS      AND RETURN
00922 00002F1C
00923 00002F1C                      * OTHER EXCEPTION VECTORS, USED ONLY IF TRP
00924 00002F1C
00925 00002F1C 6160                 OTRAPS   BSR.S    EXCEPT             2 = BU
00926 00002F1E 615E                          BSR.S    EXCEPT             3 = AD
00927 00002F20 615C                          BSR.S    EXCEPT             4 = IL
00928 00002F22 615A                          BSR.S    EXCEPT             5 = ZE
00929 00002F24 6158                          BSR.S    EXCEPT             6 = CH
00930 00002F26 6156                          BSR.S    EXCEPT             7 = TR
00931 00002F28 6154                          BSR.S    EXCEPT             8 = PR
00932 00002F2A 6152                          BSR.S    EXCEPT             9 = TR
00933 00002F2C 6150                          BSR.S    EXCEPT             10 = U
00934 00002F2E 614E                          BSR.S    EXCEPT             11 = L
00935 00002F30 614C                          BSR.S    EXCEPT             12 = U
00936 00002F32 614A                          BSR.S    EXCEPT             13 = U
00937 00002F34 6148                          BSR.S    EXCEPT             14 = F
00938 00002F36 6146                          BSR.S    EXCEPT             15 = U
00939 00002F38 6144                          BSR.S    EXCEPT             16 = U
00940 00002F3A 6142                          BSR.S    EXCEPT             17 = U
00941 00002F3C 6140                          BSR.S    EXCEPT             18 = U
00942 00002F3E 613E                          BSR.S    EXCEPT             19 = U
00943 00002F40 613C                          BSR.S    EXCEPT             20 = U
00944 00002F42 613A                          BSR.S    EXCEPT             21 = U
00945 00002F44 6138                          BSR.S    EXCEPT             22 = U
00946 00002F46 6136                          BSR.S    EXCEPT             23 = U
00947 00002F48 6134                          BSR.S    EXCEPT             24 = S
00948 00002F4A 6132                          BSR.S    EXCEPT             25 = L
00949 00002F4C 6130                          BSR.S    EXCEPT             26 = L
00950 00002F4E 612E                          BSR.S    EXCEPT             27 = L
00951 00002F50 612C                          BSR.S    EXCEPT             28 = L
00952 00002F52 612A                 LVL5IA   BSR.S    EXCEPT             29 = L
00953 00002F54 6128                          BSR.S    EXCEPT             30 = L
00954 00002F56 6126                          BSR.S    EXCEPT             31 = L
00955 00002F58 6124                          BSR.S    EXCEPT             32 = T
00956 00002F5A 6122                          BSR.S    EXCEPT             33 = T
00957 00002F5C 6120                          BSR.S    EXCEPT             34 = T
00958 00002F5E 611E                          BSR.S    EXCEPT             35 = T
00959 00002F60 611C                          BSR.S    EXCEPT             36 = T
00960 00002F62 611A                          BSR.S    EXCEPT             37 = T
00961 00002F64 6118                          BSR.S    EXCEPT             38 = T
00962 00002F66 6116                          BSR.S    EXCEPT             39 = T
00963 00002F68 6114                          BSR.S    EXCEPT             40 = T
00964 00002F6A 6112                          BSR.S    EXCEPT             41 = T
00965 00002F6C 6110                          BSR.S    EXCEPT             42 = T
00966 00002F6E 610E                          BSR.S    EXCEPT             43 = T
00967 00002F70 610C                          BSR.S    EXCEPT             44 = T
00968 00002F72 610A                          BSR.S    EXCEPT             45 = T
00969 00002F74 6108                          BSR.S    EXCEPT             46 = T
00970 00002F76 6106                          BSR.S    EXCEPT             47 = T
00971 00002F78 6104                          BSR.S    EXCEPT             48-63
00972 00002F7A 6102                          BSR.S    EXCEPT             64-255
00973 00002F7C 4E71                          NOP
00974 00002F7E
00975 00002F7E                      * PROCESSING FOR ABOVE EXCEPTION VECTORS. O
00976 00002F7E                      * ADDRESS (ON STACK) POINTS TO LOCATION PAS
00977 00002F7E
00978 00002F7E 2E1F                 EXCEPT   MOVE.L   (A7)+,D7          GET RET
00979 00002F80 048700000002                  SUB.L    #2,D7              POINT
00980 00002F86 048700002F1C                  SUB.L    #OTRAPS,D7         SUBTRA
00981 00002F8C E28F                          LSR.L    #1,D7              CONVER
00982 00002F8E 06070066                      ADD.B    #102,D7            ERROR
00983 00002F92 49F900001400                  LEA      USRFCB,A4            POIN
00984 00002F98 19470001                      MOVE.B   D7,FCBERR(A4)     PUT INT
00985 00002F9C 4EB9000043CE                  JSR      PERROR               GO P
00986 00002FA2 4EF90000303A                  JMP      WARMS                AND
00987 00002FA8
00988 00002FA8 00000000                      EVEN
00989 00002FA8
00990 00002FA8                      *         LIB      1.TXCMDPRO
00991 00002FA8
00992 00002FA8                      * COMMAND PROCESSOR CODE FOLLOWS
00993 00002FA8
00994 00002FA8 2E7C00001000         COLDS    MOVE.L   #STACK,A7         INIT DO
00995 00002FAE 2C7C00000E00                  MOVE.L   #USTACK,A6        INIT US
00996 00002FB4 4E66                          MOVE.L   A6,USP
00997 00002FB6 40C7                          MOVE.W   SR,D7             SR UPON
00998 00002FB8 02470700                      AND.W    #$0700,D7          RETAIN
00999 00002FBC 33C70000170C                  MOVE.W   D7,EXECSR         SAVE AS
01000 00002FC2 13FC00010000171A              MOVE.B   #1,INDOS          MARK TH
01001 00002FCA 423900001151                  CLR.B    FOTHER             DRIVER
01002 00002FD0 4EB900001180                  JSR      SINITV               INIT
01003 00002FD6 4EB900001100                  JSR      DICOLD               INIT
01004 00002FDC 4EB900001048                  JSR      SECCOL               INIT
01005 00002FE2 4EB900006240                  JSR      RESIO                RESE
01006 00002FE8 4EB90000472E                  JSR      RESTRP               RESE
01007 00002FEE 4EB900004D66                  JSR      RESDEV               RESE
01008 00002FF4 23FC00000000000023A6          MOVE.L   #0,FBAPTR         ERASE F
01009 00002FFE 423900001719                  CLR.B    CMFLAG             FORCE
01010 00003004 423900001706                  CLR.B    XFERFL             NO TRA
01011 0000300A 423900002B18                  CLR.B    GETFLG             GET DE
01012 00003010 4EB900004E78                  JSR      FCSINI               INIT
01013 00003016 600000C8                      BRA.L    WARMS2
01014 0000301A
01015 0000301A                      * RE-ENTER WARMSTART VIA TRAP TO MAKE SURE
01016 0000301A                      * SUPERVISOR STATE
01017 0000301A
01018 0000301A 2039000000BC         WARMVT   MOVE.L   $BC,D0            SAVE PR
01019 00003020 41F90000302E                  LEA      WARVT1,A0            POIN
01020 00003026 23C8000000BC                  MOVE.L   A0,$BC            SAVE AS
01021 0000302C 4E4F                          TRAP     #15                 NOW T
01022 0000302E 23C0000000BC         WARVT1   MOVE.L   D0,$BC            RESTORE
01023 00003034 4EB900001180                  JSR      SINITV               INIT
01024 0000303A                      * NOW DROP THROUGH TO ACTUAL WARMS
01025 0000303A
01026 0000303A 427900001724         WARMS    CLR.W    TRMASK             NORMAL
01027 00003040 23FC00001006000016FA WARMTR   MOVE.L   #WARMSV,BREAK     INITIAL
01028 0000304A 2C7C00000E00                  MOVE.L   #USTACK,A6        INIT US
01029 00003050 4E66                          MOVE.L   A6,USP
01030 00003052 13FC000500001150              MOVE.B   #5,NRETRY         SET FOR
01031 0000305A 423900001151                  CLR.B    FOTHER             DRIVER
01032 00003060 4EB900006240                  JSR      RESIO                RESE
01033 00003066 4EB90000472E                  JSR      RESTRP               RESE
01034 0000306C 4EB900004D94                  JSR      RESDV1               PART
01035 00003072 2A3900001018                  MOVE.L   OFFINI,D5         GET "EN
01036 00003078 0685000000FF                  ADD.L    #$00FF,D5          SET OF
01037 0000307E 0285FFFFFF00                  AND.L    #$FFFFFF00,D5      ... PA
01038 00003084 23C500001702                  MOVE.L   D5,OFFSET
01039 0000308A 1A39000016F1                  MOVE.B   LASTRM,D5         PREVIOU
01040 00003090 BA39000016E2                  CMP.B    ENDLIN,D5          DOING
01041 00003096 6614                          BNE.S    WARMS1               NO,
01042 00003098 2A39000016F6         WARMS0   MOVE.L   LPOINT,D5
01043 0000309E 06450001                      ADD      #1,D5                STEP
01044 000030A2 23C5000016F6                  MOVE.L   D5,LPOINT
01045 000030A8 60000102                      BRA.L    MLOOP1             AND GO
01046 000030AC
01047 000030AC 4A3900001719         WARMS1   TST.B    CMFLAG             CHECK
01048 000030B2 672C                          BEQ.S    WARMS2             NO, SO
01049 000030B4 423900001719                  CLR.B    CMFLAG             YES, S
01050 000030BA 2C7900002B12                  MOVE.L   LPTSAV,A6
01051 000030C0 23CE000016F6                  MOVE.L   A6,LPOINT         RESTORE
01052 000030C6 2C7900002AEE                  MOVE.L   ESUSTP,A6
01053 000030CC 4E66                          MOVE.L   A6,USP            RESET U
01054 000030CE 2E7900002AF2                  MOVE.L   ESSSTP,A7         RESET S
01055 000030D4 4CDF1F1F                      MOVEM.L  (A7)+,D0-D4/A0-A4 RESTORE
01056 000030D8 1A390000170E                  MOVE.B   ERRTYP,D5
01057 000030DE 4E75                          RTS      AND RETURN TO TRAP ROUTIN
01058 000030E0
01059 000030E0 2E7C00001000         WARMS2   MOVE.L   #STACK,A7         INIT DO
01060 000030E6 4EB900001106                  JSR      DIWARM               WARM
01061 000030EC 4EB90000105C                  JSR      SECWAR
01062 000030F2 2C3900001018                  MOVE.L   OFFINI,D6         GET "EN
01063 000030F8 0686000000FF                  ADD.L    #$00FF,D6          SET OF
01064 000030FE 0286FFFFFF00                  AND.L    #$FFFFFF00,D6      ... PA
01065 00003104 23C600001702                  MOVE.L   D6,OFFSET
01066 0000310A 42390000170E                  CLR.B    ERRTYP             NO ERR
01067 00003110 423900002B18                  CLR.B    GETFLG             GET DE
01068 00003116 13F9000016EC00002B0C          MOVE.B   WORKDR,DEFDRV     DRIVE U
01069 00003120 13F9000016E900002B0D          MOVE.B   WRKDIR,DEFDIR     AND DIR
01070 0000312A 4EB900004E90                  JSR      FCSCLS               CLOS
01071 00003130 13FC00FF00001720              MOVE.B   #$FF,INECHO       ENABLE
01072 00003138 33FC0D0D000016FE              MOVE.W   #$0D0D,CURRCH     CURR &
01073 00003140 4A3900002AE9                  TST.B    INIFLG             CHECK
01074 00003146 6706                          BEQ.S    MLOOP              NO IF
01075 00003148 4EB900001C0A                  JSR      SDINIT               YES
01076 0000314E
01077 0000314E                      * MAIN COMMAND LOOP
01078 0000314E
01079 0000314E 1A39000010C1         MLOOP    MOVE.B   CPUTYP,D5         CHECK C
01080 00003154 0C050002                      CMP.B    #2,D5              IS IT
01081 00003158 6614                          BNE.S    MLOOP0             NO, CO
01082 0000315A 2A3C00000008                  MOVE.L   #$8,D5            YES, DI
01083 00003160 4E7B5002                      DC.L     $4E7B5002           MOVEC
01084 00003164 2A3C00000001                  MOVE.L   #$1,D5            THEN EN
01085 0000316A 4E7B5002                      DC.L     $4E7B5002           MOVEC
01086 0000316E 287C00001727         MLOOP0   MOVE.L   #PROMPT,A4
01087 00003174 4EB900004210                  JSR      PSTRNG               PRIN
01088 0000317A 13FC00010000171A              MOVE.B   #1,INDOS          MARK TH
01089 00003182 49FAF670                      LEA      LINBU2(PC),A4
01090 00003186 4BFAE4D8                      LEA      LINBUF(PC),A5
01091 0000318A 3A3C001F                      MOVE.W   #31,D5
01092 0000318E 2ADC                 MTLBUF   MOVE.L   (A4)+,(A5)+       RESTORE
01093 00003190 51CDFFFC                      DBRA     D5,MTLBUF
01094 00003194 4EB900004120                  JSR      INLINE               INPU
01095 0000319A 49FAE4C4                      LEA      LINBUF(PC),A4
01096 0000319E 4BFAF654                      LEA      LINBU2(PC),A5
01097 000031A2 3A3C001F                      MOVE.W   #31,D5
01098 000031A6 2ADC                 MFLBUF   MOVE.L   (A4)+,(A5)+       SAVE LI
01099 000031A8 51CDFFFC                      DBRA     D5,MFLBUF
01100 000031AC 2A79000016F6         MLOOP1   MOVE.L   LPOINT,A5
01101 000031B2 000031AC             RENTER   EQU      MLOOP1               RE-E
01102 000031B2 1A15                          MOVE.B   (A5),D5           GET FIR
01103 000031B4 0C05000D                      CMP.B    #$0D,D5            CR?
01104 000031B8 6794                          BEQ.S    MLOOP              YES, S
01105 000031BA 0C050020                      CMP.B    #$20,D5            SPACE?
01106 000031BE 6700FED8                      BEQ      WARMS0               STEP
01107 000031C2 602C                          BRA.S    DOCMN0             EXECUT
01108 000031C4
01109 000031C4
01110 000031C4 48E7F8F8             EXECSD   MOVEM.L  D0-D4/A0-A4,-(A7) EXTERNA
01111 000031C8 13FC000100001719              MOVE.B   #1,CMFLAG
01112 000031D0 4E6E                          MOVE.L   USP,A6
01113 000031D2 23CE00002AEE                  MOVE.L   A6,ESUSTP         SAVE US
01114 000031D8 23CF00002AF2                  MOVE.L   A7,ESSSTP         SAVE SY
01115 000031DE 2C79000016F6                  MOVE.L   LPOINT,A6
01116 000031E4 23CE00002B12                  MOVE.L   A6,LPTSAV         SAVE OR
01117 000031EA 23CC000016F6                  MOVE.L   A4,LPOINT         POINTS
01118 000031F0 42390000170E         DOCMN0   CLR.B    ERRTYP             ERASE
01119 000031F6 2A79000016F6                  MOVE.L   LPOINT,A5         POINT X
01120 000031FC 4EB90000471E                  JSR      SKIPSP               SKIP
01121 00003202 0C05000D                      CMP.B    #$0D,D5            IS IT
01122 00003206 6708                          BEQ.S    DOCMER             YES, S
01123 00003208 BA39000016E2                  CMP.B    ENDLIN,D5          END LI
01124 0000320E 660C                          BNE.S    DOCMN2             NO, SO
01125 00003210
01126 00003210 13FC001A0000170E     DOCMER   MOVE.B   #26,ERRTYP        COMMAND
01127 00003218 6000023A                      BRA      DOQUIT               COPY
01128 0000321C
01129 0000321C 23F9000016F600002B0E DOCMN2   MOVE.L   LPOINT,SAVLPT     SAVE LI
01130 00003226
01131 00003226                      * AT THIS POINT, SCAN COMMAND LINE FOR > OR
01132 00003226
01133 00003226 2079000016F6         SCANLO   MOVE.L   LPOINT,A0         FIRST C
01134 0000322C 1A18                 SCNLO1   MOVE.B   (A0)+,D5          GET NEX
01135 0000322E 0C05003C                      CMP.B    #$3C,D5            < ?
01136 00003232 671C                          BEQ.S    INPIPE             YES, G
01137 00003234 0C05003E                      CMP.B    #$3E,D5            > ?
01138 00003238 670000A6                      BEQ.L    OUTPIP             YES, G
01139 0000323C 0C05000D                      CMP.B    #$0D,D5            CR?
01140 00003240 670000F8                      BEQ.L    NOREDI             YES, N
01141 00003244 BA39000016E2                  CMP.B    ENDLIN,D5          END LI
01142 0000324A 670000EE                      BEQ.L    NOREDI             YES, N
01143 0000324E 60DC                          BRA.S    SCNLO1             ELSE G
01144 00003250                      * FOR INPUT REDIRECTION:
01145 00003250 23C8000016F6         INPIPE   MOVE.L   A0,LPOINT         LPOINT
01146 00003256 49FAEC12                      LEA      INFCB(PC),A4         POIN
01147 0000325A 4EB90000457E                  JSR      GETNAM               GET
01148 00003260 65AE                          BCS.S    DOCMER             NAME E
01149 00003262 183C000E                      MOVE.B   #14,D4            DEFAULT
01150 00003266 4EB900006254                  JSR      DEFEXT
01151 0000326C 182C0003                      MOVE.B   FCBDRV(A4),D4     DRIVE N
01152 00003270 04040010                      SUB.B    #$10,D4            CHECK
01153 00003274 6224                          BHI.S    ISINDV             IF IT'
01154 00003276 23CC00002B1A                  MOVE.L   A4,CURFCB
01155 0000327C 42390000170E                  CLR.B    ERRTYP
01156 00003282 4EB90000540A                  JSR      FCS1                 ELSE
01157 00003288 6686                          BNE.S    DOCMER             IF ERR
01158 0000328A 23CC00001714                  MOVE.L   A4,FIADDR         INPUT F
01159 00003290 13FC0008000020CA              MOVE.B   #8,DEVIN          INPUT D
01160 00003298 6006                          BRA.S    REMOVE             AND TH
01161 0000329A 13C4000020CA         ISINDV   MOVE.B   D4,DEVIN          INPUT D
01162 000032A0 91FC00000001         REMOVE   SUB.L    #1,A0              POINT
01163 000032A6 B1FC00001660                  CMP.L    #LINBUF,A0         AT BEG
01164 000032AC 6714                          BEQ.S    REMOV1             YES, S
01165 000032AE 0C280020FFFF                  CMP.B    #$20,-1(A0)        PRECED
01166 000032B4 6708                          BEQ.S    REMOV0             YES, R
01167 000032B6 0C28002CFFFF                  CMP.B    #$2C,-1(A0)        PRECED
01168 000032BC 6604                          BNE.S    REMOV1             NO, SO
01169 000032BE 41E8FFFF             REMOV0   LEA      -1(A0),A0            BACK
01170 000032C2 2279000016F6         REMOV1   MOVE.L   LPOINT,A1         AND PAS
01171 000032C8 10D9                 REMOLO   MOVE.B   (A1)+,(A0)+       MOVE A
01172 000032CA B3FC000016E0                  CMP.L    #LINBUF+128,A1     DONE?
01173 000032D0 66F6                          BNE.S    REMOLO             NO
01174 000032D2 23F900002B0E000016F6          MOVE.L   SAVLPT,LPOINT     RESTORE
01175 000032DC 6000FF48                      BRA.L    SCANLO             AND TH
01176 000032E0
01177 000032E0                      * FOR OUTPUT REDIRECTION:
01178 000032E0 23C8000016F6         OUTPIP   MOVE.L   A0,LPOINT         LPOINT
01179 000032E6 49FAE922                      LEA      OUTFCB(PC),A4        POIN
01180 000032EA 4EB90000457E                  JSR      GETNAM               GET
01181 000032F0 6500FF1E                      BCS.L    DOCMER             NAME E
01182 000032F4 183C000E                      MOVE.B   #14,D4            DEFAULT
01183 000032F8 4EB900006254                  JSR      DEFEXT
01184 000032FE 182C0003                      MOVE.B   FCBDRV(A4),D4     DRIVE N
01185 00003302 04040010                      SUB.B    #$10,D4            CHECK
01186 00003306 6428                          BCC.S    ISOUTD             IF IT'
01187 00003308 23CC00002B1A                  MOVE.L   A4,CURFCB
01188 0000330E 42390000170E                  CLR.B    ERRTYP
01189 00003314 4EB900005530                  JSR      FCS2                 ELSE
01190 0000331A 6600FEF4                      BNE.L    DOCMER             IF ERR
01191 0000331E 23CC00001710                  MOVE.L   A4,FOADDR         OUTPUT
01192 00003324 13FC0008000020CB              MOVE.B   #8,DEVOUT         OUTPUT
01193 0000332C 6000FF72                      BRA.L    REMOVE             AND TH
01194 00003330 13C4000020CB         ISOUTD   MOVE.B   D4,DEVOUT         OUTPUT
01195 00003336 6000FF68                      BRA.L    REMOVE             AND TH
01196 0000333A
01197 0000333A                      * FINISHED SCANNING FOR REDIRECTION - CONTI
01198 0000333A 23F900002B0E000016F6 NOREDI   MOVE.L   SAVLPT,LPOINT     RESTORE
01199 00003344 287C00001400                  MOVE.L   #USRFCB,A4
01200 0000334A 4EB90000457E                  JSR      GETNAM               MOVE
01201 00003350 6500FEBE                      BCS.L    DOCMER             ERROR
01202 00003354 2A39000016F2                  MOVE.L   USRTAB,D5         ELSE TR
01203 0000335A 6706                          BEQ.S    NOUSER NONE IF 0
01204 0000335C 2A45                          MOVE.L   D5,A5             MOVE PO
01205 0000335E 6122                          BSR.S    TRYMEM
01206 00003360 6718                          BEQ.S    CMDOK              IF WE
01207 00003362 2A3C00003594         NOUSER   MOVE.L   #CMDTAB,D5        POINT T
01208 00003368 2A45                          MOVE.L   D5,A5             MOVE PO
01209 0000336A 6116                          BSR.S    TRYMEM             FIND M
01210 0000336C 670C                          BEQ.S    CMDOK              IF WE
01211 0000336E 23F900002B0E000016F6          MOVE.L   SAVLPT,LPOINT     IF NOT,
01212 00003378 6056                          BRA.S    TRYDSK             TRY DI
01213 0000337A
01214 0000337A                      * IF A COMMAND IS FOUND IN COMMAND TABLE DO
01215 0000337A 2A55                 CMDOK    MOVE.L   (A5),A5           GET ADD
01216 0000337C 4E95                          JSR      (A5)                 GO V
01217 0000337E 600000D4                      BRA.L    DOQUIT             GET AN
01218 00003382
01219 00003382                      * TRY TO FIND MEMORY-RESIDENT COMMAND
01220 00003382 2C7C00001404         TRYMEM   MOVE.L   #USRFCB+FCBNAM,A6 POINT T
01221 00003388 4285                          CLR.L    D5
01222 0000338A 1A15                          MOVE.B   (A5),D5           CHECK F
01223 0000338C 673C                          BEQ.S    TMNOTF             ZERO M
01224 0000338E 1A1D                 TMLOOP   MOVE.B   (A5)+,D5          NEXT CH
01225 00003390 1E05                          MOVE.B   D5,D7
01226 00003392 9E1E                          SUB.B    (A6)+,D7           COMP W
01227 00003394 0207007F                      AND.B    #$7F,D7            DELETE
01228 00003398 6616                          BNE.S    TMDIFF             IF DIF
01229 0000339A 4A05                          TST.B    D5                 IF SAM
01230 0000339C 66F0                          BNE.S    TMLOOP             NOT EN
01231 0000339E 2A0D                 TMADJ    MOVE.L   A5,D5             IF A5 I
01232 000033A0 068500000001                  ADD.L    #1,D5              MOVE U
01233 000033A6 020500FE                      AND.B    #$FE,D5            IF NOW
01234 000033AA 2A45                          MOVE.L   D5,A5             RETURN
01235 000033AC 4205                          CLR.B    D5                 SET ZE
01236 000033AE 4E75                          RTS      EXIT IF SAME, A5-> ADDRES
01237 000033B0
01238 000033B0                      * IF CHARS DON'T MATCH, OK IF Y POINTS PAST
01239 000033B0 BDFC0000140C         TMDIFF   CMP.L    #USRFCB+FCBEXT,A6  PAST N
01240 000033B6 67E6                          BEQ.S    TMADJ              YES, C
01241 000033B8                      * IF NOT, COMMANDS ARE DIFFERENT - STEP TO
01242 000033B8 4A05                 TMSTEP   TST.B    D5                 IS A5-
01243 000033BA 6704                          BEQ.S    TMADDR             YES, S
01244 000033BC 1A1D                          MOVE.B   (A5)+,D5          NO, GO
01245 000033BE 60F8                          BRA.S    TMSTEP
01246 000033C0 DBFC00000004         TMADDR   ADD.L    #4,A5              AT ADD
01247 000033C6 61D6                          BSR.S    TMADJ              ADJUST
01248 000033C8 60B8                          BRA.S    TRYMEM             AND TR
01249 000033CA
01250 000033CA                      * FINALLY, IF NOTHING FOUND SET NONZERO & E
01251 000033CA 06050001             TMNOTF   ADD.B    #01,D5             CLEAR
01252 000033CE 4E75                          RTS      RTS
01253 000033D0
01254 000033D0                      * IF MEMORY-RESIDENT COMMAND NOT FOUND, ASS
01255 000033D0
01256 000033D0 13FC000200002B02     TRYDSK   MOVE.B   #2,EXSAVE         DEFAULT
01257 000033D8 13F9000016EB00002B0C          MOVE.B   SYSTDR,DEFDRV     USE SYS
01258 000033E2 13F9000016E800002B0D          MOVE.B   SYSDIR,DEFDIR     AND DIR
01259 000033EC 42390000170E                  CLR.B    ERRTYP             NO ERR
01260 000033F2 423900002B18                  CLR.B    GETFLG             GET DE
01261 000033F8 61000224                      BSR.L    GET0               ATTEMP
01262 000033FC 666C                          BNE.S    TRYBAT             IF ERR
01263 000033FE 423900002B02         XEQ      CLR.B    EXSAVE             DEFAUL
01264 00003404 4A3900001706                  TST.B    XFERFL             IS THE
01265 0000340A 6740                          BEQ.S    NOEXAD             NO EXE
01266 0000340C 4EB90000111E                  JSR      DIMOFF               TURN
01267 00003412 9FFC00000008                  SUB.L    #8,A7              MAKE R
01268 00003418 2F79000017080002              MOVE.L   EXECAD,2(A7)      PUT EXE
01269 00003420 3E390000170C                  MOVE.W   EXECSR,D7         USER SR
01270 00003426 8E7900001724                  OR.W     TRMASK,D7           MAYBE
01271 0000342C 0247DFFF                      AND.W    #$DFFF,D7          FORCE
01272 00003430 3E87                          MOVE.W   D7,(A7)           PUT USE
01273 00003432 426F0006                      CLR.W    6(A7)              CLEAR
01274 00003436 2C7C00000E00                  MOVE.L   #USTACK,A6        INIT US
01275 0000343C 4E66                          MOVE.L   A6,USP
01276 0000343E 2C7C00001400                  MOVE.L   #USRFCB,A6        GIVE US
01277 00003444 42390000171A                  CLR.B    INDOS              CLEAR
01278 0000344A 4E73                          RTE      AND GO DO DISK COMMAND
01279 0000344C
01280 0000344C 13FC001C0000170E     NOEXAD   MOVE.B   #28,ERRTYP        NO TRAN
01281 00003454 49FADFAA             DOQUIT   LEA      USRFCB(PC),A4        PUT
01282 00003458 19790000170E0001              MOVE.B   ERRTYP,FCBERR(A4)
01283 00003460 61000F6C                      BSR      PERROR               PRIN
01284 00003464 4EF90000303A         DOEXIT   JMP      WARMS                AND
01285 0000346A
01286 0000346A                      * IF NOT .CMD FILE, TRY BATCH FILE
01287 0000346A
01288 0000346A 41FADF94             TRYBAT   LEA      USRFCB(PC),A0
01289 0000346E 49FAF404                      LEA      BATFCB(PC),A4
01290 00003472 196800030003                  MOVE.B   FCBDRV(A0),FCBDRV(A4)
01291 00003478 296800040004                  MOVE.L   FCBNAM(A0),FCBNAM(A4) COP
01292 0000347E 296800080008                  MOVE.L   FCBNAM+4(A0),FCBNAM+4(A4)
01293 00003484 297C42415400000C              MOVE.L   #$42415400,FCBNAM+8(A4) A
01294 0000348C 23CC00002B1A                  MOVE.L   A4,CURFCB
01295 00003492 42390000170E                  CLR.B    ERRTYP             NO ERR
01296 00003498 4EB90000540A                  JSR      FCS1                 TRY
01297 0000349E 660000B0                      BNE.L    BAFNTF
01298 000034A2 4EB900005792                  JSR      FCS4                 RIGH
01299 000034A8 6600008E                      BNE.L    BAQUIT
01300 000034AC 197C00010002                  MOVE.B   #1,FCBRW(A4)      BUT MAK
01301 000034B2                      * NOW LOOP ONCE FOR EACH LINE IN BATCH FILE
01302 000034B2 49FAF3C0             BATLOO   LEA      BATFCB(PC),A4
01303 000034B6 23CC00002B1A                  MOVE.L   A4,CURFCB
01304 000034BC 41FAE1A2                      LEA      LINBUF(PC),A0        POIN
01305 000034C0 23C8000016F6                  MOVE.L   A0,LPOINT
01306 000034C6 42390000170E         BATRLP   CLR.B    ERRTYP
01307 000034CC 4EB900004F42                  JSR      FREAD                READ
01308 000034D2 660000B2                      BNE.L    BATERR
01309 000034D6 10C5                          MOVE.B   D5,(A0)+          BUT INT
01310 000034D8 0C05000D                      CMP.B    #$0D,D5            END OF
01311 000034DC 673C                          BEQ.S    BATLEN             YES
01312 000034DE 0C050020                      CMP.B    #$20,D5            CHECK
01313 000034E2 64E2                          BCC.S    BATRLP             NOT CN
01314 000034E4 49FA000E                      LEA      FTYMSG(PC),A4        IF C
01315 000034E8 4EB900004210                  JSR      PSTRNG               PRIN
01316 000034EE 4EF90000303A                  JMP      WARMS                AND
01317 000034F4 4552524F52202D202E42 FTYMSG   DC.B     'ERROR - .BAT file is not
               41542066696C65206973                    a text file.',4
               206E6F74206120746578
               742066696C652E04
01318 0000351A
01319 0000351A
01320 0000351A
01321 0000351A
01322 0000351A 49FAE144             BATLEN   LEA      LINBUF(PC),A4        POIN
01323 0000351E A01F                          DC       SDEXEC                GO
01324 00003520 660C                          BNE.S    BATBAD
01325 00003522 4A05                          TST.B    D5                 CHECK
01326 00003524 6608                          BNE.S    BATBAD             IF ERR
01327 00003526 4EB900004E90                  JSR      FCSCLS               CLOS
01328 0000352C 6084                          BRA.S    BATLOO             THEN R
01329 0000352E 49FA0026             BATBAD   LEA      EXEMSG(PC),A4        ON E
01330 00003532 4EB900004210                  JSR      PSTRNG               ..."
01331 00003538 49FAF33A             BAQUIT   LEA      BATFCB(PC),A4
01332 0000353C 13F90000170E00002875          MOVE.B   ERRTYP,BATFCB+FCBERR
01333 00003546 61000E86                      BSR      PERROR               PRIN
01334 0000354A 4EF90000303A                  JMP      WARMS                AND
01335 00003550 422C000C             BAFNTF   CLR.B    FCBEXT(A4)         ERASE
01336 00003554 60E2                          BRA.S    BAQUIT
01337 00003556
01338 00003556 2E4241542066696C6520 EXEMSG   DC.B     '.BAT file execution erro
               657865637574696F6E20                   r - aborting execution.',
               6572726F72202D206162                   4
               6F7274696E6720657865
               637574696F6E2E04
01339 00003586
01340 00003586
01341 00003586
01342 00003586
01343 00003586
01344 00003586 1E2C0001             BATERR   MOVE.B   FCBERR(A4),D7     CHECK E
01345 0000358A 0C070008                      CMP.B    #8,D7              END OF
01346 0000358E 6700FAAA                      BEQ.L    WARMS              YES, J
01347 00003592 609A                          BRA.S    BATBAD             ELSE R
01348 00003594
01349 00003594 54524143452A2A2A     CMDTAB   DC.B     'TRACE***' START TRACING
01350 0000359C 00                            DC.B     0
01351 0000359E 000035FA                      DC.L     TRACON
01352 000035A2 444952                        DC.B     'DIR' PRINT DISK DIRECTOR
01353 000035A5 00                            DC.B     0
01354 000035A6 00003AD0                      DC.L     DIR
01355 000035AA 474554                        DC.B     'GET' GET ML PROGRAM INTO
01356 000035AD 00                            DC.B     0
01357 000035AE 00003618                      DC.L     GET
01358 000035B2 47455458                      DC.B     'GETX' GET ML PROGRAM INT
01359 000035B6 00                            DC.B     0
01360 000035B8 00003610                      DC.L     GETX
01361 000035BC 4D4F4E                        DC.B     'MON' RE-ENTER BACK TO MO
01362 000035BF 00                            DC.B     0
01363 000035C0 000035E2                      DC.L     GOMONI
01364 000035C4 5245534554                    DC.B     'RESET' RESET MONITOR/SYS
01365 000035C9 00                            DC.B     0
01366 000035CA 000035EE                      DC.L     GORESE
01367 000035CE 53415645                      DC.B     'SAVE' SAVE BINARY FILE T
01368 000035D2 00                            DC.B     0
01369 000035D4 00003D70                      DC.L     SAVE
01370 000035D8 584551                        DC.B     'XEQ' EXECUTE LAST LOADED
01371 000035DB 00                            DC.B     0
01372 000035DC 000033FE                      DC.L     XEQ
01373 000035E0
01374 000035E0 00                            DC.B     0 END OF TABLE FLAG
01375 000035E1
01376 000035E1                      *
01377 000035E1                      * MAKE SURE TO CLEAR INDOS BEFORE GOING TO
01378 000035E2 42390000171A         GOMONI   CLR.B    INDOS
01379 000035E8 4EF9000011AA                  JMP      MONITV
01380 000035EE 42390000171A         GORESE   CLR.B    INDOS
01381 000035F4 4EF9000011B0                  JMP      RESETV
01382 000035FA
01383 000035FA                      * TRACON COMMAND - SET EXECSR SO USER PROGR
01384 000035FA
01385 000035FA 33FC800000001724     TRACON   MOVE.W   #$8000,TRMASK     WILL LA
01386 00003602 13FC000100002B19              MOVE.B   #1,TPDFLG         DISABLE
01387 0000360A 4EF900003040                  JMP      WARMTR               AND
01388 00003610
01389 00003610                      * GET COMMAND - GET MACHINE LANGUAGE PROGRA
01390 00003610                      * DISK INTO MEMORY, STORE EXECUTION ADDRESS
01391 00003610                      * EXECAD, AND PRINT ERROR MESSAGE ON ERROR.
01392 00003610                      * GET AND GET0 DEFAULT TO CHECK LOAD LIMITS
01393 00003610                      * LOAD BELOW OFFSET, OR ABOVE MEMEND. GETX
01394 00003610
01395 00003610 13FC000100002B18     GETX     MOVE.B   #1,GETFLG         SET FLA
01396 00003618 423900002B02         GET      CLR.B    EXSAVE             DEFAUL
01397 0000361E 287C00001400         GET0     MOVE.L   #USRFCB,A4        POINT T
01398 00003624 4EB90000457E                  JSR      GETNAM               MOVE
01399 0000362A 65000362                      BCS      GETHLP               IF N
01400 0000362E
01401 0000362E 4285                 GET1     CLR.L    D5
01402 00003630 183900002B02                  MOVE.B   EXSAVE,D4         GET EXT
01403 00003636 4EB900006254                  JSR      DEFEXT               DEFA
01404 0000363C 42390000170E                  CLR.B    ERRTYP
01405 00003642 23CC00002B1A                  MOVE.L   A4,CURFCB
01406 00003648 4EB90000540A                  JSR      FCS1                 GO O
01407 0000364E 660002BA                      BNE      GETEXI               GO R
01408 00003652
01409 00003652 1A39000010C1         LOAD     MOVE.B   CPUTYP,D5         CHECK C
01410 00003658 0C050002                      CMP.B    #2,D5              IS IT
01411 0000365C 6614                          BNE.S    LOAD0              NO, CO
01412 0000365E 2A3C00000008                  MOVE.L   #$8,D5            YES, DI
01413 00003664 4E7B5002                      DC.L     $4E7B5002           MOVEC
01414 00003668 2A3C00000001                  MOVE.L   #$1,D5            THEN EN
01415 0000366E 4E7B5002                      DC.L     $4E7B5002           MOVEC
01416 00003672 48E76028             LOAD0    MOVEM.L  D1-D2/A2/A4,-(A7)
01417 00003676 287C00001400                  MOVE.L   #USRFCB,A4
01418 0000367C 42390000170E                  CLR.B    ERRTYP
01419 00003682 23CC00002B1A                  MOVE.L   A4,CURFCB
01420 00003688 197C00FF003B                  MOVE.B   #$FF,FCBSCF(A4)   NO SPAC
01421 0000368E 423900001706                  CLR.B    XFERFL             NO TRA
01422 00003694
01423 00003694 61000276             GET2     BSR.L    GETNEW             GET FL
01424 00003698 0C050002                      CMP.B    #$02,D5            IS IT
01425 0000369C 676E                          BEQ.S    GETD2O             2-BYTE
01426 0000369E 0C050003                      CMP.B    #$03,D5            IS IT
01427 000036A2 6700009A                      BEQ.L    GETD4O             4-BYTE
01428 000036A6 0C050016                      CMP.B    #$16,D5            IS IT
01429 000036AA 67000158                      BEQ.L    GETT2O             2-BYTE
01430 000036AE 0C050017                      CMP.B    #$17,D5            IS IT
01431 000036B2 67000140                      BEQ.L    GETT4O             4-BYTE
01432 000036B6 0C05000F                      CMP.B    #$0F,D5            IS IT
01433 000036BA 670001FA                      BEQ.L    ADDOF2             2-BYTE
01434 000036BE 0C050010                      CMP.B    #$10,D5            IS IT
01435 000036C2 670001D0                      BEQ.L    ADDOF4             4-BYTE
01436 000036C6 0C050004                      CMP.B    #$04,D5            IS IT
01437 000036CA 6738                          BEQ.S    GETD2N             2-BYTE
01438 000036CC 0C050005                      CMP.B    #$05,D5            IS IT
01439 000036D0 675C                          BEQ.S    GETD4N             4-BYTE
01440 000036D2 0C050018                      CMP.B    #$18,D5            IS IT
01441 000036D6 67000116                      BEQ.L    GETT2N             2-BYTE
01442 000036DA 0C050019                      CMP.B    #$19,D5            IS IT
01443 000036DE 670000FE                      BEQ.L    GETT4N             4-BYTE
01444 000036E2 0C050021                      CMP.B    #$21,D5            IS IT
01445 000036E6 67000152                      BEQ.L    GETZEO             ZERO A
01446 000036EA 0C050022                      CMP.B    #$22,D5            IS IT
01447 000036EE 6700013A                      BEQ.L    GETZEN             ZERO A
01448 000036F2 0C050030                      CMP.B    #$30,D5            IS IT
01449 000036F6 670001C6                      BEQ.L    SEDATB             SET TH
01450 000036FA 0C050031                      CMP.B    #$31,D5            IS IT
01451 000036FE 670001D8                      BEQ.L    SEMEMB             SET TH
01452 00003702 6090                          BRA.S    GET2               ANYTHI
01453 00003704
01454 00003704 610001EC             GETD2N   BSR.L    GETWRD             GET 2-
01455 00003708 2441                          MOVE.L   D1,A2             PUT INT
01456 0000370A 6016                          BRA.S    NOOFF1             THEN C
01457 0000370C
01458 0000370C 610001E4             GETD2O   BSR.L    GETWRD             GET 2-
01459 00003710 2441                          MOVE.L   D1,A2             PUT INT
01460 00003712 0C39002D000016F1              CMP.B    #$2D,LASTRM        WAS LA
01461 0000371A 6706                          BEQ.S    NOOFF1             YES, S
01462 0000371C D5F900001702                  ADD.L    OFFSET,A2          ADD LO
01463 00003722 610001E8             NOOFF1   BSR.L    GETNEW             GET LE
01464 00003726 2405                          MOVE.L   D5,D2             SET UP
01465 00003728 6700FF6A                      BEQ.L    GET2               NOTHIN
01466 0000372C 6038                          BRA.S    GETLO0             THEN C
01467 0000372E
01468 0000372E 610001C2             GETD4N   BSR.L    GETWRD             GET LE
01469 00003732 4841                          SWAP     D1
01470 00003734 2441                          MOVE.L   D1,A2             MOVE IN
01471 00003736 610001BA                      BSR.L    GETWRD             GET RI
01472 0000373A D5C1                          ADD.L    D1,A2              COMBIN
01473 0000373C 601E                          BRA.S    NOOFF2             CONTIN
01474 0000373E
01475 0000373E 610001B2             GETD4O   BSR.L    GETWRD             GET LE
01476 00003742 4841                          SWAP     D1
01477 00003744 2441                          MOVE.L   D1,A2             MOVE IN
01478 00003746 610001AA                      BSR.L    GETWRD             GET RI
01479 0000374A D5C1                          ADD.L    D1,A2              COMBIN
01480 0000374C 0C39002D000016F1              CMP.B    #$2D,LASTRM        WAS LA
01481 00003754 6706                          BEQ.S    NOOFF2             YES, S
01482 00003756 D5F900001702                  ADD.L    OFFSET,A2          ADD LO
01483 0000375C 61000194             NOOFF2   BSR.L    GETWRD             GET LE
01484 00003760 2401                          MOVE.L   D1,D2             SET UP
01485 00003762 6700FF30                      BEQ.L    GET2               NOTHIN
01486 00003766
01487 00003766 4A2C0031             GETLO0   TST.B    FCBDPT(A4)         CHECK
01488 0000376A 662A                          BNE.S    GETLO2             <>0 ME
01489 0000376C 6100019E             GETLO1   BSR.L    GETNEW             ELSE G
01490 00003770 4A3900002B18                  TST.B    GETFLG             SHOULD
01491 00003776 6614                          BNE.S    GETNC1             NO, CO
01492 00003778 B5F900001702                  CMP.L    OFFSET,A2          BELOW
01493 0000377E 650001BE                      BCS.L    GETERR             YES -
01494 00003782 B5F90000171C                  CMP.L    MEMEND,A2          NO, AB
01495 00003788 620001B4                      BHI.L    GETERR             YES -
01496 0000378C
01497 0000378C 14C5                 GETNC1   MOVE.B   D5,(A2)+          STORE I
01498 0000378E 04420001                      SUB.W    #01,D2             DECREM
01499 00003792 6700FF00                      BEQ.L    GET2               AT END
01500 00003796
01501 00003796                      * HERE'S THE SHORTCUT TO QUICK READ BYTES
01502 00003796 1A3900001431         GETLO2   MOVE.B   USRFCB+FCBDPT,D5  GET DAT
01503 0000379C 4DF45060                      LEA      FCBDAT(A4,D5.W),A6   POIN
01504 000037A0 4A3900002B18         GETLO3   TST.B    GETFLG             SHOULD
01505 000037A6 6614                          BNE.S    GETNC2             NO, CO
01506 000037A8 B5F900001702                  CMP.L    OFFSET,A2          BELOW
01507 000037AE 6500018E                      BCS.L    GETERR             YES -
01508 000037B2 B5F90000171C                  CMP.L    MEMEND,A2          NO, AB
01509 000037B8 62000184                      BHI.L    GETERR             YES -
01510 000037BC
01511 000037BC 14DE                 GETNC2   MOVE.B   (A6)+,(A2)+       MOVE NE
01512 000037BE 06050001                      ADD.B    #1,D5              INCREM
01513 000037C2 04420001                      SUB.W    #01,D2             DECREM
01514 000037C6 660A                          BNE.S    GETLO4             NOT YE
01515 000037C8 13C500001431                  MOVE.B   D5,USRFCB+FCBDPT  RESTORE
01516 000037CE 6000FEC4                      BRA.L    GET2               AND TH
01517 000037D2
01518 000037D2 4A05                 GETLO4   TST.B    D5                 TEST D
01519 000037D4 66CA                          BNE.S    GETLO3             REPEAT
01520 000037D6 13C500001431                  MOVE.B   D5,USRFCB+FCBDPT  RESTORE
01521 000037DC 608E                          BRA.S    GETLO1
01522 000037DE
01523 000037DE 61000112             GETT4N   BSR.L    GETWRD             GET LE
01524 000037E2 4841                          SWAP     D1                  MOVE
01525 000037E4 2441                          MOVE.L   D1,A2             SAVE IN
01526 000037E6 6100010A                      BSR.L    GETWRD             GET RI
01527 000037EA D28A                          ADD.L    A2,D1              ADD BA
01528 000037EC 602A                          BRA.S    NOOFF3             THEN D
01529 000037EE
01530 000037EE 61000102             GETT2N   BSR.L    GETWRD             GET TR
01531 000037F2 6024                          BRA.S    NOOFF3             THEN D
01532 000037F4
01533 000037F4 610000FC             GETT4O   BSR.L    GETWRD             GET LE
01534 000037F8 4841                          SWAP     D1                  MOVE
01535 000037FA 2441                          MOVE.L   D1,A2             SAVE IN
01536 000037FC 610000F4                      BSR.L    GETWRD             GET RI
01537 00003800 D28A                          ADD.L    A2,D1              ADD BA
01538 00003802 6004                          BRA.S    GETT2A             THEN D
01539 00003804
01540 00003804 610000EC             GETT2O   BSR.L    GETWRD             GET TR
01541 00003808 0C39002D000016F1     GETT2A   CMP.B    #$2D,LASTRM        WAS LA
01542 00003810 6706                          BEQ.S    NOOFF3             YES, S
01543 00003812 D2B900001702                  ADD.L    OFFSET,D1          ADD IN
01544 00003818 23C100001708         NOOFF3   MOVE.L   D1,EXECAD         STORE E
01545 0000381E 13FC000100001706              MOVE.B   #1,XFERFL         SIGNAL
01546 00003826 6000FE6C                      BRA.L    GET2               AND RE
01547 0000382A
01548 0000382A                      * FILL MEMORY WITH ZEROES FOR C PROGRAMS
01549 0000382A 610000C6             GETZEN   BSR.L    GETWRD             GET LE
01550 0000382E 4841                          SWAP     D1
01551 00003830 2441                          MOVE.L   D1,A2             MOVE IN
01552 00003832 610000BE                      BSR.L    GETWRD             GET RI
01553 00003836 D5C1                          ADD.L    D1,A2              COMBIN
01554 00003838 601E                          BRA.S    GZERNF             CONTIN
01555 0000383A
01556 0000383A 610000B6             GETZEO   BSR.L    GETWRD             GET LE
01557 0000383E 4841                          SWAP     D1
01558 00003840 2441                          MOVE.L   D1,A2             MOVE IN
01559 00003842 610000AE                      BSR.L    GETWRD             GET RI
01560 00003846 D5C1                          ADD.L    D1,A2              COMBIN
01561 00003848 0C39002D000016F1              CMP.B    #$2D,LASTRM        WAS LA
01562 00003850 6706                          BEQ.S    GZERNF             YES, S
01563 00003852 D5F900001702                  ADD.L    OFFSET,A2          ADD LO
01564 00003858 61000098             GZERNF   BSR.L    GETWRD             GET LE
01565 0000385C 4841                          SWAP     D1
01566 0000385E 2401                          MOVE.L   D1,D2             SAVE
01567 00003860 61000090                      BSR.L    GETWRD             GET RI
01568 00003864 D481                          ADD.L    D1,D2              ADD BO
01569 00003866 6700FE2C                      BEQ.L    GET2               NOTHIN
01570 0000386A
01571 0000386A 4A3900002B18         GZELOO   TST.B    GETFLG             SHOULD
01572 00003870 6614                          BNE.S    GZENC1             NO, CO
01573 00003872 B5F900001702                  CMP.L    OFFSET,A2          BELOW
01574 00003878 650000C4                      BCS.L    GETERR             YES -
01575 0000387C B5F90000171C                  CMP.L    MEMEND,A2          NO, AB
01576 00003882 620000BA                      BHI.L    GETERR             YES -
01577 00003886
01578 00003886 421A                 GZENC1   CLR.B    (A2)+              CLEAR
01579 00003888 048200000001                  SUB.L    #01,D2             DECREM
01580 0000388E 66DA                          BNE.S    GZELOO             REPEAT
01581 00003890 6000FE02                      BRA.L    GET2               AT END
01582 00003894
01583 00003894                      * ADDOFX - ADD OFFSET TO LONG-WORD POINTED
01584 00003894
01585 00003894                      * USE NEXT FOUR BYTES TO POINT
01586 00003894 6100005C             ADDOF4   BSR.L    GETWRD             GET LE
01587 00003898 4841                          SWAP     D1
01588 0000389A 2441                          MOVE.L   D1,A2             MOVE IN
01589 0000389C 61000054             ADDOFX   BSR.L    GETWRD             GET RI
01590 000038A0 D5C1                          ADD.L    D1,A2              COMBIN
01591 000038A2 D5F900001702                  ADD.L    OFFSET,A2          ADD OF
01592 000038A8 2212                          MOVE.L   (A2),D1           GET MEM
01593 000038AA D2B900001702                  ADD.L    OFFSET,D1          ADD OF
01594 000038B0 2481                          MOVE.L   D1,(A2)           RESTORE
01595 000038B2 6000FDE0                      BRA.L    GET2
01596 000038B6
01597 000038B6                      * USE NEXT TWO BYTES TO POINT
01598 000038B6 247C00000000         ADDOF2   MOVE.L   #0,A2             LEFT WO
01599 000038BC 60DE                          BRA.S    ADDOFX             THEN C
01600 000038BE
01601 000038BE                      * SET DATA OR MEMBEG POINTERS FOR CRENSHAW'
01602 000038BE 6132                 SEDATB   BSR.S    GETWRD             GET LE
01603 000038C0 4841                          SWAP     D1
01604 000038C2 2441                          MOVE.L   D1,A2             SAVE
01605 000038C4 612C                          BSR.S    GETWRD             RIGHT
01606 000038C6 D28A                          ADD.L    A2,D1              COMBIN
01607 000038C8 D2B900001702                  ADD.L    OFFSET,D1          ADD OF
01608 000038CE 23C1000027EC                  MOVE.L   D1,DATBEG         STORE
01609 000038D4 6000FDBE                      BRA.L    GET2
01610 000038D8 6118                 SEMEMB   BSR.S    GETWRD             GET LE
01611 000038DA 4841                          SWAP     D1
01612 000038DC 2441                          MOVE.L   D1,A2             SAVE
01613 000038DE 6112                          BSR.S    GETWRD             RIGHT
01614 000038E0 D28A                          ADD.L    A2,D1              COMBIN
01615 000038E2 D2B900001702                  ADD.L    OFFSET,D1          ADD OF
01616 000038E8 23C1000027F0                  MOVE.L   D1,MEMBEG         STORE
01617 000038EE 6000FDA4                      BRA.L    GET2
01618 000038F2
01619 000038F2                      * GETWRD - GET TWO-BYTE WORD FROM FILE
01620 000038F2 4285                 GETWRD   CLR.L    D5
01621 000038F4 4EB900004F42                  JSR      FREAD                GET
01622 000038FA 6618                          BNE.S    GETNE1             IF ERR
01623 000038FC 2205                          MOVE.L   D5,D1             SAVE IN
01624 000038FE E149                          LSL      #8,D1                MOVE
01625 00003900 4EB900004F42                  JSR      FREAD                GET
01626 00003906 660C                          BNE.S    GETNE1             IF ERR
01627 00003908 D285                          ADD.L    D5,D1              ADD TH
01628 0000390A 4E75                 GETEXI   RTS
01629 0000390C
01630 0000390C                      * GETNEW - GET BYTE FROM FILE
01631 0000390C 4EB900004F42         GETNEW   JSR      FREAD                USE
01632 00003912 67F6                          BEQ.S    GETEXI             EXIT I
01633 00003914
01634 00003914 1A2C0001             GETNE1   MOVE.B   FCBERR(A4),D5     LOOK AT
01635 00003918 0C050008                      CMP.B    #$8,D5             END OF
01636 0000391C 66001436                      BNE      PDEROR               NO,
01637 00003920 DFFC00000004                  ADD.L    #4,A7              DELETE
01638 00003926 42390000170E                  CLR.B    ERRTYP             ERASE
01639 0000392C 4EB900005792                  JSR      FCS4                 GO C
01640 00003932 4CDF1406                      MOVEM.L  (A7)+,D1-D2/A2/A4
01641 00003936 423900002B18                  CLR.B    GETFLG             REVERT
01642 0000393C 4E75                          RTS      AND RETURN
01643 0000393E
01644 0000393E 49F900003956         GETERR   LEA      GETMSG,A4
01645 00003944 4EB900004210                  JSR      PSTRNG               PRIN
01646 0000394A 423900001706                  CLR.B    XFERFL            ERASE P
01647 00003950 4EF90000303A                  JMP      WARMS                AND
01648 00003956 4C4F4144204552524F52 GETMSG   FCC      'LOAD ERROR - Load addres
               202D204C6F6164206164                   s below OFFSET or '
               64726573732062656C6F
               77204F4646534554206F
               7220
01649 00003980
01650 00003980
01651 00003980
01652 00003980
01653 00003980 61626F7665204D454D45          FCC      'above MEMEND.',4
               4E442E04
01654 0000398E
01655 0000398E
01656 0000398E 49F90000399C         GETHLP   LEA      GTHMSG,A4
01657 00003994 4EB900004210                  JSR      PSTRNG
01658 0000399A 4E75                          RTS
01659 0000399C 474554206C6F61647320 GTHMSG   FCC      'GET loads a binary file
               612062696E6172792066                   into memory. The syntax i
               696C6520696E746F206D                   s'
               656D6F72792E20546865
               2073796E746178206973
01660 000039CE
01661 000039CE
01662 000039CE
01663 000039CE
01664 000039CE 0D0A                          DC.B     $0D,$0A
01665 000039D0 20474554203C66696C65          DC.B     ' GET <file-spec>   to lo
               2D737065633E20202074                   ad with offset and check
               6F206C6F616420776974                   load limits'
               68206F66667365742061
               6E6420636865636B206C
               6F6164206C696D697473
01666 00003A0C
01667 00003A0C
01668 00003A0C
01669 00003A0C
01670 00003A0C
01671 00003A0C 0D0A                          DC.B     $0D,$0A
01672 00003A0E 2047455458203C66696C          DC.B     ' GETX <file-spec>  to lo
               652D737065633E202074                   ad with offset but not ch
               6F206C6F616420776974                   eck load limits'
               68206F66667365742062
               7574206E6F7420636865
               636B206C6F6164206C69
               6D697473
01673 00003A4E
01674 00003A4E
01675 00003A4E
01676 00003A4E
01677 00003A4E
01678 00003A4E
01679 00003A4E 0D0A                          DC.B     $0D,$0A
01680 00003A50 20474554203C66696C65          DC.B     ' GET <file-spec>-  to lo
               2D737065633E2D202074                   ad without offset and che
               6F206C6F616420776974                   ck load limits'
               686F7574206F66667365
               7420616E642063686563
               6B206C6F6164206C696D
               697473
01681 00003A8F
01682 00003A8F
01683 00003A8F
01684 00003A8F
01685 00003A8F
01686 00003A8F
01687 00003A8F 0D0A                          DC.B     $0D,$0A
01688 00003A91 2047455458203C66696C          DC.B     ' GETX <file-spec>- to lo
               652D737065633E2D2074                   ad without offset and not
               6F206C6F616420776974                    check limits',4
               686F7574206F66667365
               7420616E64206E6F7420
               636865636B206C696D69
               747304
01689 00003AD0
01690 00003AD0
01691 00003AD0
01692 00003AD0
01693 00003AD0
01694 00003AD0
01695 00003AD0
01696 00003AD0                      * DIR COMMAND - PRINT DISK DIRECTORY
01697 00003AD0
01698 00003AD0 13F9000016EC00001403 DIR      MOVE.B   WORKDR,USRFCB+FCBDRV ASSU
01699 00003ADA 2A79000016F6                  MOVE.L   LPOINT,A5         POINT T
01700 00003AE0 1A1D                 DIRTRY   MOVE.B   (A5)+,D5          GET DRI
01701 00003AE2 0C050020                      CMP.B    #$20,D5            SPACE?
01702 00003AE6 67F8                          BEQ.S    DIRTRY             YES, T
01703 00003AE8 04050030                      SUB.B    #$30,D5            CVT FR
01704 00003AEC 0C050009                      CMP.B    #9,D5              MORE T
01705 00003AF0 6210                          BHI.S    DRNOGO             YES, U
01706 00003AF2 BA3900001722                  CMP.B    MAXDRV,D5
01707 00003AF8 62000212                      BHI.L    DREROR             NG IF
01708 00003AFC 13C500001403                  MOVE.B   D5,USRFCB+FCBDRV  STORE I
01709 00003B02 4284                 DRNOGO   CLR.L    D4
01710 00003B04 183900001403                  MOVE.B   USRFCB+FCBDRV,D4  AND SAV
01711 00003B0A
01712 00003B0A                      * PRINT SIGNON AND HEADINGS
01713 00003B0A
01714 00003B0A 49FA022E                      LEA      HDGMSG(PC),A4        PRIN
01715 00003B0E 4EB900004210                  JSR      PSTRNG
01716 00003B14 06040030                      ADD.B    #$30,D4            CVT DR
01717 00003B18 4EB900004AFA                  JSR      PUTCHS               OUTP
01718 00003B1E                      * PREPARE DIRECTORY INDEX; MAKE ROOM ON STA
01719 00003B1E 3E3C0007                      MOVE.W   #7,D7             ROOM FO
01720 00003B22 2C3C20202020                  MOVE.L   #$20202020,D6
01721 00003B28 2F06                 DINLOO   MOVE.L   D6,-(A7)          32 BYTE
01722 00003B2A 51CFFFFC                      DBRA     D7,DINLOO
01723 00003B2E 422F001F                      CLR.B    31(A7)             CLEAR
01724 00003B32 287C00001400                  MOVE.L   #USRFCB,A4        POINT T
01725 00003B38 23CC00002B1A                  MOVE.L   A4,CURFCB         IN PREP
01726 00003B3E 42390000170E                  CLR.B    ERRTYP
01727 00003B44 33FC000300001422              MOVE.W   #$0003,USRFCB+FCBCTR WANT
01728 00003B4C 4EB900005F8C                  JSR      FCS9                 READ
01729 00003B52 660001C8                      BNE.L    PRTIE              INPUT
01730 00003B56 49FA01D6                      LEA      DNMSG(PC),A4         PRIN
01731 00003B5A 4EB900004210                  JSR      PSTRNG
01732 00003B60 49F900001470                  LEA      USRFCB+FCBDAT+16,A4  POIN
01733 00003B66 4204                          CLR.B    D4                 NO SPA
01734 00003B68 61000C7A                      BSR.L    FNPRNT             PRINT
01735 00003B6C 41FA01E6                      LEA      SPCMSG(PC),A0        PRIN
01736 00003B70 123C000B                      MOVE.B   #11,D1            11 CHAR
01737 00003B74 61000180                      BSR.L    PSNOCR             PRINT
01738 00003B78 18390000147B                  MOVE.B   USRFCB+FCBDAT+27,D4
01739 00003B7E E14C                          LSL.W    #8,D4              (NOT O
01740 00003B80 18390000147C                  MOVE.B   USRFCB+FCBDAT+28,D4
01741 00003B86 1A3C0001                      MOVE.B   #1,D5             PRINT S
01742 00003B8A 4EB900004244                  JSR      OUT5D                PRIN
01743 00003B90 4EB900004224                  JSR      PCRLF
01744 00003B96 4EB900004224                  JSR      PCRLF                STAR
01745 00003B9C 163900001481                  MOVE.B   USRFCB+FCBDAT+33,D3 NUMBE
01746 00003BA2 E14B                          LSL.W    #8,D3
01747 00003BA4 163900001482                  MOVE.B   USRFCB+FCBDAT+34,D3 (NOT
01748 00003BAA
01749 00003BAA                      * NOW READ DIRECTORY
01750 00003BAA 33FC000500001422     FINDIT   MOVE.W   #$0005,USRFCB+FCBCTR TRAC
01751 00003BB2 287C00001400         FFIND1   MOVE.L   #USRFCB,A4        POINT T
01752 00003BB8 4EB900005F8C                  JSR      FCS9                 GO R
01753 00003BBE 6600015C                      BNE.L    PRTIE              INPUT
01754 00003BC2 23F90000146000001422          MOVE.L   USRFCB+FCBDAT,USRFCB+FCBC
01755 00003BCC 45F900001470                  LEA      USRFCB+FCBDAT+16,A2  POIN
01756 00003BD2
01757 00003BD2                      * NOW DO ONCE FOR EACH ENTRY
01758 00003BD2 204A                 FFIND2   MOVE.L   A2,A0             POINT T
01759 00003BD4 1E10                          MOVE.B   (A0),D7           CHECK F
01760 00003BD6 6B000096                      BMI.L    NXTNAM             DELETE
01761 00003BDA 670000B2                      BEQ.L    DONE               DONE A
01762 00003BDE
01763 00003BDE                      * FOUND A VALID ENTRY, SO PRINT IT
01764 00003BDE
01765 00003BDE 284A                          MOVE.L   A2,A4             POINT T
01766 00003BE0 183C0001                      MOVE.B   #1,D4             WITH SP
01767 00003BE4 61000BFE                      BSR.L    FNPRNT             PRINT
01768 00003BE8 182A0011                      MOVE.B   17(A2),D4         GET TO
01769 00003BEC E14C                          LSL.W    #8,D4              INTO S
01770 00003BEE 182A0012                      MOVE.B   18(A2),D4         2ND BYT
01771 00003BF2 1A3C0001                      MOVE.B   #1,D5             INSERT
01772 00003BF6 4EB900004244                  JSR      OUT5D                PRIN
01773 00003BFC
01774 00003BFC                      * UPDATE DIRECTORY MAP
01775 00003BFC 4287                          CLR.L    D7
01776 00003BFE 1E3900002AF7                  MOVE.B   DIRTMP,D7         GET DIR
01777 00003C04 672E                          BEQ.S    UPDIMA             IGNORE
01778 00003C06 1F7C0004001F                  MOVE.B   #$04,31(A7)       USE EOT
01779 00003C0C 2A07                          MOVE.L   D7,D5
01780 00003C0E 4EB9000047C6                  JSR      TOUPPR               CVT
01781 00003C14 0C050041                      CMP.B    #$41,D5
01782 00003C18 650C                          BCS.S    BELOA              <A
01783 00003C1A 0C05005A                      CMP.B    #$5A,D5
01784 00003C1E 620E                          BHI.S    ABOVZ              >Z
01785 00003C20 1F8750C2                      MOVE.B   D7,-62(A7,D5)     A-Z MOV
01786 00003C24 600E                          BRA.S    UPDIMA
01787 00003C26 1F7C003C0001         BELOA    MOVE.B   #'<',1(A7)        <A INTO
01788 00003C2C 6006                          BRA.S    UPDIMA
01789 00003C2E 1F7C003E001E         ABOVZ    MOVE.B   #'>',30(A7)       >Z INTO
01790 00003C34
01791 00003C34                      * NOW DO NEXT NAME
01792 00003C34 4242                 UPDIMA   CLR.W    D2
01793 00003C36 1439000020CB                  MOVE.B   DEVOUT,D2         CURRENT
01794 00003C3C C4FC0050                      MULU     #80,D2              X80
01795 00003C40 4DFAE48C                      LEA      DEVTAB(PC),A6        POIN
01796 00003C44 DDC2                          ADD.L    D2,A6              POINT
01797 00003C46 142E002D                      MOVE.B   DTPWID(A6),D2     GET DEV
01798 00003C4A 6604                          BNE.S    COLNTZ             OK TO
01799 00003C4C 143C0050                      MOVE.B   #80,D2            ELSE CH
01800 00003C50 04020016             COLNTZ   SUB.B    #22,D2             COLUMN
01801 00003C54 942E0032                      SUB.B    DTOCOL(A6),D2      COMPAR
01802 00003C58 6408                          BCC.S    MOREOL             OK TO
01803 00003C5A 4EB900004224                  JSR      PCRLF                ELSE
01804 00003C60 600C                          BRA.S    NXTNAM             AND CO
01805 00003C62 49F900003D5F         MOREOL   LEA      BARMSG,A4            IF M
01806 00003C68 4EB900004212                  JSR      PDATA
01807 00003C6E 200A                 NXTNAM   MOVE.L   A2,D0             POINTER
01808 00003C70 068000000018                  ADD.L    #24,D0             POINT
01809 00003C76 2440                          MOVE.L   D0,A2             SAVE IT
01810 00003C78 41F900001560                  LEA      USRFCB+FCBDAT+256,A0 POIN
01811 00003C7E B5C8                          CMP.L    A0,A2              PAST E
01812 00003C80 6600FF50                      BNE.L    FFIND2             REPEAT
01813 00003C84 3E3900001460                  MOVE.W   USRFCB+FCBDAT,D7  CHECK G
01814 00003C8A 6600FF26                      BNE.L    FFIND1             REPEAT
01815 00003C8E
01816 00003C8E                      * WHEN DONE, PRINT NUMBER FREE AND DIR INDE
01817 00003C8E
01818 00003C8E 4EB900004224         DONE     JSR      PCRLF
01819 00003C94 4EB900004224                  JSR      PCRLF
01820 00003C9A 3803                          MOVE.W   D3,D4             NUMBER
01821 00003C9C 123C0001                      MOVE.B   #1,D1             PRECEDE
01822 00003CA0 4EB900004244                  JSR      OUT5D                PRIN
01823 00003CA6 41FA00BB                      LEA      FREMSG(PC),A0        PRIN
01824 00003CAA 123C000D                      MOVE.B   #13,D1
01825 00003CAE 6146                          BSR.S    PSNOCR             PRINT
01826 00003CB0 4EB900004224                  JSR      PCRLF
01827 00003CB6 4A2F001F                      TST.B    31(A7)             CHECK
01828 00003CBA 6700F37E                      BEQ.L    WARMS              NO IND
01829 00003CBE 49FA0020                      LEA      DIXMSG(PC),A4
01830 00003CC2 4EB900004210                  JSR      PSTRNG               PRIN
01831 00003CC8 284F                          MOVE.L   A7,A4
01832 00003CCA 4EB900004212                  JSR      PDATA                PRIN
01833 00003CD0 4FEF0020                      LEA      32(A7),A7            CLEA
01834 00003CD4 4EB900004224                  JSR      PCRLF
01835 00003CDA 4EF90000303A                  JMP      WARMS                FINI
01836 00003CE0 5375626469726563746F DIXMSG   DC.B     'Subdirectories used: ',4
               7269657320757365643A
               2004
01837 00003CF6
01838 00003CF6
01839 00003CF6
01840 00003CF6                      * PSNOCR PRINT STRING WITHOUT A CR FIRST, R
01841 00003CF6                      * ON ENTRY, A0 POINTS TO STRING, D1 IS ITS
01842 00003CF6                      * ON ENTRY, A0 POINTS PAST LAST ONE PRINTED
01843 00003CF6
01844 00003CF6 1A18                 PSNOCR   MOVE.B   (A0)+,D5          GET NEX
01845 00003CF8 6604                          BNE.S    PSNOZ              PRINT
01846 00003CFA 1A3C0020                      MOVE.B   #$20,D5           ELSE SU
01847 00003CFE 4EB900004AFC         PSNOZ    JSR      PUTCD5               PRIN
01848 00003D04 04010001                      SUB.B    #01,D1             DECREM
01849 00003D08 66EC                          BNE.S    PSNOCR             REPEAT
01850 00003D0A 4E75                          RTS      RTS THEN EXIT
01851 00003D0C
01852 00003D0C                      * REPORT ERRORS
01853 00003D0C
01854 00003D0C 1A3C000F             DREROR   MOVE.B   #15,D5            INCORRE
01855 00003D10 4EB90000438A                  JSR      RPTER0               REPO
01856 00003D16 4EF90000303A                  JMP      WARMS
01857 00003D1C 287C00001400         PRTIE    MOVE.L   #USRFCB,A4        POINT T
01858 00003D22 4EB9000043CE                  JSR      PERROR               PRIN
01859 00003D28 4EF90000303A                  JMP      WARMS
01860 00003D2E
01861 00003D2E                      * TEXT STRINGS
01862 00003D2E
01863 00003D2E 4469736B204E616D653A DNMSG    FCC      "Disk Name: ",4
               2004
01864 00003D3A
01865 00003D3A 436174616C6F67206F66 HDGMSG   FCC      'Catalog of disk in drive
               206469736B20696E2064                    ',4
               726976652004
01866 00003D54
01867 00003D54
01868 00003D54 2020204E756D6265723A SPCMSG   FCC      '   Number: '
               20
01869 00003D5F
01870 00003D5F 207C2004             BARMSG   FCC      ' | ',4
01871 00003D63 20467265652073656374 FREMSG   FCC      ' Free sectors'
               6F7273
01872 00003D70
01873 00003D70
01874 00003D70                      * SAVE COMMAND - SAVE BINARY FILE TO DISK
01875 00003D70
01876 00003D70 287C00001400         SAVE     MOVE.L   #USRFCB,A4        POINT T
01877 00003D76 23CC00002B1A                  MOVE.L   A4,CURFCB         IN PREP
01878 00003D7C 42390000170E                  CLR.B    ERRTYP
01879 00003D82 4EB90000457E                  JSR      GETNAM               GET
01880 00003D88 650001A4                      BCS.L    NAMENG             IF NAM
01881 00003D8C 4204                          CLR.B    D4
01882 00003D8E 4EB900006254                  JSR      DEFEXT               DEFA
01883 00003D94 4EB9000042D4                  JSR      HEXIN                GET
01884 00003D9A 4A06                          TST.B    D6                 CHECK
01885 00003D9C 670001A0                      BEQ.L    ADEROR             PRINT
01886 00003DA0 2045                          MOVE.L   D5,A0             A0 = FR
01887 00003DA2 4EB9000042D4                  JSR      HEXIN                GET
01888 00003DA8 4A06                          TST.B    D6                 CHECK
01889 00003DAA 67000192                      BEQ.L    ADEROR             PRINT
01890 00003DAE 2245                          MOVE.L   D5,A1             A1 = TO
01891 00003DB0 4200                          CLR.B    D0                 FLAG =
01892 00003DB2 4EB9000042D4                  JSR      HEXIN                GET
01893 00003DB8 65000184                      BCS.L    ADEROR             PRINT
01894 00003DBC 4A06                          TST.B    D6                 WAS TH
01895 00003DBE 6706                          BEQ.S    NOTRAN             NO
01896 00003DC0 103C0001                      MOVE.B   #1,D0             SET FLA
01897 00003DC4 2445                          MOVE.L   D5,A2             STORE T
01898 00003DC6 4201                 NOTRAN   CLR.B    D1                 FLAG =
01899 00003DC8 287C00003FDA         NGOFFS   MOVE.L   #OFFMSG,A4
01900 00003DCE 4EB900004210                  JSR      PSTRNG               ASK
01901 00003DD4 4EB9000049E4                  JSR      GETCHS               GET
01902 00003DDA 0C050031                      CMP.B    #$31,D5            1 = US
01903 00003DDE 670A                          BEQ.S    NOTMIN
01904 00003DE0 0C050032                      CMP.B    #$32,D5            2 = SU
01905 00003DE4 66E2                          BNE.S    NGOFFS             BAD AN
01906 00003DE6 123C0001                      MOVE.B   #1,D1             YES, SE
01907 00003DEA
01908 00003DEA 2A09                 NOTMIN   MOVE.L   A1,D5             TO
01909 00003DEC 9A88                          SUB.L    A0,D5              CALC T
01910 00003DEE 6500014E                      BCS.L    ADEROR             INVALI
01911 00003DF2
01912 00003DF2                      * OPEN FOR WRITE
01913 00003DF2 287C00001400         VALID    MOVE.L   #USRFCB,A4        POINT T
01914 00003DF8 23CC00002B1A                  MOVE.L   A4,CURFCB
01915 00003DFE 4EB900005530                  JSR      FCS2                 OPEN
01916 00003E04 660000F0                      BNE.L    OPEROR             IF ERR
01917 00003E08 197C00FF003B                  MOVE.B   #$FF,FCBSCF(A4)   DISABLE
01918 00003E0E
01919 00003E0E                      * CHECK TO SEE WHETHER 02 OR 03 SHOULD BE U
01920 00003E0E
01921 00003E0E B3FC0000FFFF                  CMP.L    #$FFFF,A1          CHECK
01922 00003E14 633C                          BLS.S    S2LOOP             USE 02
01923 00003E16
01924 00003E16                      * MAIN 03 LOOP
01925 00003E16
01926 00003E16 2409                 S3LOOP   MOVE.L   A1,D2             TO
01927 00003E18 9488                          SUB.L    A0,D2              CALC T
01928 00003E1A 068200000001                  ADD.L    #1,D2              NOW AC
01929 00003E20 6764                          BEQ.S    OUTTA              IF ZER
01930 00003E22 0C820000FFFF                  CMP.L    #$FFFF,D2          LONGER
01931 00003E28 6304                          BLS.S    B3ISOK             NO, OK
01932 00003E2A 343CFFFF                      MOVE.W   #$FFFF,D2         ELSE OU
01933 00003E2E 183C0003             B3ISOK   MOVE.B   #3,D4             03 = DA
01934 00003E32 61000088                      BSR.L    OUTCHA             OUTPUT
01935 00003E36 2608                          MOVE.L   A0,D3             STARTIN
01936 00003E38 610000A0                      BSR.L    DOFFST             MAYBE
01937 00003E3C 61000094                      BSR.L    OUTCH4             OUTPUT
01938 00003E40 3602                          MOVE.W   D2,D3             LENGTH
01939 00003E42 61000084                      BSR.L    OUTCH2             OUTPUT
01940 00003E46
01941 00003E46                      * SEGMENT LOOP TO OUTPUT ONE ENTIRE SEGMENT
01942 00003E46                      * OF LENGTH D2 BEGINNING AT FROM
01943 00003E46 1818                 SG3LOO   MOVE.B   (A0)+,D4          GET NEX
01944 00003E48 6172                          BSR.S    OUTCHA
01945 00003E4A 04420001                      SUB.W    #1,D2              DECREM
01946 00003E4E 66F6                          BNE.S    SG3LOO             KEEP G
01947 00003E50 60C4                          BRA.S    S3LOOP             REPEAT
01948 00003E52
01949 00003E52                      * MAIN 02 SAVE LOOP
01950 00003E52
01951 00003E52 2409                 S2LOOP   MOVE.L   A1,D2             TO
01952 00003E54 9488                          SUB.L    A0,D2              CALC T
01953 00003E56 068200000001                  ADD.L    #1,D2              NOW AC
01954 00003E5C 6728                          BEQ.S    OUTTA              IF ZER
01955 00003E5E 0C82000000FF                  CMP.L    #$FF,D2            LONGER
01956 00003E64 6304                          BLS.S    B2ISOK             NO, OK
01957 00003E66 143C00FF                      MOVE.B   #$FF,D2           ELSE OU
01958 00003E6A 183C0002             B2ISOK   MOVE.B   #2,D4             02 = DA
01959 00003E6E 614C                          BSR.S    OUTCHA             OUTPUT
01960 00003E70 2608                          MOVE.L   A0,D3             STARTIN
01961 00003E72 6166                          BSR.S    DOFFST             MAYBE
01962 00003E74 6152                          BSR.S    OUTCH2             OUTPUT
01963 00003E76 1802                          MOVE.B   D2,D4             LENGTH
01964 00003E78 6142                          BSR.S    OUTCHA             OUTPUT
01965 00003E7A
01966 00003E7A                      * SEGMENT LOOP TO OUTPUT ONE ENTIRE SEGMENT
01967 00003E7A                      * OF LENGTH D2 BEGINNING AT FROM
01968 00003E7A 1818                 SG2LOO   MOVE.B   (A0)+,D4          GET NEX
01969 00003E7C 613E                          BSR.S    OUTCHA
01970 00003E7E 04020001                      SUB.B    #1,D2              DECREM
01971 00003E82 66F6                          BNE.S    SG2LOO             KEEP G
01972 00003E84 60CC                          BRA.S    S2LOOP             REPEAT
01973 00003E86
01974 00003E86                      * OUTPUT TRANSFER ADDRESS AT END
01975 00003E86 4A00                 OUTTA    TST.B    D0                 IS THE
01976 00003E88 6722                          BEQ.S    CLOSFI             NO, GO
01977 00003E8A B5FC0000FFFF                  CMP.L    #$FFFF,A2          CHECK
01978 00003E90 630E                          BLS.S    OUT16              OUTPUT
01979 00003E92
01980 00003E92                      * OUTPUT 3-BYTE TRANSFER ADDRESS
01981 00003E92
01982 00003E92 183C0017             OUT17    MOVE.B   #$17,D4           OUTPUT
01983 00003E96 6124                          BSR.S    OUTCHA             OUTPUT
01984 00003E98 260A                          MOVE.L   A2,D3             TRANSFE
01985 00003E9A 613E                          BSR.S    DOFFST             MAYBE
01986 00003E9C 6134                          BSR.S    OUTCH4             OUTPUT
01987 00003E9E 600C                          BRA.S    CLOSFI             THEN C
01988 00003EA0
01989 00003EA0                      * OUTPUT 2-BYTE TRANSFER ADDRESS
01990 00003EA0
01991 00003EA0 183C0016             OUT16    MOVE.B   #$16,D4           OUTPUT
01992 00003EA4 6116                          BSR.S    OUTCHA             OUTPUT
01993 00003EA6 260A                          MOVE.L   A2,D3             TRANSFE
01994 00003EA8 6130                          BSR.S    DOFFST             MAYBE
01995 00003EAA 611C                          BSR.S    OUTCH2             OUTPUT
01996 00003EAC
01997 00003EAC                      * THEN CLOSE FILE
01998 00003EAC
01999 00003EAC 4EB900005792         CLOSFI   JSR      FCS4                 GO C
02000 00003EB2 6600009C                      BNE.L    ERROR
02001 00003EB6 4EF90000303A         STOP     JMP      WARMS
02002 00003EBC
02003 00003EBC                      * FILE OUTPUT ROUTINES
02004 00003EBC
02005 00003EBC 4EB900005086         OUTCHA   JSR      FWRITE               OUTP
02006 00003EC2 6600008C                      BNE.L    ERROR              EXIT I
02007 00003EC6 4E75                          RTS      EXIT
02008 00003EC8 3803                 OUTCH2   MOVE.W   D3,D4
02009 00003ECA E04C                          LSR.W    #8,D4              LEFT B
02010 00003ECC 61EE                          BSR.S    OUTCHA             OUTPUT
02011 00003ECE 1803                          MOVE.B   D3,D4             RIGHT B
02012 00003ED0 60EA                          BRA.S    OUTCHA             AND OU
02013 00003ED2 4843                 OUTCH4   SWAP     D3                  SWITC
02014 00003ED4 61F2                          BSR.S    OUTCH2             OUTPUT
02015 00003ED6 4843                          SWAP     D3                  BACK
02016 00003ED8 60EE                          BRA.S    OUTCH2             OUTPUT
02017 00003EDA 4A01                 DOFFST   TST.B    D1                 CHECK
02018 00003EDC 6708                          BEQ.S    DOFRTS             NO
02019 00003EDE 96B900001702                  SUB.L    OFFSET,D3          YES, S
02020 00003EE4 6502                          BCS.S    DOFERR             ERROR
02021 00003EE6 4E75                 DOFRTS   RTS      ELSE EXIT
02022 00003EE8 287C00004054         DOFERR   MOVE.L   #NGOMSG,A4
02023 00003EEE 4EB900004210                  JSR      PSTRNG               PRIN
02024 00003EF4 6060                          BRA.S    ANDCLO             CLOSE
02025 00003EF6
02026 00003EF6                      * ERROR PROCESSING
02027 00003EF6
02028 00003EF6 1A2C0001             OPEROR   MOVE.B   FCBERR(A4),D5     ON ERRO
02029 00003EFA 0C050003                      CMP.B    #3,D5              FILE A
02030 00003EFE 6650                          BNE.S    ERROR              IF ERR
02031 00003F00 287C00003FA8                  MOVE.L   #DELMSG,A4        ASK "MA
02032 00003F06 6160                          BSR.S    PRTASK             PSTRNG
02033 00003F08 66AC                          BNE.S    STOP               QUIT I
02034 00003F0A 287C00003FCB                  MOVE.L   #SURMSG,A4        ASK "AR
02035 00003F10 6156                          BSR.S    PRTASK             PSTRNG
02036 00003F12 66A2                          BNE.S    STOP               QUIT I
02037 00003F14 287C00001400                  MOVE.L   #USRFCB,A4        POINT B
02038 00003F1A 142C0004                      MOVE.B   FCBNAM(A4),D2
02039 00003F1E 4EB900005B68                  JSR      FCS12                GO D
02040 00003F24 662A                          BNE.S    ERROR
02041 00003F26 19420004                      MOVE.B   D2,FCBNAM(A4)     RESTORE
02042 00003F2A 6000FEC6                      BRA.L    VALID
02043 00003F2E
02044 00003F2E 1A3C0015             NAMENG   MOVE.B   #21,D5
02045 00003F32 4EB90000438A                  JSR      RPTER0               PRIN
02046 00003F38 4EF90000303A                  JMP      WARMS                AND
02047 00003F3E
02048 00003F3E 287C00003F90         ADEROR   MOVE.L   #ILLMSG,A4        PRINT '
02049 00003F44 4EB900004210                  JSR      PSTRNG
02050 00003F4A 4EF90000303A                  JMP      WARMS                AND
02051 00003F50
02052 00003F50 4EB9000043CE         ERROR    JSR      PERROR               ELSE
02053 00003F56 287C00001400         ANDCLO   MOVE.L   #USRFCB,A4        POINT T
02054 00003F5C 4EB900005792                  JSR      FCS4                 CLOS
02055 00003F62 4EF90000303A                  JMP      WARMS                AND
02056 00003F68
02057 00003F68                      * PSTRNG, GET REPLY, CHECK FOR "Y"
02058 00003F68 4EB900004210         PRTASK   JSR      PSTRNG               PRIN
02059 00003F6E 4EB9000049E4                  JSR      GETCHS               GET
02060 00003F74 020500DF                      AND.B    #$DF,D5            MASK P
02061 00003F78 0C050059                      CMP.B    #$59,D5            IS IT
02062 00003F7C 4E75                          RTS
02063 00003F7E
02064 00003F7E 494E56414C4944204649 NAMSG    FCC      'INVALID FILE NAME',4
               4C45204E414D4504
02065 00003F90
02066 00003F90 4D495353494E472F494E ILLMSG   FCC      'MISSING/INVALID ADDRESS'
               56414C49442041444452                   ,4
               45535304
02067 00003FA8
02068 00003FA8
02069 00003FA8 46494C45204558495354 DELMSG   FCC      'FILE EXISTS - SHOULD I D
               53202D2053484F554C44                   ELETE IT? ',4
               20492044454C45544520
               49543F2004
02070 00003FCB
02071 00003FCB
02072 00003FCB
02073 00003FCB 41524520594F55205355 SURMSG   FCC      'ARE YOU SURE? ',4
               52453F2004
02074 00003FDA
02075 00003FDA 53415645204F5054494F OFFMSG   FCC      'SAVE OPTIONS:'
               4E533A
02076 00003FE7
02077 00003FE7 0D0A                          FCB      $D,$A
02078 00003FE9 2020312E205553452041          FCC      '  1. USE ABOVE ADDRESSES
               424F5645204144445245                    (IGNORING OFFSET), OR'
               53534553202849474E4F
               52494E47204F46465345
               54292C204F52
02079 00004017
02080 00004017
02081 00004017
02082 00004017
02083 00004017 0D0A                          FCB      $D,$A
02084 00004019 2020322E205355425452          FCC      '  2. SUBTRACT OFFSET FRO
               414354204F4646534554                   M ABOVE ADDRESSES'
               2046524F4D2041424F56
               45204144445245535345
               53
02085 00004042
02086 00004042
02087 00004042
02088 00004042
02089 00004042 0D0A                          FCB      $D,$A
02090 00004044 43484F4F53452031204F          FCC      'CHOOSE 1 OR 2: ',4
               5220323A2004
02091 00004054
02092 00004054 07                   NGOMSG   FCB      7
02093 00004055 4E4F5420434F4D504C45          FCC      'NOT COMPLETED - SPECIFIE
               544544202D2053504543                   D ADDRESS IS BELOW OFFSET
               49464945442041444452                   .',4
               4553532049532042454C
               4F57204F46465345542E
               04
02094 00004088
02095 00004088
02096 00004088
02097 00004088
02098 00004088
02099 00004088
02100 00004088 00000000                      EVEN
02101 00004088
02102 00004088                      *         LIB      1.TXSUBR
02103 00004088
02104 00004088                      * SUBROUTINE CODE FOLLOWS
02105 00004088
02106 00004088                      * GETNX - GET NEXT CHARACTER FROM LINBUF BU
02107 00004088                      * CLASF - CLASSIFY IT AS ALPHANUMERIC OR NO
02108 00004088
02109 00004088 48E70004             GETNX    MOVEM.L  A5-A5,-(A7)         PUSH
02110 0000408C
02111 0000408C 4285                          CLR.L    D5
02112 0000408E 13F9000016FE000016FF          MOVE.B   CURRCH,PRECHR     SAVE PR
02113 00004098 2A79000016F6         GETNX0   MOVE.L   LPOINT,A5         POINT T
02114 0000409E 1A2D0000                      MOVE.B   0(A5),D5          GET CHA
02115 000040A2 13C5000016FE                  MOVE.B   D5,CURRCH         STORE C
02116 000040A8 0C05000D                      CMP.B    #$0D,D5            CR?
02117 000040AC 671E                          BEQ.S    CLASF0             YES, S
02118 000040AE BA39000016E2                  CMP.B    ENDLIN,D5          END OF
02119 000040B4 6716                          BEQ.S    CLASF0             YES, S
02120 000040B6
02121 000040B6                      * ON OTHER THAN CR OR EOL, STEP PAST IT
02122 000040B6 DBFC00000001                  ADD.L    #1,A5
02123 000040BC 23CD000016F6                  MOVE.L   A5,LPOINT         SAVE NE
02124 000040C2
02125 000040C2                      * IF SPACE, STEP PAST IT TO NEXT NON-SPACE
02126 000040C2 0C050020             GETNX2   CMP.B    #$20,D5            SPACE?
02127 000040C6 6604                          BNE.S    CLASF0             NO
02128 000040C8 BA15                          CMP.B    (A5),D5            YES, I
02129 000040CA 67CC                          BEQ.S    GETNX0             YES, S
02130 000040CC 4CDF2000             CLASF0   MOVEM.L  (A7)+,A5-A5      PULL
02131 000040D0 6002                          BRA.S    CLASF3
02132 000040D2
02133 000040D2                      * CLASSIFY CHARACTER, AND RETURN CARRY SET
02134 000040D2                      * INPUT CHARACTER IS IN D4, IS MOVED INTO D
02135 000040D2
02136 000040D2 1A04                 CLASF    MOVE.B   D4,D5
02137 000040D4 0C050030             CLASF3   CMP.B    #$30,D5
02138 000040D8 6524                          BCS.S    CLASF2             UNDER
02139 000040DA 0C050039                      CMP.B    #$39,D5
02140 000040DE 6318                          BLS.S    CLASF1             DIGITS
02141 000040E0 0C050041                      CMP.B    #$41,D5
02142 000040E4 6518                          BCS.S    CLASF2             BELOW
02143 000040E6 0C05005A                      CMP.B    #$5A,D5
02144 000040EA 630C                          BLS.S    CLASF1             LETTER
02145 000040EC 0C050061                      CMP.B    #$61,D5
02146 000040F0 650C                          BCS.S    CLASF2             CHARAC
02147 000040F2 0C05007A                      CMP.B    #$7A,D5
02148 000040F6 6206                          BHI.S    CLASF2             ABOVE
02149 000040F8
02150 000040F8 023C00FE             CLASF1   DC.L     $023C00FE AND #$FE,CCR
02151 000040FC 4E75                          RTS
02152 000040FE
02153 000040FE 13C5000016F1         CLASF2   MOVE.B   D5,LASTRM         ELSE ST
02154 00004104 003C0001                      DC.L     $003C0001 OR #1,CCR
02155 00004108 4E75                          RTS      AND RETURN
02156 0000410A
02157 0000410A                      * SEENXT - LOOK AT NEXT CHARACTER IN LINBUF
02158 0000410A                      * ACTUALLY MOVING THE POINTER PAST IT AS IN
02159 0000410A                      * DON'T CLASSIFY
02160 0000410A
02161 0000410A 48E70004             SEENXT   MOVEM.L  A5-A5,-(A7)      PUSH ON
02162 0000410E
02163 0000410E 4285                          CLR.L    D5
02164 00004110 2A79000016F6                  MOVE.L   LPOINT,A5         POINT T
02165 00004116 1A2D0000                      MOVE.B   0(A5),D5          GET CHA
02166 0000411A 4CDF2000                      MOVEM.L  (A7)+,A5-A5      PULL
02167 0000411E 4E75                          RTS      DON'T CLASSIFY
02168 00004120
02169 00004120                      * INLINE - ROUTINE TO ENTER DATA FROM KEYBO
02170 00004120                      * THE LINBUF LINE BUFFER
02171 00004120
02172 00004120 00004120             INLINE   EQU      *
02173 00004120
02174 00004120 2A7C00001660         INBUF1   MOVE.L   #LINBUF,A5        POINT A
02175 00004126 23CD000016F6                  MOVE.L   A5,LPOINT         POINT L
02176 0000412C 4EB9000049E4         INBUF2   JSR      GETCHS               GET
02177 00004132 BA39000016E1                  CMP.B    DELETE,D5          CONTRO
02178 00004138 6628                          BNE.S    INBUF4             NO
02179 0000413A
02180 0000413A                      * ON CONTROL-X BACKUP TO BEGINNING OF LINE
02181 0000413A BBFC00001660         INBUF3   CMP.L    #LINBUF,A5         AT BEG
02182 00004140 67DE                          BEQ.S    INBUF1             YES, R
02183 00004142 1A3C0008                      MOVE.B   #8,D5
02184 00004146 610000BA                      BSR.L    PUTECH             PRINT
02185 0000414A 1A3C0020                      MOVE.B   #$20,D5
02186 0000414E 610000B2                      BSR.L    PUTECH             PRINT
02187 00004152 1A3C0008                      MOVE.B   #8,D5
02188 00004156 610000AA                      BSR.L    PUTECH             BACKSP
02189 0000415A 9BFC00000001                  SUB.L    #1,A5
02190 00004160 60D8                          BRA.S    INBUF3             UNTIL
02191 00004162
02192 00004162                      * CONTINUE IF NOT CONTROL-X
02193 00004162 BA39000016E0         INBUF4   CMP.B    BACKSP,D5          BS?
02194 00004168 6632                          BNE.S    INBUF5             NO
02195 0000416A
02196 0000416A                      * BACKSPACE CHARACTER
02197 0000416A BBFC00001660                  CMP.L    #LINBUF,A5         AT BEG
02198 00004170 660A                          BNE.S    INBU4A             NO, SO
02199 00004172 1A3C0020                      MOVE.B   #$20,D5           YES, SO
02200 00004176 6100008A                      BSR.L    PUTECH
02201 0000417A 60A4                          BRA.S    INBUF1             AND ST
02202 0000417C
02203 0000417C 9BFC00000001         INBU4A   SUB.L    #1,A5              BACKSP
02204 00004182 0C390008000016E7              CMP.B    #8,BECHO           IS BS
02205 0000418A 6606                          BNE.S    NOTBE8             NO
02206 0000418C 1A3C0020                      MOVE.B   #$20,D5           YES, SO
02207 00004190 6170                          BSR.S    PUTECH
02208 00004192 1A39000016E7         NOTBE8   MOVE.B   BECHO,D5
02209 00004198 6168                          BSR.S    PUTECH             THEN O
02210 0000419A 6090                          BRA.S    INBUF2             AND GO
02211 0000419C
02212 0000419C                      * CONTINUE IF NOT BACKSPACE
02213 0000419C 0C05000D             INBUF5   CMP.B    #$0D,D5            RETURN
02214 000041A0 6754                          BEQ.S    INBUF6             YES
02215 000041A2 BA39000016ED                  CMP.B    REPEAT,D5          REPEAT
02216 000041A8 672C                          BEQ.S    INAGIN             YES
02217 000041AA 0C050020                      CMP.B    #$20,D5
02218 000041AE 6500FF7C                      BCS.L    INBUF2             IGNORE
02219 000041B2
02220 000041B2                      * FINALLY STORE CHARACTER
02221 000041B2 1A85                          MOVE.B   D5,(A5)           STORE I
02222 000041B4 BBFC000016DF                  CMP.L    #LINBUF+127,A5     CHECK
02223 000041BA 670A                          BEQ.S    INBU5A             YES, A
02224 000041BC DBFC00000001                  ADD.L    #1,A5              NO, UP
02225 000041C2 6000FF68                      BRA.L    INBUF2             AND GE
02226 000041C6 1A3C0008             INBU5A   MOVE.B   #8,D5             USE BAC
02227 000041CA 6136                          BSR.S    PUTECH             ERASE
02228 000041CC 1A3C0007                      MOVE.B   #7,D5             AND RIN
02229 000041D0 6130                          BSR.S    PUTECH
02230 000041D2 6000FF58                      BRA.L    INBUF2             AND CO
02231 000041D6
02232 000041D6                      * ON CONTROL-A REPEAT LINE UP TO CR
02233 000041D6 1A15                 INAGIN   MOVE.B   (A5),D5           GET NEX
02234 000041D8 0C05000D                      CMP.B    #$0D,D5            CR?
02235 000041DC 6700FF4E                      BEQ.L    INBUF2             YES, R
02236 000041E0 6100091A                      BSR.L    PUTCD5             ELSE O
02237 000041E4 DBFC00000001                  ADD.L    #1,A5              STEP P
02238 000041EA BBFC000016DE                  CMP.L    #LINBUF+126,A5     AT END
02239 000041F0 66E4                          BNE.S    INAGIN             NO, DO
02240 000041F2 6000FF38                      BRA.L    INBUF2             YES, R
02241 000041F6
02242 000041F6 1B450000             INBUF6   MOVE.B   D5,0(A5)          STORE C
02243 000041FA 1A3C000A                      MOVE.B   #$0A,D5
02244 000041FE 6102                          BSR.S    PUTECH             FOLLOW
02245 00004200 4E75                          RTS      AND RETURN
02246 00004202
02247 00004202                      * PUTECH - OUTPUT ONLY IF ECHO IS ON
02248 00004202
02249 00004202 4A3900001720         PUTECH   TST.B    INECHO             CHECK
02250 00004208 6704                          BEQ.S    PUTECX             DON'T
02251 0000420A 610008F0                      BSR.L    PUTCD5
02252 0000420E 4E75                 PUTECX   RTS
02253 00004210
02254 00004210                      * PSTRNG - PRINT A STRING UP TO 04 DELIMITE
02255 00004210                      * PCRLF - PRINT CARRIAGE RETURN AND LINE FE
02256 00004210                      * PDATA - SIMILAR TO PSTRNG BUT W/O CR/LF
02257 00004210                      *
02258 00004210                      * CALLED BY: EVERYBODY, INCLUDING USER
02259 00004210                      * INPUT:     A4 POINTS TO TEXT TO PRINT
02260 00004210                      * OUTPUT:    NONE
02261 00004210                      * REGISTERS USED: A5, D5
02262 00004210
02263 00004210
02264 00004210 6112                 PSTRNG   BSR.S    PCRLF              PRECED
02265 00004212
02266 00004212 2A4C                 PDATA    MOVE.L   A4,A5             POINT T
02267 00004214
02268 00004214 1A1D                 PSTRN1   MOVE.B   (A5)+,D5          GET NEX
02269 00004216 0C050004                      CMP.B    #4,D5              END OF
02270 0000421A 6706                          BEQ.S    PSTRN2             YES
02271 0000421C 610008DE                      BSR.L    PUTCD5             NO, OU
02272 00004220 60F2                          BRA.S    PSTRN1             AND RE
02273 00004222
02274 00004222 4E75                 PSTRN2   RTS
02275 00004224
02276 00004224 1A3C000D             PCRLF    MOVE.B   #$0D,D5           CR
02277 00004228 610008D2                      BSR.L    PUTCD5
02278 0000422C 1A3C000A                      MOVE.B   #$0A,D5           LF
02279 00004230 610008CA                      BSR.L    PUTCD5
02280 00004234 4E75                          RTS
02281 00004236
02282 00004236                      * ASSORTED NUMERIC INPUT AND OUTPUT ROUTINE
02283 00004236
02284 00004236                      * OUT10D - OUTPUT A 10-DIGIT DECIMAL NUMBER
02285 00004236                      *
02286 00004236                      * CALLED BY:
02287 00004236                      * INPUT: INPUT IS IN D4; D5<>0 TO PRECEDE W
02288 00004236                      *           (ELSE PRECEDED BY NOTHING)
02289 00004236                      * OUTPUT:
02290 00004236                      * REGISTERS USED:
02291 00004236
02292 00004236
02293 00004236 48E73000             OUT10D   MOVEM.L  D2-D3,-(A7)      PUSH REG
02294 0000423A 2604                          MOVE.L   D4,D3             GET BIN
02295 0000423C 2A7C000042A4                  MOVE.L   #DECTA1,A5        POINT T
02296 00004242 600E                          BRA.S    OUTXD
02297 00004244
02298 00004244                      * OUT5D - OUTPUT A 5-DIGIT DECIMAL NUMBER
02299 00004244                      *
02300 00004244                      * CALLED BY:
02301 00004244                      * INPUT: INPUT IS IN D4; D5<>0 TO PRECEDE W
02302 00004244                      *           (ELSE PRECEDED BY NOTHING)
02303 00004244                      * OUTPUT:
02304 00004244                      * REGISTERS USED:
02305 00004244
02306 00004244
02307 00004244 48E73000             OUT5D    MOVEM.L  D2-D3,-(A7)      PUSH REG
02308 00004248 4283                          CLR.L    D3
02309 0000424A 3604                          MOVE.W   D4,D3             GET BIN
02310 0000424C 2A7C000042B8                  MOVE.L   #DECTA2,A5        POINT T
02311 00004252
02312 00004252 4287                 OUTXD    CLR.L    D7                 ASSUME
02313 00004254 2405                          MOVE.L   D5,D2             MOVE SP
02314 00004256                      * DIGIT LOOP
02315 00004256 4245                 DIGLOO   CLR      D5                   CLEA
02316 00004258 9695                 DIGLO1   SUB.L    (A5),D3            SUBTRA
02317 0000425A 6506                          BCS.S    DIGLT0             RESULT
02318 0000425C 06050001                      ADD.B    #1,D5              ADD 1
02319 00004260 60F6                          BRA.S    DIGLO1             AND RE
02320 00004262
02321 00004262                      * D5 NOW CONTAINS FIRST DIGIT. PRINT IF <>0
02322 00004262                      * ZERO FLAG <>0. IF ZERO FLAG=0 THEN SKIP I
02323 00004262                      * 0, OR REPLACE BY SPACES IF B<>0.
02324 00004262 D695                 DIGLT0   ADD.L    (A5),D3            ADD BA
02325 00004264 06050030                      ADD.B    #$30,D5            CONVER
02326 00004268 0C050030                      CMP.B    #$30,D5            CHECK
02327 0000426C 6618                          BNE.S    ODPRNT             IF <>0
02328 0000426E 4A07                          TST.B    D7                 TEST Z
02329 00004270 6614                          BNE.S    ODPRNT             IF <>0
02330 00004272 BBFC000042C8                  CMP.L    #DECTA3,A5         AT END
02331 00004278 670C                          BEQ.S    ODPRNT             ALWAYS
02332 0000427A 4A82                          TST.L    D2                 TEST D
02333 0000427C 6712                          BEQ.S    NOPRNT             NO PRI
02334 0000427E 1A3C0020                      MOVE.B   #$20,D5           ELSE CO
02335 00004282 04070001                      SUB.B    #1,D7              FIX UP
02336 00004286 4EB900004AFC         ODPRNT   JSR      PUTCD5               OUTP
02337 0000428C 06070001                      ADD.B    #1,D7              SET ZE
02338 00004290 DBFC00000004         NOPRNT   ADD.L    #4,A5              GO TO
02339 00004296 BBFC000042CC                  CMP.L    #DECTA4,A5         DONE?
02340 0000429C 66B8                          BNE.S    DIGLOO             NO, DO
02341 0000429E 4CDF000C                      MOVEM.L  (A7)+,D2-D3      PULL REG
02342 000042A2 4E75                          RTS      AND RETURN
02343 000042A4
02344 000042A4 3B9ACA0005F5E100     DECTA1   DC.L     1000000000,100000000,1000
               00989680                               0000
02345 000042B0
02346 000042B0 000F4240000186A0              DC.L     1000000,100000
02347 000042B8 00002710000003E8     DECTA2   DC.L     10000,1000,100,10
               000000640000000A
02348 000042C8
02349 000042C8 00000001             DECTA3   DC.L     1
02350 000042CC 000042CC             DECTA4   EQU      *
02351 000042CC
02352 000042CC                      * DECIN AND HEXIN INPUT ROUTINES
02353 000042CC                      *
02354 000042CC                      * CALLED BY: EVERYBODY, INCLUDING USER
02355 000042CC                      * INPUT:     NUMBER IS NEXT IN LINE BUFFER
02356 000042CC                      * OUTPUT:    D5=NUMBER, D6=0 IF NO NUMBER P
02357 000042CC                      * REGISTERS USED: A5, D5
02358 000042CC
02359 000042CC 48E71800             DECIN    MOVEM.L  D3-D4,-(A7)
02360 000042D0 4207                          CLR.B    D7                 FLAG
02361 000042D2 6008                          BRA.S    GETHE1             AND DO
02362 000042D4
02363 000042D4 48E71800             HEXIN    MOVEM.L  D3-D4,-(A7)
02364 000042D8 1E3C0001                      MOVE.B   #1,D7             FLAG 1=
02365 000042DC
02366 000042DC 263C00000000         GETHE1   MOVE.L   #0,D3             NO NUMB
02367 000042E2 2C3C00000000                  MOVE.L   #0,D6             CLEAR B
02368 000042E8
02369 000042E8                      * MAIN GET NUMBER LOOP
02370 000042E8 4EB900004088         GETHD1   JSR      GETNX                GET
02371 000042EE 6554                          BCS.S    GETFIN             FINISH
02372 000042F0 0C050039                      CMP.B    #$39,D5            CHECK
02373 000042F4 6310                          BLS.S    GETHD2             IS DIG
02374 000042F6 4A07                          TST.B    D7                 HEX OR
02375 000042F8 6736                          BEQ.S    GETSKP             ALL LE
02376 000042FA 4EB9000047C6                  JSR      TOUPPR               CVT
02377 00004300 0C050046                      CMP.B    #$46,D5            CHECK
02378 00004304 622A                          BHI.S    GETSKP             G-Z AR
02379 00004306 04050030             GETHD2   SUB.B    #$30,D5            CONVER
02380 0000430A 0C050009                      CMP.B    #9,D5
02381 0000430E 6308                          BLS.S    GETHD6             IF DIG
02382 00004310 0205001F                      AND.B    #$1F,D5            CVT LO
02383 00004314 04050007                      SUB.B    #7,D5              CONVER
02384 00004318
02385 00004318                      * ON A VALID DIGIT, MULTIPLY D3 BY BASE (10
02386 00004318                      * AND ADD CURRENT DIGIT
02387 00004318 2803                 GETHD6   MOVE.L   D3,D4             TEMP SA
02388 0000431A E583                          ASL.L    #2,D3              4*D3
02389 0000431C 4A07                          TST.B    D7                 CHECK
02390 0000431E 6606                          BNE.S    GETHDH             HEX
02391 00004320 D684                          ADD.L    D4,D3              5*D3 I
02392 00004322 E383                          ASL.L    #1,D3              10*D3
02393 00004324 6002                          BRA.S    GETHD7             AND CO
02394 00004326 E583                 GETHDH   ASL.L    #2,D3              16*D3
02395 00004328 D685                 GETHD7   ADD.L    D5,D3              ADD CU
02396 0000432A 1C3C0001                      MOVE.B   #1,D6             SET B F
02397 0000432E 60B8                          BRA.S    GETHD1             AND GO
02398 00004330
02399 00004330                      * WHEN INVALID DIGIT IS FOUND, STEP TO NEXT
02400 00004330 4EB900004088         GETSKP   JSR      GETNX                GET
02401 00004336 64F8                          BCC.S    GETSKP             IF IT'
02402 00004338 2A03                          MOVE.L   D3,D5             RETURN
02403 0000433A 4CDF0018                      MOVEM.L  (A7)+,D3-D4      PULL
02404 0000433E 003C0001                      DC.L     $003C0001 OR #1,CCR RETUR
02405 00004342 4E75                          RTS      FINALLY EXIT WITH CARRY S
02406 00004344
02407 00004344                      * NORMAL EXIT AT END OF NUMBER: C=0, D6<>0,
02408 00004344 2A03                 GETFIN   MOVE.L   D3,D5             RETURN
02409 00004346 4CDF0018                      MOVEM.L  (A7)+,D3-D4      PULL
02410 0000434A 023C00FE                      DC.L     $023C00FE AND #$FE,CCR RE
02411 0000434E 4E75                          RTS      RTS
02412 00004350
02413 00004350                      * OUT8H ROUTINE - OUTPUT 8-DIGIT HEX NUMBER
02414 00004350 4844                 OUT8H    SWAP     D4                  MOVE
02415 00004352 6106                          BSR.S    OUT4H              OUTPUT
02416 00004354 4844                          SWAP     D4                  MOVE
02417 00004356 6102                          BSR.S    OUT4H              OUTPUT
02418 00004358 4E75                          RTS      RTS
02419 0000435A
02420 0000435A                      * OUT4H ROUTINE - OUTPUT 4-DIGIT HEX NUMBER
02421 0000435A E15C                 OUT4H    ROL.W    #8,D4              MOVE L
02422 0000435C 6106                          BSR.S    OUT2H              OUTPUT
02423 0000435E E15C                          ROL.W    #8,D4              MOVE B
02424 00004360 6102                          BSR.S    OUT2H              OUTPUT
02425 00004362 4E75                          RTS      RTS
02426 00004364
02427 00004364                      * OUT2H ROUTINE - OUTPUT 2-DIGIT HEX NUMBER
02428 00004364 1A04                 OUT2H    MOVE.B   D4,D5             FOR PRI
02429 00004366 E80D                          LSR.B    #4,D5              LEFT N
02430 00004368 6106                          BSR.S    OUTH               OUTPUT
02431 0000436A 1A04                          MOVE.B   D4,D5             RIGHT N
02432 0000436C 6102                          BSR.S    OUTH               OUTPUT
02433 0000436E 4E75                          RTS
02434 00004370
02435 00004370                      * OUTH - OUTPUT ONE HEX DIGIT IN D5
02436 00004370 0205000F             OUTH     AND.B    #$0F,D5            OUTPUT
02437 00004374 06050030                      ADD.B    #$30,D5            CONVER
02438 00004378 0C050039                      CMP.B    #$39,D5            OVER 9
02439 0000437C 6300077E                      BLS.L    PUTCD5             NO, JU
02440 00004380 06050007                      ADD.B    #$7,D5             YES, C
02441 00004384 4EF900004AFC                  JMP      PUTCD5               AND
02442 0000438A
02443 0000438A                      * PERROR - REPORT SK*DOS ERROR NUMBER
02444 0000438A                      *
02445 0000438A                      * CALLED BY:
02446 0000438A                      * INPUT: A4 POINTS TO FCB WITH ERROR CODE
02447 0000438A                      * OUTPUT:
02448 0000438A                      * REGISTERS USED: SEE MOVEM
02449 0000438A
02450 0000438A
02451 0000438A                      * SEPARATE ERROR ENTRY FOR SK*DOS ROUTINES
02452 0000438A 48E77808             RPTER0   MOVEM.L  A4/D1-D4,-(A7)
02453 0000438E 2805                          MOVE.L   D5,D4
02454 00004390 287C0000453C                  MOVE.L   #ERRMSG,A4
02455 00004396 1439000020CB                  MOVE.B   DEVOUT,D2
02456 0000439C 13C200002AD4                  MOVE.B   D2,DEVTMP         TEMP SA
02457 000043A2 13FC0001000020CB              MOVE.B   #1,DEVOUT         AND SWI
02458 000043AA 4EB900004210                  JSR      PSTRNG               PRIN
02459 000043B0 243900002B1A                  MOVE.L   CURFCB,D2         TEMP SA
02460 000043B6 16390000170E                  MOVE.B   ERRTYP,D3         AND ALS
02461 000043BC 0284000000FF                  AND.L    #$00FF,D4          CONVER
02462 000043C2 4285                          CLR.L    D5                 NO SPA
02463 000043C4 4EB900004244                  JSR      OUT5D                OUTP
02464 000043CA 600000A6                      BRA.L    RPTER1
02465 000043CE
02466 000043CE 48E77808             PERROR   MOVEM.L  A4/D1-D4,-(A7)
02467 000043D2 182C0001                      MOVE.B   FCBERR(A4),D4     GET ERR
02468 000043D6 6700015E                      BEQ.L    RPTER2             NO ERR
02469 000043DA
02470 000043DA 287C0000453C                  MOVE.L   #ERRMSG,A4
02471 000043E0 1439000020CB                  MOVE.B   DEVOUT,D2
02472 000043E6 13C200002AD4                  MOVE.B   D2,DEVTMP         TEMP SA
02473 000043EC 13FC0001000020CB              MOVE.B   #1,DEVOUT         AND SWI
02474 000043F4 4EB900004210                  JSR      PSTRNG               PRIN
02475 000043FA 243900002B1A                  MOVE.L   CURFCB,D2         TEMP SA
02476 00004400 16390000170E                  MOVE.B   ERRTYP,D3         AND ALS
02477 00004406 0284000000FF                  AND.L    #$00FF,D4          CONVER
02478 0000440C 4285                          CLR.L    D5                 NO SPA
02479 0000440E 4EB900004244                  JSR      OUT5D                OUTP
02480 00004414 0C040002                      CMP.B    #02,D4             CHECK
02481 00004418 671E                          BEQ.S    PR2348             ONLY D
02482 0000441A 0C040003                      CMP.B    #03,D4
02483 0000441E 6718                          BEQ.S    PR2348
02484 00004420 0C040004                      CMP.B    #04,D4
02485 00004424 6712                          BEQ.S    PR2348
02486 00004426 0C040008                      CMP.B    #08,D4
02487 0000442A 670C                          BEQ.S    PR2348
02488 0000442C 0C04000C                      CMP.B    #12,D4
02489 00004430 6706                          BEQ.S    PR2348
02490 00004432 0C04000D                      CMP.B    #13,D4
02491 00004436 663A                          BNE.S    RPTER1             ANY OT
02492 00004438 49FA010B             PR2348   LEA      DASMSG(PC),A4        DO T
02493 0000443C 4EB900004212                  JSR      PDATA                PRIN
02494 00004442 286F0010                      MOVE.L   16(A7),A4         POINT A
02495 00004446 2A1C                          MOVE.L   (A4)+,D5          DRIVE N
02496 00004448 BA3900001722                  CMP.B    MAXDRV,D5          CHECK
02497 0000444E 6222                          BHI.S    RPTER1             NG IF
02498 00004450 06050030                      ADD.B    #$30,D5            CVT TO
02499 00004454 4EB900004AFC                  JSR      PUTCD5               PRIN
02500 0000445A 1A3C002E                      MOVE.B   #$2E,D5
02501 0000445E 4EB900004AFC                  JSR      PUTCD5               PERI
02502 00004464 48E70800                      MOVEM.L  D4-D4,-(A7)
02503 00004468 4204                          CLR.B    D4                 NO SPA
02504 0000446A 61000378                      BSR.L    FNPRNT             PRINT
02505 0000446E 4CDF0010                      MOVEM.L  (A7)+,D4-D4      RESTORE
02506 00004472
02507 00004472 1A3900002AD4         RPTER1   MOVE.B   DEVTMP,D5
02508 00004478 13C5000020CB                  MOVE.B   D5,DEVOUT         AND RES
02509 0000447E 2A3900001742                  MOVE.L   ERRVEC,D5         GET USE
02510 00004484 2A45                          MOVE.L   D5,A5             ...INTO
02511 00004486 6606                          BNE.S    USEVEC             USE IT
02512 00004488 2A7C0000454A                  MOVE.L   #ERRNAM,A5        ELSE US
02513 0000448E 2C7C000019AE         USEVEC   MOVE.L   #SIRFCB+FCBNAM,A6
02514 00004494 2CDD                          MOVE.L   (A5)+,(A6)+
02515 00004496 2CDD                          MOVE.L   (A5)+,(A6)+       PUT "ER
02516 00004498 2CDD                          MOVE.L   (A5)+,(A6)+
02517 0000449A 287C000019AA                  MOVE.L   #SIRFCB,A4        POINT T
02518 000044A0 1979000016EB0003              MOVE.B   SYSTDR,FCBDRV(A4) USE SYS
02519 000044A8 42390000170E                  CLR.B    ERRTYP
02520 000044AE 23CC00002B1A                  MOVE.L   A4,CURFCB
02521 000044B4 4EB90000540A                  JSR      FCS1                 OPEN
02522 000044BA 666E                          BNE.S    RPTEXI             EXIT I
02523 000044BC 4EB900005792                  JSR      FCS4                 CLOS
02524 000044C2 6666                          BNE.S    RPTEXI             EXIT O
02525 000044C4 197C00010002                  MOVE.B   #1,FCBRW(A4)      MAKE BE
02526 000044CA 88FC000A                      DIVU     #10,D4              DIVID
02527 000044CE 3E04                          MOVE.W   D4,D7             TENS DI
02528 000044D0 E147                          ASL.W    #8,D7              AND MO
02529 000044D2 4844                          SWAP     D4                  UNITS
02530 000044D4 D847                          ADD.W    D7,D4              COMBIN
02531 000044D6 06443030                      ADD.W    #$3030,D4          CONVER
02532 000044DA 4201                          CLR.B    D1                 CLEAR
02533 000044DC E149                 RPTER4   LSL.W    #8,D1              SHIFT
02534 000044DE 4EB900004F42                  JSR      FREAD                READ
02535 000044E4 6644                          BNE.S    RPTEXI             EXIT O
02536 000044E6 1205                          MOVE.B   D5,D1             MOVE NE
02537 000044E8 B841                          CMP.W    D1,D4              COMPAR
02538 000044EA 66F0                          BNE.S    RPTER4             NO MAT
02539 000044EC 4EB900004F42         RPTER5   JSR      FREAD                READ
02540 000044F2 6636                          BNE.S    RPTEXI             EXIT O
02541 000044F4 0C05000D                      CMP.B    #$0D,D5            END OF
02542 000044F8 6730                          BEQ.S    RPTEXI             STOP O
02543 000044FA 48E70400                      MOVEM.L  D5-D5,-(A7)
02544 000044FE 1A39000020CB                  MOVE.B   DEVOUT,D5
02545 00004504 13C500002AD4                  MOVE.B   D5,DEVTMP         TEMP SA
02546 0000450A 13FC0001000020CB              MOVE.B   #1,DEVOUT         AND SWI
02547 00004512 4CDF0020                      MOVEM.L  (A7)+,D5-D5
02548 00004516 4EB900004AFC                  JSR      PUTCD5               OUTP
02549 0000451C 1A3900002AD4                  MOVE.B   DEVTMP,D5
02550 00004522 13C5000020CB                  MOVE.B   D5,DEVOUT         RESTORE
02551 00004528 60C2                          BRA.S    RPTER5             AND RE
02552 0000452A
02553 0000452A 23C200002B1A         RPTEXI   MOVE.L   D2,CURFCB         RESTORE
02554 00004530 13C30000170E                  MOVE.B   D3,ERRTYP         RESTORE
02555 00004536 4CDF101E             RPTER2   MOVEM.L  (A7)+,D1-D4/A4
02556 0000453A 4E75                          RTS
02557 0000453C
02558 0000453C 0D0A                 ERRMSG   DC.B     $D,$A
02559 0000453E 4552524F522004                DC.B     'ERROR ',4
02560 00004545 202D2004             DASMSG   DC.B     ' - ',4
02561 0000454A 455252434F444553     ERRNAM   DC.L     'ERRCODESSYS'       ERROR
               53595300                                FILE NAME
02562 00004556
02563 00004556                      * NAMOVE ROUTINE - MOVE NAME FROM X--> TO Y
02564 00004556                      * MOVE ROUTINE - MOVE D4 BYTES FROM X--> TO
02565 00004556                      *
02566 00004556                      * CALLED BY:
02567 00004556                      * INPUT: A5 POINTS TO STRING TO MOVE, A6 TO
02568 00004556                      * OUTPUT: NO CHANGE
02569 00004556                      * REGISTERS USED: NONE BESIDES A5 AND A6
02570 00004556
02571 00004556
02572 00004556 2C95                 NAMOVE   MOVE.L   (A5),(A6)         MOVE FI
02573 00004558 2D6D00040004                  MOVE.L   4(A5),4(A6)       MOVE SE
02574 0000455E 3D6D00080008                  MOVE.W   8(A5),8(A6)       THEN TW
02575 00004564 1D6D000A000A                  MOVE.B   10(A5),10(A6)     AND THE
02576 0000456A 4E75                          RTS
02577 0000456C
02578 0000456C                      *
02579 0000456C                      * CALLED BY:
02580 0000456C                      * INPUT: A5 POINTS TO STRING TO MOVE, A6 TO
02581 0000456C                      *        D4 CONTAINS COUNT OF BYTES TO MOVE
02582 0000456C                      * OUTPUT: NO CHANGE
02583 0000456C                      * REGISTERS USED: D5 CHANGED
02584 0000456C
02585 0000456C 2A04                 MOVE     MOVE.L   D4,D5
02586 0000456E 4A85                          TST.L    D5                 ALL DO
02587 00004570 670A                 MOVE0    BEQ.S    MOVEXI             YES
02588 00004572 1CDD                          MOVE.B   (A5)+,(A6)+       MOVE ON
02589 00004574 048500000001                  SUB.L    #01,D5             DEC B
02590 0000457A 60F4                          BRA.S    MOVE0              DO UNT
02591 0000457C
02592 0000457C 4E75                 MOVEXI   RTS
02593 0000457E
02594 0000457E                      * GETNAM - PROCESS AND MOVE VALID FILE NAME
02595 0000457E                      * INTO FCB
02596 0000457E                      *
02597 0000457E                      * CALLED BY:
02598 0000457E                      * INPUT: A4 HAS FCB ADDRESS
02599 0000457E                      * OUTPUT: NAME, EXTENSION, AND DRIVE NUMBER
02600 0000457E                      *   A DEVICE NAME IS FOUND, IN WHICH CASE $
02601 0000457E                      * REGISTERS USED:
02602 0000457E
02603 0000457E
02604 0000457E 197900002B0C0003     GETNAM   MOVE.B   DEFDRV,FCBDRV(A4) USUALLY
02605 00004586 13F900002B0D00002AF7          MOVE.B   DEFDIR,DIRTMP     AND ALS
02606 00004590 13F9000016EC00002B0C          MOVE.B   WORKDR,DEFDRV     BACK TO
02607 0000459A 13F9000016E900002B0D          MOVE.B   WRKDIR,DEFDIR     AND ALS
02608 000045A4 422C0002                      CLR.B    FCBRW(A4)          CLEAR
02609 000045A8 422C0004                      CLR.B    FCBNAM(A4)         ERASE
02610 000045AC 422C000C                      CLR.B    FCBEXT(A4)         ERASE
02611 000045B0                      * SKIP SPACES
02612 000045B0 2A79000016F6                  MOVE.L   LPOINT,A5         POINT T
02613 000045B6 4EB90000471E                  JSR      SKIPSP               SKIP
02614 000045BC
02615 000045BC 2A4C                          MOVE.L   A4,A5             POINT B
02616 000045BE 6100FAC8                      BSR.L    GETNX              GET FI
02617 000045C2 6532                          BCS.S    CHKSL1             IF NOT
02618 000045C4 0C050041                      CMP.B    #$41,D5            CHECK
02619 000045C8 6448                          BCC.S    CHKSL2             YES, G
02620 000045CA
02621 000045CA 04050030                      SUB.B    #$30,D5            CVT FR
02622 000045CE BA3900001722                  CMP.B    MAXDRV,D5          CHECK
02623 000045D4 6200009E                      BHI.L    NGEXIT             EXIT I
02624 000045D8 1C05                          MOVE.B   D5,D6             SAVE DR
02625 000045DA 6100FAAC                      BSR.L    GETNX              GET NE
02626 000045DE 0C05002E                      CMP.B    #$2E,D5            MUST B
02627 000045E2 66000090                      BNE.L    NGEXIT             IF NOT
02628 000045E6 19460003                      MOVE.B   D6,FCBDRV(A4)     STORE V
02629 000045EA 423900002AF7                  CLR.B    DIRTMP             NEW DR
02630 000045F0
02631 000045F0 6100FA96                      BSR.L    GETNX              GET NE
02632 000045F4 641C                          BCC.S    CHKSL2
02633 000045F6 0C05002F             CHKSL1   CMP.B    #'/',D5            IS / F
02634 000045FA 6678                          BNE.S    NGEXIT             ANYTHI
02635 000045FC 13FC000000002AF7              MOVE.B   #0,DIRTMP         / FIRST
02636 00004604 6100FA82                      BSR.L    GETNX              THEN G
02637 00004608 656A                          BCS.S    NGEXIT             IF NOT
02638 0000460A 0C050041                      CMP.B    #$41,D5
02639 0000460E 6564                          BCS.S    NGEXIT             CAN'T
02640 00004610 602E                          BRA.S    GNAME1             AND TH
02641 00004612                      * IF FIRST CHAR IS LETTER, CHECK IF / FOLLO
02642 00004612 2A79000016F6         CHKSL2   MOVE.L   LPOINT,A5
02643 00004618 1C1D                          MOVE.B   (A5)+,D6          CHK CHA
02644 0000461A 0C06002F                      CMP.B    #'/',D6            IS IT
02645 0000461E 6620                          BNE.S    GNAME1             NO, GO
02646 00004620 BA3900001721                  CMP.B    FNCASE,D5          IS D5
02647 00004626 6506                          BCS.S    DRVLOK             LEAVE
02648 00004628 4EB9000047C6                  JSR      TOUPPR               NO,
02649 0000462E 13C500002AF7         DRVLOK   MOVE.B   D5,DIRTMP         YES, SO
02650 00004634 23CD000016F6                  MOVE.L   A5,LPOINT         AND GO
02651 0000463A 6100FA4C                      BSR.L    GETNX              THEN G
02652 0000463E 6534                          BCS.S    NGEXIT             IF NOT
02653 00004640
02654 00004640 4BEC0004             GNAME1   LEA.L    FCBNAM(A4),A5      POINT
02655 00004644 1C3C0008                      MOVE.B   #8,D6             UP TO 8
02656 00004648 61000092                      BSR.L    GNOE1              GO GET
02657 0000464C 6426                          BCC.S    NGEXIT             MUST B
02658 0000464E 0C05002E                      CMP.B    #$2E,D5            PERIOD
02659 00004652 665A                          BNE.S    OKEXIT             EXIT I
02660 00004654 6100FA32                      BSR.L    GETNX              GET NE
02661 00004658 0C050041                      CMP.B    #$41,D5            LETTER
02662 0000465C 6538                          BCS.S    GDRIV1             MAY BE
02663 0000465E
02664 0000465E 1C3C0003             GEXT     MOVE.B   #3,D6             UP TO 3
02665 00004662 6178                          BSR.S    GNOE1              GET TH
02666 00004664 640E                          BCC.S    NGEXIT             MUST B
02667 00004666 0C05002E                      CMP.B    #$2E,D5            PERIOD
02668 0000466A 6726                          BEQ.S    GDRIVE             YES, G
02669 0000466C 4EB9000040D4                  JSR      CLASF3               CLAS
02670 00004672 653A                          BCS.S    OKEXIT             EXIT I
02671 00004674 197C00150001         NGEXIT   MOVE.B   #21,FCBERR(A4)    INVALID
02672 0000467A 42AC0008                      CLR.L    FCBNAM+4(A4)
02673 0000467E 42AC000C                      CLR.L    FCBNAM+8(A4)       ZERO O
02674 00004682 426C0010                      CLR.W    FCBNAM+12(A4)
02675 00004686 422C0012                      CLR.B    FCBNAM+14(A4)
02676 0000468A 6130                          BSR.S    CPYDIR             MOVE O
02677 0000468C 003C0001                      DC.L     $003C0001 OR #1,CCR ALSO
02678 00004690 4E75                          RTS
02679 00004692
02680 00004692 6100F9F4             GDRIVE   BSR.L    GETNX              GET NU
02681 00004696 2A4C                 GDRIV1   MOVE.L   A4,A5             POINT B
02682 00004698 04050030                      SUB.B    #$30,D5            CVT FR
02683 0000469C BA3900001722                  CMP.B    MAXDRV,D5
02684 000046A2 62D0                          BHI.S    NGEXIT             EXIT I
02685 000046A4 19450003                      MOVE.B   D5,FCBDRV(A4)     STORE I
02686 000046A8 6100F9DE                      BSR.L    GETNX              GET NE
02687 000046AC 64C6                          BCC.S    NGEXIT             NO GOO
02688 000046AE 4EB900004DC0         OKEXIT   JSR      FINDEV               CHEC
02689 000046B4 6106                          BSR.S    CPYDIR             MOVE O
02690 000046B6 023C00FE                      DC.L     $023C00FE AND #$FE,CCR CL
02691 000046BA 4E75                          RTS
02692 000046BC
02693 000046BC                      * IF DIRTMP <>0 THEN SET APPROPRIATE PARITY
02694 000046BC 1A3900002AF7         CPYDIR   MOVE.B   DIRTMP,D5         GET DIR
02695 000046C2 4BEC0005                      LEA      FCBNAM+1(A4),A5      POIN
02696 000046C6 E30D                 CPDLOO   LSL.B    #1,D5              SHIFT
02697 000046C8 670C                          BEQ.S    CPDXND             QUIT I
02698 000046CA 6A04                          BPL.S    CPDERO             IF >0
02699 000046CC 00150080                      OR.B     #$80,(A5)           IF <0
02700 000046D0 4BED0001             CPDERO   LEA      1(A5),A5             THEN
02701 000046D4 60F0                          BRA.S    CPDLOO             AND DO
02702 000046D6 4E75                 CPDXND   RTS
02703 000046D8
02704 000046D8                      * GET B CHARACTERS OF NAME OR EXT, PLACE AT
02705 000046D8                      *     FOLLOW WITH ZEROES
02706 000046D8 6100F9AE             GNOE     BSR.L    GETNX              GET NE
02707 000046DC 6414                 GNOE1    BCC.S    GISOK              OK TO
02708 000046DE 0C05005F                      CMP.B    #$5F,D5            UNDERL
02709 000046E2 671C                          BEQ.S    GISOK1             YES, A
02710 000046E4 0C05002D                      CMP.B    #$2D,D5            HYPHEN
02711 000046E8 6716                          BEQ.S    GISOK1             YES, A
02712 000046EA 0C05002A                      CMP.B    #$2A,D5            ASTERI
02713 000046EE 6710                          BEQ.S    GISOK1             YES, A
02714 000046F0 601C                          BRA.S    GZERO              ELSE F
02715 000046F2 BA3900001721         GISOK    CMP.B    FNCASE,D5          IS D5
02716 000046F8 6506                          BCS.S    GISOK1             LEAVE
02717 000046FA 4EB9000047C6                  JSR      TOUPPR               NO,
02718 00004700 1AC5                 GISOK1   MOVE.B   D5,(A5)+          STORE I
02719 00004702 04060001                      SUB.B    #01,D6             DECREM
02720 00004706 66D0                          BNE.S    GNOE               CONTIN
02721 00004708 4EF900004088                  JMP      GETNX                GET
02722 0000470E 421D                 GZERO    CLR.B    (A5)+              FINISH
02723 00004710 04060001                      SUB.B    #01,D6             DECREM
02724 00004714 66F8                          BNE.S    GZERO              CONTIN
02725 00004716 4EB9000040D4                  JSR      CLASF3               CLAS
02726 0000471C 4E75                          RTS      AND EXIT
02727 0000471E
02728 0000471E                      * SKIP SPACES IN LINE BUFFER
02729 0000471E 1A1D                 SKIPSP   MOVE.B   (A5)+,D5          GET NEX
02730 00004720 0C050020                      CMP.B    #$20,D5            SPACE?
02731 00004724 6606                          BNE.S    SKIRTS             NO, EX
02732 00004726 23CD000016F6                  MOVE.L   A5,LPOINT         SAVE PO
02733 0000472C 4E75                 SKIRTS   RTS      RTS AND RETURN
02734 0000472E
02735 0000472E                      * RESTRP - RESET ALL TRAP VECTORS
02736 0000472E
02737 0000472E 4A39000010C0         RESTRP   TST.B    TRPFLG             DO WE
02738 00004734 6742                          BEQ.S    RESTR1             NO, ON
02739 00004736
02740 00004736 4BF900002F1C                  LEA      OTRAPS,A5            POIN
02741 0000473C 4DF900000008                  LEA      $8,A6                POIN
02742 00004742 1E3C002D                      MOVE.B   #45,D7            DO TRAP
02743 00004746 2CCD                 RETRL1   MOVE.L   A5,(A6)+          PUT IN
02744 00004748 DBFC00000002                  ADD.L    #2,A5              POINT
02745 0000474E 04070001                      SUB.B    #1,D7              DECREM
02746 00004752 6600FFF2                      BNE      RETRL1
02747 00004756
02748 00004756 1E3C0010                      MOVE.B   #16,D7            THEN 16
02749 0000475A 2CCD                 RETRL2   MOVE.L   A5,(A6)+          PUT IN
02750 0000475C 04070001                      SUB.B    #1,D7              DECREM
02751 00004760 6600FFF8                      BNE      RETRL2               (ALL
02752 00004764 DBFC00000002                  ADD.L    #2,A5              POINT
02753 0000476A
02754 0000476A 1E3C00C0                      MOVE.B   #192,D7           THEN 19
02755 0000476E 2CCD                 RETRL3   MOVE.L   A5,(A6)+          PUT IN
02756 00004770 04070001                      SUB.B    #1,D7              DECREM
02757 00004774 6600FFF8                      BNE      RETRL3               (ALL
02758 00004778
02759 00004778 2C7C00002D8E         RESTR1   MOVE.L   #SDTRAP,A6        POINT T
02760 0000477E 2A79000010C4                  MOVE.L   LATRAP,A5         POINT T
02761 00004784 2A8E                          MOVE.L   A6,(A5)           PUT INT
02762 00004786 4E75                          RTS
02763 00004788
02764 00004788                      * >>> THIS FUNCTION IS ONLY FOR EXTERNAL US
02765 00004788                      * INTOFF - TURN OFF ALL INTERRUPTS, SAVE PR
02766 00004788                      * IN LSTINT
02767 00004788
02768 00004788 DFFC00000004         INTOFF   ADD.L    #4,A7              REMOVE
02769 0000478E 3E17                          MOVE.W   (A7),D7           USER'S
02770 00004790 33C7000010CC                  MOVE.W   D7,LSTINT         SAVE IT
02771 00004796 00470700                      OR.W     #$0700,D7           MASK
02772 0000479A 3E87                          MOVE.W   D7,(A7)           BACK TO
02773 0000479C 2C7C00001400                  MOVE.L   #USRFCB,A6        GIVE HI
02774 000047A2 4E73                          RTE      AND RETURN TO HIM
02775 000047A4
02776 000047A4                      * >>> THIS FUNCTION IS ONLY FOR EXTERNAL US
02777 000047A4                      *INTBON - TURN INTERRUPTS BACK ON TO MASK S
02778 000047A4
02779 000047A4 DFFC00000004         INTBON   ADD.L    #4,A7              REMOVE
02780 000047AA 3E39000010CC                  MOVE.W   LSTINT,D7         HIS OLD
02781 000047B0 02470700                      AND.W    #$0700,D7          JUST T
02782 000047B4 3C17                          MOVE.W   (A7),D6           HIS CUR
02783 000047B6 0246F8FF                      AND.W    #$F8FF,D6          WITHOU
02784 000047BA 8E46                          OR.W     D6,D7               COMBI
02785 000047BC 3E87                          MOVE.W   D7,(A7)           GIVE HI
02786 000047BE 2C7C00001400                  MOVE.L   #USRFCB,A6        GIVE HI
02787 000047C4 4E73                          RTE      AND RETURN TO HIM
02788 000047C6
02789 000047C6                      * TOUPPER- CONVERT CHARACTER IN D5 INTO LOW
02790 000047C6
02791 000047C6 0C050061             TOUPPR   CMP.B    #$61,D5            a OR H
02792 000047CA 650A                          BCS.S    TOUPEX             NO, EX
02793 000047CC 0C05007B                      CMP.B    #$7B,D5            ABOVE
02794 000047D0 6404                          BCC.S    TOUPEX             YES, E
02795 000047D2 020500DF                      AND.B    #$DF,D5            a-z BE
02796 000047D6 4E75                 TOUPEX   RTS      AND THEN EXIT
02797 000047D8
02798 000047D8                      * DEFAULT GET DATE AND TIME ROUTINE - IF TH
02799 000047D8                      * CLOCK/CALENDAR IC, THEN JUST GET DATE AS
02800 000047D8
02801 000047D8 2A39000016EE         DATONL   MOVE.L   MONTH,D5
02802 000047DE E08D                          LSR.L    #8,D5              MOVE D
02803 000047E0 4286                          CLR.L    D6                 AND NO
02804 000047E2 4E75                          RTS
02805 000047E4
02806 000047E4                      * ROUTINE TO PRINT FILE NAMES
02807 000047E4                      * ENTER WITH A4-> FILE NAME, AND D5=0 IF NO
02808 000047E4
02809 000047E4 48E70604             FNPRNT   MOVEM.L  A5/D5-D6,-(A7)
02810 000047E8 4BEC0001                      LEA      1(A4),A5             POIN
02811 000047EC 4205                          CLR.B    D5                 CLEAR
02812 000047EE 3C3C0006                      MOVE.W   #6,D6             COUNTER
02813 000047F2
02814 000047F2 E305                 FNLOO1   ASL.B    #1,D5              SHIFT
02815 000047F4 4A1D                          TST.B    (A5)+              CHECK
02816 000047F6 6A04                          BPL.S    FNBIT0             >0 IS
02817 000047F8 06050001                      ADD.B    #1,D5              <0 IS
02818 000047FC 51CEFFF4             FNBIT0   DBRA     D6,FNLOO1           THEN
02819 00004800 13C500002AF7                  MOVE.B   D5,DIRTMP         SAVE FO
02820 00004806 4A05                          TST.B    D5                 ROOT D
02821 00004808 660E                          BNE.S    FNNOTR             NO, PR
02822 0000480A 4A04                          TST.B    D4                 CHECK
02823 0000480C 6712                          BEQ.S    FNPNAM             =0 MEA
02824 0000480E 1A3C0020                      MOVE.B   #$20,D5
02825 00004812 614A                          BSR.S    PCD5               PRINT
02826 00004814 6148                          BSR.S    PCD5
02827 00004816 6008                          BRA.S    FNPNAM             THEN C
02828 00004818 6144                 FNNOTR   BSR.S    PCD5               PRINT
02829 0000481A 1A3C002F                      MOVE.B   #'/',D5
02830 0000481E 613E                          BSR.S    PCD5               PRINT
02831 00004820 2A4C                 FNPNAM   MOVE.L   A4,A5             POINT B
02832 00004822 3C3C0007                      MOVE.W   #7,D6             COUNT 8
02833 00004826 1A1D                 FNLOO2   MOVE.B   (A5)+,D5          GET NEX
02834 00004828 0205007F                      AND.B    #$7F,D5            REMOVE
02835 0000482C 6608                          BNE.S    FNPNCH             PRINT
02836 0000482E 1A3C0020                      MOVE.B   #$20,D5           ELSE RE
02837 00004832 4A04                          TST.B    D4                 CHECK
02838 00004834 6702                          BEQ.S    FNNNCH             =0 MEA
02839 00004836 6126                 FNPNCH   BSR.S    PCD5               PRINT
02840 00004838 51CEFFEC             FNNNCH   DBRA     D6,FNLOO2           REPEA
02841 0000483C 1A3C002E                      MOVE.B   #'.',D5
02842 00004840 611C                          BSR.S    PCD5               PERIOD
02843 00004842 3C3C0002                      MOVE.W   #2,D6             COUNT 3
02844 00004846 1A1D                 FNLOO3   MOVE.B   (A5)+,D5          GET NEX
02845 00004848 6608                          BNE.S    FNPECH             PRINT
02846 0000484A 1A3C0020                      MOVE.B   #$20,D5           ELSE RE
02847 0000484E 4A04                          TST.B    D4                 CHECK
02848 00004850 6706                          BEQ.S    FNEXIT             =0 MEA
02849 00004852 610A                 FNPECH   BSR.S    PCD5               PRINT
02850 00004854 51CEFFF0             FNNECH   DBRA     D6,FNLOO3           REPEA
02851 00004858 4CDF2060             FNEXIT   MOVEM.L  (A7)+,A5/D5-D6
02852 0000485C 4E75                          RTS
02853 0000485E 48E70204             PCD5     MOVEM.L  D6/A5,-(A7)
02854 00004862 61000298                      BSR.L    PUTCD5             PRINT
02855 00004866 4CDF2040                      MOVEM.L  (A7)+,D6/A5
02856 0000486A 4E75                          RTS
02857 0000486C
02858 0000486C 00000000                      EVEN
02859 0000486C
02860 0000486C                      *         LIB      1.TXIORED
02861 0000486C                      *******************************************
02862 0000486C                      * ICONTROL SELECT - PROCESS $0000-2 AND $FF
02863 0000486C                      * PASS EVERYTHING ELSE THROUGH TO THE DRIVE
02864 0000486C                      *******************************************
02865 0000486C
02866 0000486C 4285                 ICNTRS   CLR.L    D5
02867 0000486E 4A44                          TST.W    D4                 CHECK
02868 00004870 6726                          BEQ.S    ICNT0              0 MEAN
02869 00004872 0C440001                      CMP.W    #1,D4              CHECK
02870 00004876 672C                          BEQ.S    ICNT1              1 MEAN
02871 00004878 0C440002                      CMP.W    #2,D4              CHECK
02872 0000487C 673E                          BEQ.S    ICNT2              2 MEAN
02873 0000487E 0C44FFF0                      CMP.W    #$FFF0,D4          CHECK
02874 00004882 644C                          BCC.S    ICNTX              FFFX M
02875 00004884 1A39000020CA                  MOVE.B   DEVIN,D5          CURRENT
02876 0000488A CAFC0050                      MULU     #80,D5              TIMES
02877 0000488E 4DFAD83E                      LEA      DEVTAB(PC),A6        POIN
02878 00004892 2C76501C                      MOVE.L   DTICNT(A6,D5),A6
02879 00004896 4ED6                          JMP      (A6)                 JUMP
02880 00004898 1A39000020CA         ICNT0    MOVE.B   DEVIN,D5          GET CUR
02881 0000489E 003C0004                      OR.B     #$04,CCR            SIGNA
02882 000048A2 4E75                          RTS      AND RETURN
02883 000048A4 1A39000020CA         ICNT1    MOVE.B   DEVIN,D5          GET CUR
02884 000048AA CAFC0050                      MULU     #80,D5              TIMES
02885 000048AE 4DFAD81E                      LEA      DEVTAB(PC),A6        POIN
02886 000048B2 2A365000                      MOVE.L   DTNAME(A6,D5),D5  GET NAM
02887 000048B6 003C0004                      OR.B     #$04,CCR            SIGNA
02888 000048BA 4E75                          RTS
02889 000048BC 1A39000020CA         ICNT2    MOVE.B   DEVIN,D5          CURRENT
02890 000048C2 CAFC0050                      MULU     #80,D5              TIMES
02891 000048C6 4DFAD806                      LEA      DEVTAB(PC),A6        POIN
02892 000048CA 2C765018                      MOVE.L   DTNECH(A6,D5),A6
02893 000048CE 4ED6                          JMP      (A6)                 JUMP
02894 000048D0 0204000F             ICNTX    AND.B    #$0F,D4
02895 000048D4 13C4000020CA                  MOVE.B   D4,DEVIN          CHANGE
02896 000048DA 003C0004                      OR.B     #$04,CCR            SIGNA
02897 000048DE 4E75                          RTS
02898 000048E0
02899 000048E0                      *******************************************
02900 000048E0                      * OCONTROL SELECT - PROCESS $0000 AND $FFFX
02901 000048E0                      * PASS EVERYTHING ELSE THROUGH TO THE DRIVE
02902 000048E0                      *******************************************
02903 000048E0
02904 000048E0 4285                 OCNTRS   CLR.L    D5
02905 000048E2 4A44                          TST.W    D4                 CHECK
02906 000048E4 6720                          BEQ.S    OCNT0              0 MEAN
02907 000048E6 0C440001                      CMP.W    #1,D4              CHECK
02908 000048EA 6726                          BEQ.S    OCNT1              1 MEAN
02909 000048EC 0C44FFF0                      CMP.W    #$FFF0,D4          CHECK
02910 000048F0 6438                          BCC.S    OCNTX              FFFX M
02911 000048F2 1A39000020CB                  MOVE.B   DEVOUT,D5         CURRENT
02912 000048F8 CAFC0050                      MULU     #80,D5              TIMES
02913 000048FC 4DFAD7D0                      LEA      DEVTAB(PC),A6        POIN
02914 00004900 2C765028                      MOVE.L   DTOCNT(A6,D5),A6
02915 00004904 4ED6                          JMP      (A6)                 JUMP
02916 00004906 1A39000020CB         OCNT0    MOVE.B   DEVOUT,D5         GET CUR
02917 0000490C 003C0004                      OR.B     #$04,CCR            SIGNA
02918 00004910 4E75                          RTS      AND RETURN
02919 00004912 1A39000020CB         OCNT1    MOVE.B   DEVOUT,D5         GET CUR
02920 00004918 CAFC0050                      MULU     #80,D5              TIMES
02921 0000491C 4DFAD7B0                      LEA      DEVTAB(PC),A6        POIN
02922 00004920 2A365000                      MOVE.L   DTNAME(A6,D5),D5  GET NAM
02923 00004924 003C0004                      OR.B     #$04,CCR            SIGNA
02924 00004928 4E75                          RTS
02925 0000492A 0204000F             OCNTX    AND.B    #$0F,D4
02926 0000492E 13C4000020CB                  MOVE.B   D4,DEVOUT         CHANGE
02927 00004934 003C0004                      OR.B     #$04,CCR            SIGNA
02928 00004938 4E75                          RTS
02929 0000493A
02930 0000493A                      *******************************************
02931 0000493A                      * STATVS - SELECT INPUT STATUS DEVICE VIA T
02932 0000493A                      *******************************************
02933 0000493A
02934 0000493A 4A3900002B19         STATVS   TST.B    TPDFLG             TYPEAH
02935 00004940 6616                          BNE.S    STATU1             YES
02936 00004942 4285                          CLR.L    D5
02937 00004944 1A39000020CA                  MOVE.B   DEVIN,D5          CURRENT
02938 0000494A CAFC0050                      MULU     #80,D5              TIMES
02939 0000494E 4DFAD77E                      LEA      DEVTAB(PC),A6        POIN
02940 00004952 2C765010                      MOVE.L   DTINST(A6,D5),A6
02941 00004956 4ED6                          JMP      (A6)                 JUMP
02942 00004958
02943 00004958                      *******************************************
02944 00004958                      * STATU1 - SELECT INPUT STATUS DEVICE 1 CHA
02945 00004958                      *******************************************
02946 00004958
02947 00004958 4285                 STATU1   CLR.L    D5
02948 0000495A 1A39000020CA                  MOVE.B   DEVIN,D5          CURRENT
02949 00004960 CAFC0050                      MULU     #80,D5              TIMES
02950 00004964 4DFAD768                      LEA      DEVTAB(PC),A6        POIN
02951 00004968 2C765038                      MOVE.L   DTSTA1(A6,D5),A6
02952 0000496C 4ED6                          JMP      (A6)                 JUMP
02953 0000496E
02954 0000496E                      *******************************************
02955 0000496E                      * OSTATS - SELECT OUTPUT STATUS DEVICE
02956 0000496E                      *******************************************
02957 0000496E
02958 0000496E 4285                 OSTATS   CLR.L    D5
02959 00004970 1A39000020CB                  MOVE.B   DEVOUT,D5         CURRENT
02960 00004976 CAFC0050                      MULU     #80,D5              TIMES
02961 0000497A 4DFAD752                      LEA      DEVTAB(PC),A6        POIN
02962 0000497E 2C765020                      MOVE.L   DTOUST(A6,D5),A6
02963 00004982 4ED6                          JMP      (A6)                 JUMP
02964 00004984
02965 00004984                      *******************************************
02966 00004984                      * KINPUS - KEYBOARD INPUT EIGHT BITS, NO EC
02967 00004984                      *  VIA TYPEAHEAD BUFFER
02968 00004984                      *******************************************
02969 00004984
02970 00004984 4A3900002B19         KINPUS   TST.B    TPDFLG             TYPEAH
02971 0000498A 662C                          BNE.S    KINPU1             YES
02972 0000498C                      * FIRST, CLEAR DEPTH COUNTER FOR CURRENT OU
02973 0000498C 4285                          CLR.L    D5
02974 0000498E 1A39000020CB                  MOVE.B   DEVOUT,D5         OUTPUT
02975 00004994 CAFC0050                      MULU     #80,D5              X80
02976 00004998 4DFAD734                      LEA      DEVTAB(PC),A6        POIN
02977 0000499C DDC5                          ADD.L    D5,A6              POINT
02978 0000499E 422E0031                      CLR.B    DTDEPC(A6)         CLEAR
02979 000049A2 4285                          CLR.L    D5
02980 000049A4 1A39000020CA                  MOVE.B   DEVIN,D5          CURRENT
02981 000049AA CAFC0050                      MULU     #80,D5              TIMES
02982 000049AE 4DFAD71E                      LEA      DEVTAB(PC),A6        POIN
02983 000049B2 2C765018                      MOVE.L   DTNECH(A6,D5),A6
02984 000049B6 4ED6                          JMP      (A6)                 JUMP
02985 000049B8
02986 000049B8                      *******************************************
02987 000049B8                      * KINPU1 - KEYBOARD INPUT EIGHT BITS, NO EC
02988 000049B8                      *    LAST CHARACTER ONLY (BYPASS TYPEAHEAD
02989 000049B8                      *******************************************
02990 000049B8
02991 000049B8 4285                 KINPU1   CLR.L    D5
02992 000049BA                      * FIRST, CLEAR DEPTH COUNTER FOR CURRENT OU
02993 000049BA 1A39000020CB                  MOVE.B   DEVOUT,D5         OUTPUT
02994 000049C0 CAFC0050                      MULU     #80,D5              X80
02995 000049C4 4DFAD708                      LEA      DEVTAB(PC),A6        POIN
02996 000049C8 DDC5                          ADD.L    D5,A6              POINT
02997 000049CA 422E0031                      CLR.B    DTDEPC(A6)         CLEAR
02998 000049CE 4285                          CLR.L    D5
02999 000049D0 1A39000020CA                  MOVE.B   DEVIN,D5          CURRENT
03000 000049D6 CAFC0050                      MULU     #80,D5              TIMES
03001 000049DA 4DFAD6F2                      LEA      DEVTAB(PC),A6        POIN
03002 000049DE 2C76503C                      MOVE.L   DTINE1(A6,D5),A6
03003 000049E2 4ED6                          JMP      (A6)                 JUMP
03004 000049E4
03005 000049E4                      *******************************************
03006 000049E4                      * GETCHS - GET CHARACTER ROUTINE WITH DEVIC
03007 000049E4                      * HAS TWO ENTRY POINTS: GETCHS IS FOR MOST
03008 000049E4                      * AND GETCFF IS USED WHEN READING FROM FILE
03009 000049E4                      *   (IN WHICH CASE DEVNOW AND DEVADD ARE AL
03010 000049E4                      *******************************************
03011 000049E4
03012 000049E4 4285                 GETCHS   CLR.L    D5
03013 000049E6                      * FIRST, CLEAR DEPTH COUNTER FOR CURRENT OU
03014 000049E6 1A39000020CB                  MOVE.B   DEVOUT,D5         OUTPUT
03015 000049EC CAFC0050                      MULU     #80,D5              X80
03016 000049F0 4DFAD6DC                      LEA      DEVTAB(PC),A6        POIN
03017 000049F4 DDC5                          ADD.L    D5,A6              POINT
03018 000049F6 422E0031                      CLR.B    DTDEPC(A6)         CLEAR
03019 000049FA 4285                          CLR.L    D5
03020 000049FC 1A39000020CA                  MOVE.B   DEVIN,D5          CURRENT
03021 00004A02 13C500002AD5                  MOVE.B   D5,DEVNOW         STORE A
03022 00004A08 0C050008                      CMP.B    #8,D5
03023 00004A0C 674A                          BEQ.S    GETCHD             USE DI
03024 00004A0E CAFC0050                      MULU     #80,D5              X80;
03025 00004A12 4DFAD6BA                      LEA      DEVTAB(PC),A6        POIN
03026 00004A16 DDC5                          ADD.L    D5,A6              POINT
03027 00004A18 23CE00002AD6                  MOVE.L   A6,DEVADD         AND STO
03028 00004A1E 2C7900002AD6         GETCFF   MOVE.L   DEVADD,A6         POINT T
03029 00004A24 2C6E0018                      MOVE.L   DTNECH(A6),A6     POINT T
03030 00004A28 4A3900002B19                  TST.B    TPDFLG             TYPEAH
03031 00004A2E 670A                          BEQ.S    GETCGO             NO, US
03032 00004A30 2C7900002AD6                  MOVE.L   DEVADD,A6         YES, SO
03033 00004A36 2C6E003C                      MOVE.L   DTINE1(A6),A6
03034 00004A3A 4E96                 GETCGO   JSR      (A6)                 GO G
03035 00004A3C 02850000007F                  AND.L    #$7F,D5            MASK P
03036 00004A42 4A3900001720         CKECHO   TST.B    INECHO             ECHO?
03037 00004A48 670C                          BEQ.S    GTCHRT             NO, SO
03038 00004A4A 48E70400                      MOVEM.L  D5-D5,-(A7)      YES, SO
03039 00004A4E 610000AC                      BSR.L    PUTCD5             GO ECH
03040 00004A52 4CDF0020                      MOVEM.L  (A7)+,D5-D5      RESTORE
03041 00004A56 4E75                 GTCHRT   RTS      AND RETURNURN
03042 00004A58
03043 00004A58                      *******************************************
03044 00004A58                      * GETCHD - ROUTINE TO GET CHAR FROM DISK FI
03045 00004A58
03046 00004A58 4AB900001714         GETCHD   TST.L    FIADDR             CHECK
03047 00004A5E 660A                          BNE.S    GETDOK             DISK O
03048 00004A60 4239000020CA                  CLR.B    DEVIN              ELSE I
03049 00004A66 6000FF7C                      BRA.L    GETCHS             AND TR
03050 00004A6A
03051 00004A6A                      * FOR DISK I/O (INDICATED BY FIADDR <>0) DO
03052 00004A6A 48E7001C             GETDOK   MOVEM.L  A3-A5,-(A7)
03053 00004A6E 287900001714                  MOVE.L   FIADDR,A4         POINT T
03054 00004A74 267900002B1A                  MOVE.L   CURFCB,A3         SAVE CU
03055 00004A7A 23CC00002B1A                  MOVE.L   A4,CURFCB
03056 00004A80 4EB900004F42                  JSR      FREAD                HAND
03057 00004A86 48F9080000002B1A              MOVEM.L  A3-A3,CURFCB     RESTORE
03058 00004A8E 6726                          BEQ.S    PULXPC             EXIT I
03059 00004A90 42B900001714                  CLR.L    FIADDR             STOP T
03060 00004A96 4239000020CA                  CLR.B    DEVIN              SWITCH
03061 00004A9C 4EB9000043CE                  JSR      PERROR               GO R
03062 00004AA2 287C00004ABC                  MOVE.L   #QUEMSG,A4
03063 00004AA8 4EB900004210                  JSR      PSTRNG               TELL
03064 00004AAE 4CDF3800                      MOVEM.L  (A7)+,A3-A5
03065 00004AB2 6000FF30                      BRA.L    GETCHS             AND GO
03066 00004AB6
03067 00004AB6 4CDF3800             PULXPC   MOVEM.L  (A7)+,A3-A5
03068 00004ABA 6086                          BRA.S    CKECHO             CHECK
03069 00004ABC
03070 00004ABC 202020454E44204F4620 QUEMSG   DC.B     '   END OF DISK INPUT ...
               4449534B20494E505554                    CONTINUE FROM KEYBOARD.'
               202E2E2E20434F4E5449
               4E55452046524F4D204B
               4559424F4152442E
03071 00004AEC
03072 00004AEC
03073 00004AEC
03074 00004AEC
03075 00004AEC 0D0A                          DC.B     $D,$A
03076 00004AEE 3A2004                        DC.B     ': ',4
03077 00004AF1
03078 00004AF1                      *******************************************
03079 00004AF1                      * PUTCHS WITH DEVICE SELECT HAS THREE ENTRY
03080 00004AF1                      *   PUTCHS IS FOR EXTERNAL USERS, CHAR IN D
03081 00004AF1                      *   PUTCD5 IS FOR INTERNAL USES, CHAR IN D5
03082 00004AF1                      *   PUTCFF IS FOR WRITING TO FILE WITH DEVI
03083 00004AF1                      *     (IN WHICH CASE DEVNOW AND DEVADD ARE
03084 00004AF1                      *******************************************
03085 00004AF1
03086 00004AF2 1A04                 PUTCFF   MOVE.B   D4,D5             ENTRY F
03087 00004AF4 48E70400                      MOVEM.L  D5-D5,-(A7)      SAVE CHA
03088 00004AF8 602C                          BRA.S    PUTCF1
03089 00004AFA 1A04                 PUTCHS   MOVE.B   D4,D5             FOR EXT
03090 00004AFC 48E70400             PUTCD5   MOVEM.L  D5-D5,-(A7)      SAVE CHA
03091 00004B00 4285                 PUTDNG   CLR.L    D5
03092 00004B02 1A39000020CB                  MOVE.B   DEVOUT,D5         CURRENT
03093 00004B08 13C500002AD5                  MOVE.B   D5,DEVNOW         STORE A
03094 00004B0E 0C050008                      CMP.B    #8,D5
03095 00004B12 670001E4                      BEQ.L    PUTCHD             USE DI
03096 00004B16 CAFC0050                      MULU     #80,D5              ALL E
03097 00004B1A 4DFAD5B2                      LEA      DEVTAB(PC),A6        POIN
03098 00004B1E DDC5                          ADD.L    D5,A6              POINT
03099 00004B20 23CE00002AD6                  MOVE.L   A6,DEVADD         AND STO
03100 00004B26 2C7900002AD6         PUTCF1   MOVE.L   DEVADD,A6         POINT T
03101 00004B2C 2A17                          MOVE.L   (A7),D5           RESTORE
03102 00004B2E 4A3900001718                  TST.B    SPECIO             CHECK
03103 00004B34 662C                          BNE.S    PUTCH1             MEANS
03104 00004B36 0C050020                      CMP.B    #$20,D5            IS IT
03105 00004B3A 6408                          BCC.S    PUTCH0
03106 00004B3C 1D7C00010032                  MOVE.B   #1,DTOCOL(A6)     CURRENT
03107 00004B42 601E                          BRA.S    PUTCH1             AND TH
03108 00004B44
03109 00004B44                      * ON PRINTABLE CHARACTER, CHECK COLUMN
03110 00004B44 062E00010032         PUTCH0   ADD.B    #1,DTOCOL(A6)      INC CU
03111 00004B4A 1C2E002D                      MOVE.B   DTPWID(A6),D6     CHECK D
03112 00004B4E 6712                          BEQ.S    PUTCH1             ZERO M
03113 00004B50 BC2E0032                      CMP.B    DTOCOL(A6),D6      COMPAR
03114 00004B54 640C                          BCC.S    PUTCH1             NOT PA
03115 00004B56 0C050020                      CMP.B    #$20,D5            IS CUR
03116 00004B5A 6606                          BNE.S    PUTCH1             NO, DO
03117 00004B5C 4EB900004224                  JSR      PCRLF                YES,
03118 00004B62
03119 00004B62 4CDF0020             PUTCH1   MOVEM.L  (A7)+,D5-D5      RESTORE
03120 00004B66 0C05000D                      CMP.B    #$0D,D5            IS IT
03121 00004B6A 660000C6                      BNE.L    PUTCH5             NO, SO
03122 00004B6E 2C7900002AD6                  MOVE.L   DEVADD,A6         POINT T
03123 00004B74 4A2E0030                      TST.B    DTPAUS(A6)         SHOULD
03124 00004B78 670C                          BEQ.S    NOPAUS             NO
03125 00004B7A 1E2E002C             MAYPAU   MOVE.B   DTPLIN(A6),D7     GET PAG
03126 00004B7E 6706                          BEQ.S    NOPAUS             NO PAU
03127 00004B80 BE2E0031                      CMP.B    DTDEPC(A6),D7      TIME T
03128 00004B84 671A                          BEQ.S    PUTCH3
03129 00004B86 6100FDD0             NOPAUS   BSR.L    STATU1             ELSE C
03130 00004B8A 6700009A                      BEQ.L    PUTCH4             NOTHIN
03131 00004B8E 6100FE28                      BSR.L    KINPU1             IF SOM
03132 00004B92 0205007F                      AND.B    #$7F,D5            MASK P
03133 00004B96 BA39000016EA                  CMP.B    ESCAPE,D5          ESCAPE
03134 00004B9C 66000088                      BNE.L    PUTCH4             NO, GO
03135 00004BA0 610002C0             PUTCH3   BSR.L    KILLU1             CLEAR
03136 00004BA4 2C7900002AD6                  MOVE.L   DEVADD,A6         POINT T
03137 00004BAA 422E0031                      CLR.B    DTDEPC(A6)         CLEAR
03138 00004BAE 6100FDD4                      BSR.L    KINPUS             ELSE S
03139 00004BB2 0205007F                      AND.B    #$7F,D5            MASK P
03140 00004BB6 BA39000016EA                  CMP.B    ESCAPE,D5          ESCAPE
03141 00004BBC 6768                          BEQ.S    PUTCH4             YES, C
03142 00004BBE 0C05000D                      CMP.B    #$0D,D5            CR?
03143 00004BC2 66DC                          BNE.S    PUTCH3             NO, KE
03144 00004BC4
03145 00004BC4                      * DETECTED A BREAK, GO DO IT
03146 00004BC4 2C79000016FA         ESCAP    MOVE.L   BREAK,A6          GET THE
03147 00004BCA BDFC00001006                  CMP.L    #WARMSV,A6         IS IT
03148 00004BD0 6700E468                      BEQ.L    WARMS              YES, G
03149 00004BD4 4A3900001719                  TST.B    CMFLAG             CHECK
03150 00004BDA 661E                          BNE.S    ESCAXT             YES, S
03151 00004BDC 9FFC00000008                  SUB.L    #8,A7              MAKE R
03152 00004BE2 3EB90000170C                  MOVE.W   EXECSR,(A7)       PUT USE
03153 00004BE8 2F4E0002                      MOVE.L   A6,2(A7)          AND HIS
03154 00004BEC 426F0006                      CLR.W    6(A7)              CLEAR
03155 00004BF0 2C7C00000E00                  MOVE.L   #USTACK,A6
03156 00004BF6 4E66                          MOVE.L   A6,USP            INITIAL
03157 00004BF8 4E73                          RTE      AND GO TO HIM IN USER MOD
03158 00004BFA
03159 00004BFA                      * IF EXECUTING EXTERNAL EXECSD, RESTORE EVE
03160 00004BFA 423900001719         ESCAXT   CLR.B    CMFLAG             YES, S
03161 00004C00 2C7900002B12                  MOVE.L   LPTSAV,A6
03162 00004C06 23CE000016F6                  MOVE.L   A6,LPOINT         RESTORE
03163 00004C0C 2C7900002AEE                  MOVE.L   ESUSTP,A6
03164 00004C12 4E66                          MOVE.L   A6,USP            RESET U
03165 00004C14 2E7900002AF2                  MOVE.L   ESSSTP,A7         RESET S
03166 00004C1A 4CDF1F1F                      MOVEM.L  (A7)+,D0-D4/A0-A4 RESTORE
03167 00004C1E 1A390000170E                  MOVE.B   ERRTYP,D5
03168 00004C24 4E75                          RTS      AND RETURN TO TRAP ROUTIN
03169 00004C26
03170 00004C26 4CF9400000002AD6     PUTCH4   MOVEM.L  DEVADD,A6-A6
03171 00004C2E 1A3C000D                      MOVE.B   #$0D,D5           RESTORE
03172 00004C32 4EB900004C90         PUTCH5   JSR      PUTXOF               CHEC
03173 00004C38 0C05000A                      CMP.B    #$0A,D5            WAS IT
03174 00004C3C 6650                          BNE.S    PUTCH7             NO, JU
03175 00004C3E 4285                          CLR.L    D5
03176 00004C40 1A2E002E                      MOVE.B   DTNULL(A6),D5     NULL WA
03177 00004C44 E18D                          LSL.L    #8,D5              X256
03178 00004C46 068500000001                  ADD.L    #1,D5              FORCE
03179 00004C4C 048500000001         CRLFWA   SUB.L    #1,D5
03180 00004C52 66F8                          BNE.S    CRLFWA             WAIT L
03181 00004C54 1A2E002C                      MOVE.B   DTPLIN(A6),D5     CHECK I
03182 00004C58 6734                          BEQ.S    PUTCH7             NO, JU
03183 00004C5A 062E00010031                  ADD.B    #1,DTDEPC(A6)      YES, I
03184 00004C60 BA2E0031                      CMP.B    DTDEPC(A6),D5      COMPAR
03185 00004C64 6428                          BCC.S    PUTCH7             NOT GR
03186 00004C66 1D7C00010031                  MOVE.B   #1,DTDEPC(A6)     RESET C
03187 00004C6C 1A2E002F                      MOVE.B   DTSLIN(A6),D5     GET EJE
03188 00004C70 671C                          BEQ.S    PUTCH7             JUST C
03189 00004C72 48A70400                      MOVEM.W  D5-D5,-(A7)      ELSE PUT
03190 00004C76 1A3C000A             PUTCH6   MOVE.B   #$0A,D5           GET LIN
03191 00004C7A 4EB900004C90                  JSR      PUTXOF               CHEC
03192 00004C80 042F00010001                  SUB.B    #1,1(A7)           DECREM
03193 00004C86 66EE                          BNE.S    PUTCH6             REPEAT
03194 00004C88 DFFC00000002                  ADD.L    #2,A7              FIX UP
03195 00004C8E 4E75                 PUTCH7   RTS
03196 00004C90
03197 00004C90                      * CHECK FOR X-OFF AND OUTPUT THE DESIRED CH
03198 00004C90 4A2E0035             PUTXOF   TST.B    DTXOFF(A6)         CHECK
03199 00004C94 6754                          BEQ.S    PUTXGO             NO SO
03200 00004C96 2C6E0010                      MOVE.L   DTINST(A6),A6     CHECK D
03201 00004C9A 48E70400                      MOVEM.L  D5-D5,-(A7)      SAVE CHA
03202 00004C9E 4E96                          JSR      (A6)
03203 00004CA0 4CDF0020                      MOVEM.L  (A7)+,D5-D5      RESTORE
03204 00004CA4 4CF9400000002AD6              MOVEM.L  DEVADD,A6-A6
03205 00004CAC 673C                          BEQ.S    PUTXGO             NOTHIN
03206 00004CAE 48E70400                      MOVEM.L  D5-D5,-(A7)      SAVE CHA
03207 00004CB2 2C6E0018                      MOVE.L   DTNECH(A6),A6     IF SOME
03208 00004CB6 4E96                          JSR      (A6)
03209 00004CB8 2C7900002AD6                  MOVE.L   DEVADD,A6
03210 00004CBE 0205007F                      AND.B    #$7F,D5            MASK P
03211 00004CC2 BA2E0035                      CMP.B    DTXOFF(A6),D5      IS IT
03212 00004CC6 4CDF0020                      MOVEM.L  (A7)+,D5-D5      RESTORE
03213 00004CCA 661E                          BNE.S    PUTXGO             NO, OU
03214 00004CCC 48E70400             PUTXWT   MOVEM.L  D5-D5,-(A7)      SAVE CHA
03215 00004CD0 2C6E0018                      MOVE.L   DTNECH(A6),A6     ELSE ST
03216 00004CD4 4E96                          JSR      (A6)
03217 00004CD6 2C7900002AD6                  MOVE.L   DEVADD,A6
03218 00004CDC 0205007F                      AND.B    #$7F,D5            MASK P
03219 00004CE0 BA2E0036                      CMP.B    DTXON(A6),D5       X-ON?
03220 00004CE4 4CDF0020                      MOVEM.L  (A7)+,D5-D5      RESTORE
03221 00004CE8 66E2                          BNE.S    PUTXWT             NO, KE
03222 00004CEA 2C6E0024             PUTXGO   MOVE.L   DTOUTC(A6),A6     FINALLY
03223 00004CEE 4E96                          JSR      (A6)
03224 00004CF0 2C7900002AD6                  MOVE.L   DEVADD,A6
03225 00004CF6 4E75                          RTS
03226 00004CF8
03227 00004CF8                      * FOR DISK I/O (INDICATED BY FOADDR <>0) DO
03228 00004CF8 4AB900001710         PUTCHD   TST.L    FOADDR             CHECK
03229 00004CFE 660A                          BNE.S    PUTDOK             DISK O
03230 00004D00 4239000020CB                  CLR.B    DEVOUT             ELSE O
03231 00004D06 6000FDF8                      BRA.L    PUTDNG             AND TR
03232 00004D0A 48E7081C             PUTDOK   MOVEM.L  A3-A5/D4,-(A7)
03233 00004D0E 282F0010                      MOVE.L   16(A7),D4         CHARACT
03234 00004D12 0639000100002380              ADD.B    #1,DEFCOL          NEXT C
03235 00004D1A 0C040020                      CMP.B    #$20,D4
03236 00004D1E 6408                          BCC.S    PUTDK2             IF IT'
03237 00004D20 13FC000100002380              MOVE.B   #1,DEFCOL         COL=1 I
03238 00004D28 287900001710         PUTDK2   MOVE.L   FOADDR,A4         POINT T
03239 00004D2E 267900002B1A                  MOVE.L   CURFCB,A3         SAVE CU
03240 00004D34 23CC00002B1A                  MOVE.L   A4,CURFCB
03241 00004D3A 4EB900005086                  JSR      FWRITE               HAND
03242 00004D40 48F9080000002B1A              MOVEM.L  A3-A3,CURFCB     RESTORE
03243 00004D48 660A                          BNE.S    PDEROR             IF AN
03244 00004D4A 4CDF3810                      MOVEM.L  (A7)+,A3-A5/D4
03245 00004D4E 4CDF0020                      MOVEM.L  (A7)+,D5-D5
03246 00004D52 4E75                          RTS      ELSE RETURN
03247 00004D54
03248 00004D54 42B900001710         PDEROR   CLR.L    FOADDR             SO ERR
03249 00004D5A 4EB9000043CE                  JSR      PERROR               GO R
03250 00004D60 4EF90000303A                  JMP      WARMS                AND
03251 00004D66
03252 00004D66                      *******************************************
03253 00004D66
03254 00004D66                      * RESET DEVICE TABLE: COPY DEFAULT INTO ALL
03255 00004D66                      * HAS TWO ENTRY POINTS: RESDEV RESETS EVERY
03256 00004D66                      * COLDSTART, AND RESDV1 RESETS ONLY DEVICE
03257 00004D66                      * ON EVERY WARMSTART.
03258 00004D66
03259 00004D66 4BFAD366             RESDEV   LEA      DEVTAB(PC),A5        POIN
03260 00004D6A 4DFAD5E2                      LEA      DEVDEF(PC),A6        DEFA
03261 00004D6E 4DEEFFFC             REDLOO   LEA      -4(A6),A6            BACK
03262 00004D72 2D6E00500000                  MOVE.L   80(A6),0(A6)      AND COP
03263 00004D78 BDCD                          CMP.L    A5,A6              CHECK
03264 00004D7A 66F2                          BNE.S    REDLOO             REPEAT
03265 00004D7C 2B7C4E554C4C0230              MOVE.L   #$4E554C4C,560(A5) DEVICE
03266 00004D84 4DFA0034                      LEA      NULRTS(PC),A6        DUMM
03267 00004D88 2B4E0250                      MOVE.L   A6,592(A5)        INTO OU
03268 00004D8C 2B4E0254                      MOVE.L   A6,596(A5)        AND OUT
03269 00004D90 2B4E0258                      MOVE.L   A6,600(A5)        AND OUT
03270 00004D94 13FC0000000020CA     RESDV1   MOVE.B   #0,DEVIN          CURRENT
03271 00004D9C 13FC0000000020CB              MOVE.B   #0,DEVOUT         CURRENT
03272 00004DA4 13FC0001000020CC              MOVE.B   #1,DEVERR         CURRENT
03273 00004DAC 13FC0002000020CD              MOVE.B   #2,DEVPRT         CURRENT
03274 00004DB4 4E71                          NOP
03275 00004DB6 4E71                          NOP
03276 00004DB8 4E75                          RTS
03277 00004DBA 023C00FB             NULRTS   AND.B    #$FB,CCR           RETURN
03278 00004DBE 4E75                          RTS
03279 00004DC0
03280 00004DC0                      *******************************************
03281 00004DC0
03282 00004DC0                      * FINDEV - FIND A DEVICE.
03283 00004DC0                      * ENTER: A4 POINTS TO AN FCB WHICH HAS LOGI
03284 00004DC0                      * EXIT: IF FOUND IN DEVTAB, THEN PUT $10+DE
03285 00004DC0                      *       IF NOT FOUND, LEAVE NUMBER UNCHANGE
03286 00004DC0                      * USES: D7
03287 00004DC0
03288 00004DC0 1E2C000C             FINDEV   MOVE.B   FCBEXT(A4),D7     CHECK E
03289 00004DC4 664A                          BNE.S    FINDV4             ERROR
03290 00004DC6 2E2C0008                      MOVE.L   FCBNAM+4(A4),D7   CHECK D
03291 00004DCA 6644                          BNE.S    FINDV4             ERROR
03292 00004DCC 2E2C0004                      MOVE.L   FCBNAM(A4),D7     ELSE LO
03293 00004DD0 BEB9000020CE                  CMP.L    DEVTAB,D7          CHECK
03294 00004DD6 6740                          BEQ.S    ISDEV0             FOUND
03295 00004DD8 BEB90000211E                  CMP.L    DEVTAB+80,D7       CHECK
03296 00004DDE 6740                          BEQ.S    ISDEV1             FOUND
03297 00004DE0 BEB90000216E                  CMP.L    DEVTAB+160,D7
03298 00004DE6 6740                          BEQ.S    ISDEV2
03299 00004DE8 BEB9000021BE                  CMP.L    DEVTAB+240,D7
03300 00004DEE 6740                          BEQ.S    ISDEV3
03301 00004DF0 BEB90000220E                  CMP.L    DEVTAB+320,D7
03302 00004DF6 6740                          BEQ.S    ISDEV4
03303 00004DF8 BEB90000225E                  CMP.L    DEVTAB+400,D7
03304 00004DFE 6740                          BEQ.S    ISDEV5
03305 00004E00 BEB9000022AE                  CMP.L    DEVTAB+480,D7
03306 00004E06 6740                          BEQ.S    ISDEV6
03307 00004E08 BEB9000022FE                  CMP.L    DEVTAB+560,D7      CHECK
03308 00004E0E 6740                          BEQ.S    ISDEV7             FOUND
03309 00004E10 197C00040001         FINDV4   MOVE.B   #4,FCBERR(A4)
03310 00004E16 4E75                          RTS      AND RETURN
03311 00004E18
03312 00004E18 197C00100003         ISDEV0   MOVE.B   #$10,FCBDRV(A4)   DEVICE
03313 00004E1E 6036                          BRA.S    FINDVX             AND FI
03314 00004E20 197C00110003         ISDEV1   MOVE.B   #$11,FCBDRV(A4)
03315 00004E26 602E                          BRA.S    FINDVX
03316 00004E28 197C00120003         ISDEV2   MOVE.B   #$12,FCBDRV(A4)
03317 00004E2E 6026                          BRA.S    FINDVX
03318 00004E30 197C00130003         ISDEV3   MOVE.B   #$13,FCBDRV(A4)
03319 00004E36 601E                          BRA.S    FINDVX
03320 00004E38 197C00140003         ISDEV4   MOVE.B   #$14,FCBDRV(A4)
03321 00004E3E 6016                          BRA.S    FINDVX
03322 00004E40 197C00150003         ISDEV5   MOVE.B   #$15,FCBDRV(A4)
03323 00004E46 600E                          BRA.S    FINDVX
03324 00004E48 197C00160003         ISDEV6   MOVE.B   #$16,FCBDRV(A4)
03325 00004E4E 6006                          BRA.S    FINDVX
03326 00004E50 197C00170003         ISDEV7   MOVE.B   #$17,FCBDRV(A4)
03327 00004E56 42390000170E         FINDVX   CLR.B    ERRTYP
03328 00004E5C 422C0001                      CLR.B    FCBERR(A4)         NO ERR
03329 00004E60 4E75                          RTS      AND RETURN
03330 00004E62
03331 00004E62                      *******************************************
03332 00004E62                      * KILLU1 - ERASE TYPEAHEAD BUFFER IN SELECT
03333 00004E62                      *******************************************
03334 00004E62
03335 00004E62 4285                 KILLU1   CLR.L    D5
03336 00004E64 1A39000020CA                  MOVE.B   DEVIN,D5          CURRENT
03337 00004E6A CAFC0050                      MULU     #80,D5              TIMES
03338 00004E6E 4DFAD25E                      LEA      DEVTAB(PC),A6        POIN
03339 00004E72 2C765040                      MOVE.L   DTKILL(A6,D5),A6
03340 00004E76 4ED6                          JMP      (A6)                 JUMP
03341 00004E78
03342 00004E78 00000000                      EVEN
03343 00004E78
03344 00004E78                      *         LIB      1.TXFMS1
03345 00004E78
03346 00004E78                      * FCS INITIALIZATION
03347 00004E78                      *
03348 00004E78                      * CALLED BY: USER
03349 00004E78                      * INPUT:
03350 00004E78                      * OUTPUT:
03351 00004E78                      * REGISTERS USED: D5, A6
03352 00004E78
03353 00004E78
03354 00004E78 48E7000C             FCSINI   MOVEM.L  A4/A5,-(A7)      PUSH FCB
03355 00004E7C 40C5                          MOVE     SR,D5               AND S
03356 00004E7E 48A70400                      MOVEM.W  D5-D5,-(A7)
03357 00004E82 4EB900001106                  JSR      DIWARM               DO D
03358 00004E88 4EB90000105C                  JSR      SECWAR               AND
03359 00004E8E 6054                          BRA.S    CLRDTB             CLEAR
03360 00004E90
03361 00004E90                      * FCSCLS - CLOSE ALL OPEN FILES
03362 00004E90                      *
03363 00004E90                      * CALLED BY: USER AND DOS
03364 00004E90                      * INPUT: NONE
03365 00004E90                      * OUTPUT: A5 POINTS TO BAD FCB ON CLOSING E
03366 00004E90                      * REGISTERS USED: A5, A6, D5 (PRESERVES A4)
03367 00004E90
03368 00004E90 48E7000C             FCSCLS   MOVEM.L  A4/A5,-(A7)      SAVE FCB
03369 00004E94 42390000170E                  CLR.B    ERRTYP
03370 00004E9A 2A39000023A6         FCSCL0   MOVE.L   FBAPTR,D5         LOOK AT
03371 00004EA0 673C                          BEQ.S    FCSEXT             STOP I
03372 00004EA2 2845                          MOVE.L   D5,A4
03373 00004EA4
03374 00004EA4 99FC00000044         FCSCL1   SUB.L    #FCBLST,A4         POINT
03375 00004EAA 23CC00002B1A                  MOVE.L   A4,CURFCB         CURRENT
03376 00004EB0 42390000170E                  CLR.B    ERRTYP
03377 00004EB6 422C0001                      CLR.B    FCBERR(A4)
03378 00004EBA 610008D6                      BSR.L    FCS4               GO CLO
03379 00004EBE 6602                          BNE.S    FCSCL2             IF ERR
03380 00004EC0 60D8                          BRA.S    FCSCL0             ELSE G
03381 00004EC2
03382 00004EC2 2F4C0004             FCSCL2   MOVE.L   A4,4(A7)          ON ERRO
03383 00004EC6 42B9000023A6                  CLR.L    FBAPTR             FORCE
03384 00004ECC 1A3C000D                      MOVE.B   #13,D5            ERROR 1
03385 00004ED0 4EB90000438A                  JSR      RPTER0               GO R
03386 00004ED6 13FC000D0000170E              MOVE.B   #13,ERRTYP        STORE I
03387 00004EDE 40C5                 FCSEXT   MOVE     SR,D5               SAVE
03388 00004EE0 48A70400                      MOVEM.W  D5-D5,-(A7)
03389 00004EE4 2C7C00002D2A         CLRDTB   MOVE.L   #DRTABL,A6        READY T
03390 00004EEA 3A3C0018                      MOVE.W   #24,D5            100 BYT
03391 00004EEE 429E                 FCSEX1   CLR.L    (A6)+
03392 00004EF0 51CDFFFC                      DBRA     D5,FCSEX1
03393 00004EF4
03394 00004EF4                      * CLEAR RANDOM FILE MEMORY
03395 00004EF4
03396 00004EF4 23FCFFFFFFFF00002B1E          MOVE.L   #-1,RANADD        ERASE F
03397 00004EFE 427900002B26                  CLR.W    FMTRSE             AND TR
03398 00004F04
03399 00004F04 4C9F0020                      MOVEM.W  (A7)+,D5-D5
03400 00004F08 44C5                          MOVE     D5,CCR              RESTO
03401 00004F0A 4CDF3000                      MOVEM.L  (A7)+,A4/A5
03402 00004F0E 4E75                          RTS
03403 00004F10
03404 00004F10                      * FCS - FILE MANAGEMENT SYSTEM
03405 00004F10                      *
03406 00004F10                      * FREAD - READ NEXT BYTE FROM FILE PREVIOUS
03407 00004F10                      *   TWO ENTRY POINTS - FREAD INTERNAL, AND
03408 00004F10                      *
03409 00004F10                      * CALLED BY:
03410 00004F10                      * INPUT:
03411 00004F10                      * OUTPUT:
03412 00004F10                      * REGISTERS USED:
03413 00004F10
03414 00004F10                      * EXTERNAL ENTRY POINT - CHECKS THAT FILE R
03415 00004F10 48E70008             FREADO   MOVEM.L  A4-A4,-(A7)
03416 00004F14
03417 00004F14                      * CHECK WHETHER READ FROM DEVICE OR FILE
03418 00004F14
03419 00004F14 1A2C0003                      MOVE.B   FCBDRV(A4),D5     GET DRI
03420 00004F18 0C05000A                      CMP.B    #10,D5             CHECK
03421 00004F1C 640000F2                      BCC.L    FCS0DR             DO DEV
03422 00004F20 1A2C0002                      MOVE.B   FCBRW(A4),D5      CHECK I
03423 00004F24 0C050001                      CMP.B    #1,D5
03424 00004F28 6728                          BEQ.S    FCS0R              YES, I
03425 00004F2A 0C050003                      CMP.B    #3,D5
03426 00004F2E 6722                          BEQ.S    FCS0R              YES, I
03427 00004F30 0C050053                      CMP.B    #83,D5
03428 00004F34 671C                          BEQ.S    FCS0R              YES, D
03429 00004F36 13FC001E0000170E              MOVE.B   #30,ERRTYP        ELSE ER
03430 00004F3E 6000006C                      BRA.L    F0REXT             AND EX
03431 00004F42
03432 00004F42                      * INTERNAL ENTRY POINT
03433 00004F42 48E70008             FREAD    MOVEM.L  A4-A4,-(A7)
03434 00004F46
03435 00004F46                      * CHECK WHETHER READ FROM DEVICE OR FILE
03436 00004F46
03437 00004F46 1A2C0003                      MOVE.B   FCBDRV(A4),D5     GET DRI
03438 00004F4A 0C05000A                      CMP.B    #10,D5             CHECK
03439 00004F4E 640000C0                      BCC.L    FCS0DR             DO DEV
03440 00004F52
03441 00004F52                      * READ NEXT BYTE FROM FILE
03442 00004F52
03443 00004F52 423900002B03         FCS0R    CLR.B    SCFLAG             CLR SC
03444 00004F58 1A2C003B                      MOVE.B   FCBSCF(A4),D5     CHECK S
03445 00004F5C 670A                          BEQ.S    FCS0RD             ZERO M
03446 00004F5E 6B08                          BMI.S    FCS0RD             >128 M
03447 00004F60 042C0001003B                  SUB.B    #1,FCBSCF(A4)      ELSE D
03448 00004F66 6028                          BRA.S    GIVESP             AND GO
03449 00004F68 4A2C0031             FCS0RD   TST.B    FCBDPT(A4)         CHECK
03450 00004F6C 675C                          BEQ.S    FCS0RN             0 MEAN
03451 00004F6E
03452 00004F6E                      * WHILE STILL IN CURRENT SECTOR
03453 00004F6E 4286                 FCS0R0   CLR.L    D6
03454 00004F70 1C2C0031                      MOVE.B   FCBDPT(A4),D6     GET DAT
03455 00004F74 4285                          CLR.L    D5                 CLEAR
03456 00004F76 1A346060                      MOVE.B   FCBDAT(A4,D6),D5  GET NEX
03457 00004F7A 062C00010031                  ADD.B    #1,FCBDPT(A4)      INCREM
03458 00004F80 4A3900002B03                  TST.B    SCFLAG             WAITIN
03459 00004F86 6710                          BEQ.S    FCS0R1             NO, JU
03460 00004F88 04050001                      SUB.B    #01,D5             YES, S
03461 00004F8C 1945003B                      MOVE.B   D5,FCBSCF(A4)     STORE I
03462 00004F90 4285                 GIVESP   CLR.L    D5
03463 00004F92 1A3C0020                      MOVE.B   #$20,D5           SUBSTIT
03464 00004F96 6014                          BRA.S    F0REXT             AND EX
03465 00004F98
03466 00004F98 0C050009             FCS0R1   CMP.B    #$09,D5            POSSIB
03467 00004F9C 660E                          BNE.S    F0REXT             NO, SO
03468 00004F9E 4A2C003B                      TST.B    FCBSCF(A4)         SHOULD
03469 00004FA2 6608                          BNE.S    F0REXT             NO, JU
03470 00004FA4 13C500002B03                  MOVE.B   D5,SCFLAG         YES, SO
03471 00004FAA 60BC                          BRA.S    FCS0RD             ...GO
03472 00004FAC 4EB900006230         F0REXT   JSR      CPYERR               CHEC
03473 00004FB2 6610                          BNE.S    F0REX2             EXIT O
03474 00004FB4 4A05                          TST.B    D5                 CHECK
03475 00004FB6 660A                          BNE.S    F0REX1             NOT ZE
03476 00004FB8 2857                          MOVE.L   (A7),A4           POINT B
03477 00004FBA 4A2C003B                      TST.B    FCBSCF(A4)         SPACE
03478 00004FBE 6A00FF92                      BPL.W    FCS0R              YES, Z
03479 00004FC2 4286                 F0REX1   CLR.L    D6                 RESET
03480 00004FC4 4CDF1000             F0REX2   MOVEM.L  (A7)+,A4-A4
03481 00004FC8 4E75                          RTS
03482 00004FCA
03483 00004FCA                      * WHEN FCBDPT=0 WE NEED A NEW SECTOR
03484 00004FCA
03485 00004FCA                      * ON RANDOM READ, CHECK IF CURRENT SECTOR H
03486 00004FCA                      * IF YES, THEN WRITE IT BACK BEFORE READING
03487 00004FCA
03488 00004FCA 4A2C001A             FCS0RN   TST.B    FCBRAN(A4)         CHECK
03489 00004FCE 6714                          BEQ.S    RF0REX             NO, JU
03490 00004FD0 4A2C0002                      TST.B    FCBRW(A4)          HAS IT
03491 00004FD4 6A0E                          BPL.S    RF0REX             NO, JU
03492 00004FD6 022C000F0002                  AND.B    #$0F,FCBRW(A4)     ERASE
03493 00004FDC 4EB900005FD4                  JSR      FCS10                WRIT
03494 00004FE2 66C8                          BNE.S    F0REXT               IF E
03495 00004FE4
03496 00004FE4 3C2C0060             RF0REX   MOVE.W   FCBDAT(A4),D6     CHECK T
03497 00004FE8 671C                          BEQ.S    F0REOF               ON E
03498 00004FEA 39460022                      MOVE.W   D6,FCBCTR(A4)     ELSE ST
03499 00004FEE 4EB900005F8C                  JSR      FCS9                 GO R
03500 00004FF4 66B6                          BNE.S    F0REXT               EXIT
03501 00004FF6 396C0062004E                  MOVE.W   FCBDAT+2(A4),FCBCRN(A4) C
03502 00004FFC 197C00040031                  MOVE.B   #4,FCBDPT(A4)     START R
03503 00005002 6000FF6A                      BRA      FCS0R0               NOW
03504 00005006
03505 00005006                      * AT END OF FILE, GENERATE ERROR 8
03506 00005006 13FC00080000170E     F0REOF   MOVE.B   #8,ERRTYP         ERROR 8
03507 0000500E 609C                          BRA.S    F0REXT               AND
03508 00005010
03509 00005010                      * FREAD FROM DEVICE
03510 00005010
03511 00005010 04050010             FCS0DR   SUB.B    #$10,D5            CVT 10
03512 00005014 0C050007                      CMP.B    #7,D5              CHECK
03513 00005018 6400FF38                      BCC.L    FCS0R              DO AS
03514 0000501C 0285000000FF                  AND.L    #$FF,D5            CLEAR
03515 00005022 13C500002AD5                  MOVE.B   D5,DEVNOW         CURRENT
03516 00005028 CAFC0050                      MULU     #80,D5              TIMES
03517 0000502C 49FAD0A0                      LEA      DEVTAB(PC),A4
03518 00005030 D9C5                          ADD.L    D5,A4              POINTE
03519 00005032 23CC00002AD6                  MOVE.L   A4,DEVADD         POINTER
03520 00005038 4EB900004A1E                  JSR      GETCFF               USE
03521 0000503E 287900002AD6                  MOVE.L   DEVADD,A4
03522 00005044 BA2C0034                      CMP.B    DTEOFI(A4),D5      CHECK
03523 00005048 67BC                          BEQ.S    F0REOF             GENERA
03524 0000504A 4EB900006230                  JSR      CPYERR               COPY
03525 00005050 6000FF72                      BRA.L    F0REX2             THEN E
03526 00005054
03527 00005054                      *
03528 00005054                      * FWRITE - WRITE NEXT BYTE TO FILE PREVIOUS
03529 00005054                      *  TWO ENTRY POINTS: FWRITE INTERNAL, FWRIT
03530 00005054                      *
03531 00005054                      * CALLED BY:
03532 00005054                      * INPUT:
03533 00005054                      * OUTPUT:
03534 00005054                      * REGISTERS USED:
03535 00005054
03536 00005054
03537 00005054                      * EXTERNAL ENTRY POINT - CHECKS THAT FILE R
03538 00005054 48E70008             FWRITO   MOVEM.L  A4-A4,-(A7)
03539 00005058
03540 00005058                      * CHECK WHETHER WRITE TO DEVICE OR FILE
03541 00005058
03542 00005058 1A2C0003                      MOVE.B   FCBDRV(A4),D5     GET DRI
03543 0000505C 0C05000A                      CMP.B    #10,D5             CHECK
03544 00005060 64000376                      BCC.L    FCS0DW             DO DEV
03545 00005064 1A2C0002                      MOVE.B   FCBRW(A4),D5      CHECK I
03546 00005068 0C050002                      CMP.B    #2,D5
03547 0000506C 6728                          BEQ.S    FCS0W              YES, I
03548 0000506E 0C050003                      CMP.B    #3,D5
03549 00005072 6722                          BEQ.S    FCS0W              YES, I
03550 00005074 0C050053                      CMP.B    #83,D5
03551 00005078 671C                          BEQ.S    FCS0W              YES, D
03552 0000507A 13FC001E0000170E              MOVE.B   #30,ERRTYP        ERROR 3
03553 00005082 60000166                      BRA.L    F0RITX             AND EX
03554 00005086
03555 00005086                      * INTERNAL ENTRY POINT
03556 00005086 48E70008             FWRITE   MOVEM.L  A4-A4,-(A7)
03557 0000508A
03558 0000508A                      * CHECK WHETHER WRITE TO DEVICE OR FILE
03559 0000508A
03560 0000508A 1A2C0003                      MOVE.B   FCBDRV(A4),D5     GET DRI
03561 0000508E 0C05000A                      CMP.B    #10,D5             CHECK
03562 00005092 64000344                      BCC.L    FCS0DW             DO DEV
03563 00005096
03564 00005096                      * SPACE COMPRESSION IS NOT ALLOWED ON RANDO
03565 00005096 4A2C001A             FCS0W    TST.B    FCBRAN(A4)         IS IT
03566 0000509A 6706                          BEQ.S    FCS0WN             NO, NO
03567 0000509C 197C00FF003B                  MOVE.B   #$FF,FCBSCF(A4)   YES, TU
03568 000050A2
03569 000050A2 4A2C003B             FCS0WN   TST.B    FCBSCF(A4)         SPACE
03570 000050A6 6B72                          BMI.S    F0WRI1             NO, SO
03571 000050A8
03572 000050A8                      * 0-7F MEANS COMPRESSION, SO COMPRESS
03573 000050A8 0C040020             F0COMP   CMP.B    #$20,D4            IS CUR
03574 000050AC 6636                          BNE.S    F0NOSP             NO, SO
03575 000050AE 062C0001003B                  ADD.B    #1,FCBSCF(A4)      YES, S
03576 000050B4 0C2C007F003B                  CMP.B    #$7F,FCBSCF(A4)    CHECK
03577 000050BA 6408                          BCC.S    F0WOUT             IF >12
03578 000050BC 4285                 F0WEXK   CLR.L    D5                 ELSE E
03579 000050BE 4CDF1000             F0WEX    MOVEM.L  (A7)+,A4-A4
03580 000050C2 4E75                          RTS
03581 000050C4
03582 000050C4                      *IF MORE THAN 126 SPACES, OUTPUT AND RESET
03583 000050C4 183C0009             F0WOUT   MOVE.B   #$09,D4           TAB
03584 000050C8 614C                          BSR.S    F0WRIT             WRITE
03585 000050CA 66F2                          BNE.S    F0WEX              EXIT O
03586 000050CC 182C003B                      MOVE.B   FCBSCF(A4),D4     GET SPA
03587 000050D0 422C003B                      CLR.B    FCBSCF(A4)         CLEAR
03588 000050D4 6140                          BSR.S    F0WRIT             WRITE
03589 000050D6 6706                          BEQ.S    F0WOUK             IF NO
03590 000050D8 183C0020                      MOVE.B   #$20,D4           RESTORE
03591 000050DC 60E0                          BRA.S    F0WEX              AND RE
03592 000050DE 183C0020             F0WOUK   MOVE.B   #$20,D4           RESTORE
03593 000050E2 60D8                          BRA.S    F0WEXK             AND RE
03594 000050E4
03595 000050E4                      * IF CURRENT IS NOT A SPACE, OUTPUT IT
03596 000050E4 1944003D             F0NOSP   MOVE.B   D4,FCBSCF+2(A4)   TEMPORA
03597 000050E8 1C2C003B                      MOVE.B   FCBSCF(A4),D6     GET SPA
03598 000050EC 672C                          BEQ.S    F0WRI1             NO COM
03599 000050EE 0C060001                      CMP.B    #1,D6              SEE IF
03600 000050F2 6606                          BNE.S    COMPRE             DO COM
03601 000050F4 183C0020                      MOVE.B   #$20,D4           ELSE OU
03602 000050F8 600C                          BRA.S    JUST1
03603 000050FA 183C0009             COMPRE   MOVE.B   #$09,D4           ELSE OU
03604 000050FE 6116                          BSR.S    F0WRIT             WRITE
03605 00005100 66BC                          BNE.S    F0WEX              EXIT O
03606 00005102 182C003B                      MOVE.B   FCBSCF(A4),D4     GET SPA
03607 00005106 422C003B             JUST1    CLR.B    FCBSCF(A4)         CLEAR
03608 0000510A 610A                          BSR.S    F0WRIT             WRITE
03609 0000510C 66B0                          BNE.S    F0WEX              EXIT O
03610 0000510E 182C003D                      MOVE.B   FCBSCF+2(A4),D4   RESTORE
03611 00005112 60000006                      BRA.L    F0WRI1             OUTPUT
03612 00005116
03613 00005116                      * ROUTINE TO OUTPUT CHARACTER IN D4
03614 00005116 48E70008             F0WRIT   MOVEM.L  A4-A4,-(A7)
03615 0000511A
03616 0000511A 3A2C004E             F0WRI1   MOVE.W   FCBCRN(A4),D5     CURRENT
03617 0000511E 6710                          BEQ.S    F0NEW              NOT YE
03618 00005120 0245FF00                      AND.W    #$FF00,D5
03619 00005124 0C45FF00                      CMP.W    #$FF00,D5          CHECK
03620 00005128 660000CC                      BNE      F0OLD                IS I
03621 0000512C 422C004E                      CLR.B    FCBCRN(A4)         CHANGE
03622 00005130
03623 00005130                      * WHEN FCBCRN=0 OR FFXX, FILE HAS JUST BEEN
03624 00005130                      * IS THE FIRST BYTE TO BE WRITTEN TO IT
03625 00005130 4EB900006080         F0NEW    JSR      GRABIT                 GO
03626 00005136 660000B2                      BNE      F0RITX
03627 0000513A 3C2C0016                      MOVE.W   FCBLTR(A4),D6       LAST
03628 0000513E 39460012                      MOVE.W   D6,FCBFTR(A4)       IT'S
03629 00005142 39460022                      MOVE.W   D6,FCBCTR(A4)       AND A
03630 00005146
03631 00005146                      * ON FIRST WRITE TO RANDOM FILE, GET SECTOR
03632 00005146                      * SET UP TWO EMPTY FILE MAP SECTORS, AND PU
03633 00005146                      * INTO FILE MAP
03634 00005146 4A2C001A                      TST.B    FCBRAN(A4)         IS IT
03635 0000514A 676A                          BEQ.S    F0FERA               NO,
03636 0000514C 13EC0003000019AD              MOVE.B   FCBDRV(A4),SIRFCB+FCBDRV
03637 00005154 4EB9000061CE                  JSR      SUMNAM
03638 0000515A 6600008E                      BNE      F0RITX               EXIT
03639 0000515E 1979000019C8003C              MOVE.B   SIRFCB+30,FCBSPT(A4) SECT
03640 00005166 4DEC0060                      LEA      FCBDAT(A4),A6        POIN
03641 0000516A 3C3C003F                      MOVE.W   #63,D6            COUNTER
03642 0000516E 429E                 ISR0E2   CLR.L    (A6)+              ERASE
03643 00005170 51CEFFFC                      DBRA     D6,ISR0E2
03644 00005174 4EB900006080                  JSR      GRABIT               GET
03645 0000517A 666E                          BNE.S    F0RITX
03646 0000517C 396C00160060                  MOVE.W   FCBLTR(A4),FCBDAT(A4) GET
03647 00005182 4EB900005FD4                  JSR      FCS10                WRIT
03648 00005188 6660                          BNE.S    F0RITX
03649 0000518A 396C00160022                  MOVE.W   FCBLTR(A4),FCBCTR(A4) SEC
03650 00005190 4EB900006080                  JSR      GRABIT               GET
03651 00005196 6652                          BNE.S    F0RITX
03652 00005198 396C00160060                  MOVE.W   FCBLTR(A4),FCBDAT(A4) POI
03653 0000519E 4EB900005FD4                  JSR      FCS10                WRIT
03654 000051A4 6644                          BNE.S    F0RITX
03655 000051A6 396C00160022                  MOVE.W   FCBLTR(A4),FCBCTR(A4) THI
03656 000051AC 397C00020018                  MOVE.W   #2,FCBSIZ(A4)     FILE SI
03657 000051B2 6178                          BSR.S    PUTINM              PUT C
03658 000051B4 6634                          BNE.S    F0RITX
03659 000051B6
03660 000051B6                      * THEN CONTINUE
03661 000051B6 4DEC0060             F0FERA   LEA      FCBDAT(A4),A6        POIN
03662 000051BA 3C3C003F                      MOVE.W   #63,D6            COUNTER
03663 000051BE 429E                 F0FER1   CLR.L    (A6)+
03664 000051C0 51CEFFFC                      DBRA     D6,F0FER1         ERASE D
03665 000051C4 066C00010018                  ADD.W    #1,FCBSIZ(A4)      SIZE=S
03666 000051CA 3C2C004E                      MOVE.W   FCBCRN(A4),D6
03667 000051CE 06460001                      ADD.W    #1,D6              BUMP C
03668 000051D2 3946004E                      MOVE.W   D6,FCBCRN(A4)
03669 000051D6 39460062                      MOVE.W   D6,FCBDAT+2(A4)   BECOMES
03670 000051DA
03671 000051DA 4286                 F0PUT    CLR.L    D6
03672 000051DC 1C2C0031                      MOVE.B   FCBDPT(A4),D6     DATA PO
03673 000051E0 062C00010031                  ADD.B    #1,FCBDPT(A4)      BUMP B
03674 000051E6 19846060                      MOVE.B   D4,FCBDAT(A4,D6)  PUT OUT
03675 000051EA
03676 000051EA 4EB900006230         F0RITX   JSR      CPYERR
03677 000051F0 4CDF1000                      MOVEM.L  (A7)+,A4-A4
03678 000051F4 4E75                          RTS
03679 000051F6
03680 000051F6                      * AFTER THE VERY FIRST BYTE IS PUT INTO FCB
03681 000051F6 4A2C0031             F0OLD    TST.B    FCBDPT(A4)         CHECK
03682 000051FA 66DE                          BNE.S    F0PUT              PUT BY
03683 000051FC
03684 000051FC                      * FINALLY, IF DPT=0, THEN WE HAVE REACHED E
03685 000051FC                      * SECTOR. WE HAVE TO WRITE THIS ONE OUT AND
03686 000051FC
03687 000051FC 4EB900006080                  JSR      GRABIT               GO G
03688 00005202 66E6                          BNE.S    F0RITX             EXIT O
03689 00005204 396C00160060                  MOVE.W   FCBLTR(A4),FCBDAT(A4) ITS
03690 0000520A 4EB900005FD4                  JSR      FCS10                GO W
03691 00005210 66D8                          BNE.S    F0RITX
03692 00005212 197C00040031                  MOVE.B   #4,FCBDPT(A4)     NEXT BY
03693 00005218 396C00160022                  MOVE.W   FCBLTR(A4),FCBCTR(A4) NEX
03694 0000521E
03695 0000521E                      * FINISHED IF NOT RANDOM; OTHERWISE DO SOME
03696 0000521E 4A2C001A                      TST.B    FCBRAN(A4)         IS IT
03697 00005222 6792                          BEQ.S    F0FERA             NO, JU
03698 00005224
03699 00005224                      * EACH TIME A SECTOR IS WRITTEN TO A RANDOM
03700 00005224                      * UPDATE THE FILE MAP TO INCLUDE IT
03701 00005224
03702 00005224 6106                 ISR0W3   BSR.S    PUTINM             UPDATE
03703 00005226 4EF9000051B6                  JMP      F0FERA               JMP
03704 0000522C
03705 0000522C                      * PUTINM - SUBROUTINE TO PUT CURRENT SECTOR
03706 0000522C
03707 0000522C 396C0022003E         PUTINM   MOVE.W   FCBCTR(A4),FCBTMP(A4) SAV
03708 00005232 61000118                      BSR      RDFMAP               READ
03709 00005236 6600008A                      BNE.L    PUTEX              IF ERR
03710 0000523A
03711 0000523A                      * CHECK FIRST ENTRY
03712 0000523A 4DF900002B2E         ROWUP1   LEA      FILMAP,A6            POIN
03713 00005240 4A56                          TST.W    (A6)               CHECK
03714 00005242 67000086                      BEQ.L    MAKNEW             EMPTY,
03715 00005246
03716 00005246                      * FIND LAST NON-EMPTY
03717 00005246 4A2E0003             FINLAS   TST.B    3(A6)              CHECK
03718 0000524A 6606                          BNE.S    FINLA1             DEFINI
03719 0000524C 4A2E0004                      TST.B    4(A6)              CHECK
03720 00005250 6708                          BEQ.S    GOTLAS             NOW ON
03721 00005252 DDFC00000003         FINLA1   ADD.L    #3,A6              NOT LA
03722 00005258 60EC                          BRA.S    FINLAS             ELSE C
03723 0000525A
03724 0000525A                      * CALCULATE NEXT SECTOR AFTER LAST ENTRY
03725 0000525A 1E2E0000             GOTLAS   MOVE.B   0(A6),D7          GET TRA
03726 0000525E 1C2E0001                      MOVE.B   1(A6),D6          AND SEC
03727 00005262 1A2E0002                      MOVE.B   2(A6),D5          GET COU
03728 00005266 0C0500FF                      CMP.B    #255,D5            IS IT
03729 0000526A 673A                          BEQ.S    GO2NEW             YES, S
03730 0000526C 06060001             NOTFUL   ADD.B    #01,D6             BUMP S
03731 00005270 BC2C003C                      CMP.B    FCBSPT(A4),D6      PAST E
03732 00005274 6316                          BLS.S    ONTRAK             NO, ST
03733 00005276 06070001                      ADD.B    #1,D7              INCREM
03734 0000527A 1C2C0048                      MOVE.B   FCBPHY(A4),D6     PHYSICA
03735 0000527E 08060005                      BTST     #5,D6               CHECK
03736 00005282 6606                          BNE.S    HARDSK             YES HA
03737 00005284 1C3C0001                      MOVE.B   #1,D6             NO, STA
03738 00005288 6002                          BRA.S    ONTRAK                AND
03739 0000528A 4206                 HARDSK   CLR.B    D6                 YES, S
03740 0000528C 04050001             ONTRAK   SUB.B    #01,D5             BUMP C
03741 00005290 66DA                          BNE.S    NOTFUL
03742 00005292
03743 00005292                      * D7 NOW HAS TRACK AND D6 HAS SECTOR AFTER
03744 00005292 BE2C003E                      CMP.B    FCBTMP(A4),D7      IS TRA
03745 00005296 660E                          BNE.S    GO2NEW             NO, GO
03746 00005298 BC2C003F                      CMP.B    FCBTMP+1(A4),D6    SECTOR
03747 0000529C 6608                          BNE.S    GO2NEW             NO, GO
03748 0000529E 062E00010002                  ADD.B    #1,2(A6)           YES, B
03749 000052A4 6036                          BRA.S    PUTBAK
03750 000052A6
03751 000052A6                      * GO TO A NEW ENTRY, BUT CHECK IF FULL
03752 000052A6 DDFC00000003         GO2NEW   ADD.L    #3,A6              GO TO
03753 000052AC BDFC00002D26                  CMP.L    #FMP504,A6         PAST E
03754 000052B2 6516                          BCS.S    MAKNEW             IF OK
03755 000052B4 13FC00170000170E     ERR23    MOVE.B   #23,ERRTYP        ELSE IT
03756 000052BC 197C00170001                  MOVE.B   #23,FCBERR(A4)    ALSO IN
03757 000052C2 396C003E0022         PUTEX    MOVE.W   FCBTMP(A4),FCBCTR(A4) RES
03758 000052C8 4E75                          RTS      RTS
03759 000052CA
03760 000052CA                      * MAKE A NEW ENTRY WITH COUNT OF 1
03761 000052CA 3A2C003E             MAKNEW   MOVE.W   FCBTMP(A4),D5     GET CUR
03762 000052CE 1D450001                      MOVE.B   D5,1(A6)          PUT IN
03763 000052D2 E04D                          LSR.W    #8,D5              MOVE T
03764 000052D4 1C85                          MOVE.B   D5,(A6)           THEN PU
03765 000052D6 1D7C00010002                  MOVE.B   #1,2(A6)          AND A L
03766 000052DC
03767 000052DC                      * NOW FIGURE OUT WHICH SECTOR WAS MODIFIED
03768 000052DC BDFC00002C2A         PUTBAK   CMP.L    #FMP252,A6         ARE WE
03769 000052E2 652C                          BCS.S    WRITE1             NO, WR
03770 000052E4
03771 000052E4                      * THE FOLLOWING CODE HAS THE DISADVANTAGE T
03772 000052E4                      * SECTOR OF THE FILE MAP FOR EACH FILE SECT
03773 000052E4                      * SHOULD ULTIMATELY BE CHANGED TO WRITE OUT
03774 000052E4                      * THE FILE MAP IS CLOSED, OR WHEN A NEW FIL
03775 000052E4
03776 000052E4                      * WRITE OUT SECOND SECTOR ONLY
03777 000052E4 4BF900002C2A                  LEA      FILMAP+252,A5        POIN
03778 000052EA 2C7900002B1E                  MOVE.L   RANADD,A6         ADDRESS
03779 000052F0 DDFC00000060                  ADD.L    #FCBDAT,A6         POINT
03780 000052F6 3CF900002B28                  MOVE.W   HDR2,(A6)+        FIRST T
03781 000052FC 425E                          CLR.W    (A6)+              ALWAYS
03782 000052FE 3C3C003E                      MOVE.W   #62,D6            SET COU
03783 00005302 2CDD                 MOVE2    MOVE.L   (A5)+,(A6)+       MOVE FO
03784 00005304 51CEFFFC                      DBRA     D6,MOVE2          REPEAT
03785 00005308 287900002B1E                  MOVE.L   RANADD,A4         POINT T
03786 0000530E 6028                          BRA.S    WRITIT             GO WRI
03787 00005310
03788 00005310                      * WRITE FIRST SECTOR ONLY
03789 00005310 4BF900002B2A         WRITE1   LEA      HDR1,A5              POIN
03790 00005316 2C7900002B1E                  MOVE.L   RANADD,A6         ADDRESS
03791 0000531C DDFC00000060                  ADD.L    #FCBDAT,A6         POINT
03792 00005322 3C3C003F                      MOVE.W   #63,D6            COUNTER
03793 00005326 2CDD                 MOVE1    MOVE.L   (A5)+,(A6)+       MOVE FO
03794 00005328 51CEFFFC                      DBRA     D6,MOVE1          REPEAT
03795 0000532C 287900002B1E                  MOVE.L   RANADD,A4         POINT T
03796 00005332 396C00120022                  MOVE.W   FCBFTR(A4),FCBCTR(A4) FIR
03797 00005338 4EB900005FD4         WRITIT   JSR      FCS10                WRIT
03798 0000533E 6600FF82                      BNE      PUTEX
03799 00005342 396C003E0022                  MOVE.W   FCBTMP(A4),FCBCTR(A4) RES
03800 00005348 4285                          CLR.L    D5                 CLEAR
03801 0000534A 4E75                          RTS
03802 0000534C
03803 0000534C                      * RDFMAP SUBROUTINE - READS FILE MAP
03804 0000534C                      * INTO MEMORY IF NOT ALREADY THERE. ON ENTR
03805 0000534C                      * EXIT, A4-> TO FCB
03806 0000534C
03807 0000534C 1A2C0003             RDFMAP   MOVE.B   FCBDRV(A4),D5     DRIVE N
03808 00005350 3C6C0012                      MOVE.W   FCBFTR(A4),A6     FIRST T
03809 00005354 B9F900002B1E                  CMP.L    RANADD,A4          CHECK
03810 0000535A 6610                          BNE.S    RFMNO              NOT TH
03811 0000535C BA3900002B22                  CMP.B    FMDRV,D5           CHECK
03812 00005362 6608                          BNE.S    RFMNO              NOT TH
03813 00005364 BCF900002B26                  CMP.W    FMTRSE,A6          CHECK
03814 0000536A 671E                          BEQ.S    RFMEX              YES, I
03815 0000536C
03816 0000536C                      * IF NOT YET IN MEMORY, READ IT
03817 0000536C
03818 0000536C 23CC00002B1E         RFMNO    MOVE.L   A4,RANADD         STORE D
03819 00005372 13C500002B22                  MOVE.B   D5,FMDRV          DRIVE N
03820 00005378 33CE00002B26                  MOVE.W   A6,FMTRSE         TRACK A
03821 0000537E 394E0022                      MOVE.W   A6,FCBCTR(A4)     1ST SEC
03822 00005382 4EB900005F8C                  JSR      FCS9                 READ
03823 00005388 6702                          BEQ.S    RFMNOK             IF OK
03824 0000538A 4E75                 RFMEX    RTS      IF NOT OK
03825 0000538C
03826 0000538C 4DF900002B2A         RFMNOK   LEA      HDR1,A6              POIN
03827 00005392 3C3C003F                      MOVE.W   #63,D6            COUNTER
03828 00005396 49EC0060                      LEA      FCBDAT(A4),A4        POIN
03829 0000539A 2CDC                 RDFML1   MOVE.L   (A4)+,(A6)+       MOVE A
03830 0000539C 51CEFFFC                      DBRA     D6,RDFML1
03831 000053A0 287900002B1E                  MOVE.L   RANADD,A4         BACK TO
03832 000053A6 396C00600022                  MOVE.W   FCBDAT(A4),FCBCTR(A4) SEC
03833 000053AC 4EB900005F8C                  JSR      FCS9                 READ
03834 000053B2 66D6                          BNE.S    RFMEX              IF ERR
03835 000053B4 49EC0060                      LEA      FCBDAT(A4),A4        POIN
03836 000053B8 33DC00002B28                  MOVE.W   (A4)+,HDR2        FIRST T
03837 000053BE D9FC00000002                  ADD.L    #2,A4              SKIP N
03838 000053C4 3C3C003E                      MOVE.W   #62,D6            COUNTER
03839 000053C8 2CDC                 RDFML2   MOVE.L   (A4)+,(A6)+       MOVE BY
03840 000053CA 51CEFFFC                      DBRA     D6,RDFML2         REPEAT
03841 000053CE 287900002B1E                  MOVE.L   RANADD,A4         POINT B
03842 000053D4 4285                          CLR.L    D5                 CLEAR
03843 000053D6 4E75                          RTS      AND THEN EXIT
03844 000053D8
03845 000053D8                      * FWRITE TO A DEVICE
03846 000053D8
03847 000053D8 04050010             FCS0DW   SUB.B    #$10,D5            CVT 10
03848 000053DC 0C050007                      CMP.B    #7,D5              CHECK
03849 000053E0 6400FCB4                      BCC.L    FCS0W              DO AS
03850 000053E4 0285000000FF                  AND.L    #$FF,D5            CLEAR
03851 000053EA 13C500002AD5                  MOVE.B   D5,DEVNOW         CURRENT
03852 000053F0 CAFC0050                      MULU     #80,D5              TIMES
03853 000053F4 49FACCD8                      LEA      DEVTAB(PC),A4
03854 000053F8 D9C5                          ADD.L    D5,A4              POINTE
03855 000053FA 23CC00002AD6                  MOVE.L   A4,DEVADD         SAVE IT
03856 00005400 4EB900004AF2                  JSR      PUTCFF               OUTP
03857 00005406 6000FDE2                      BRA.L    F0RITX             THEN E
03858 0000540A
03859 0000540A
03860 0000540A 00000000                      EVEN
03861 0000540A
03862 0000540A                      *         LIB      1.TXFMS2
03863 0000540A                      * FCS1 - FCS FUNCTION 1. OPEN FILE FOR READ
03864 0000540A                      *
03865 0000540A                      * CALLED BY: USER
03866 0000540A                      * INPUT: A4 POINTS TO FCB
03867 0000540A                      * OUTPUT:
03868 0000540A                      * REGISTERS USED:
03869 0000540A
03870 0000540A                      * IF DRIVE NUMBER = $FF, AND IT'S A REQUEST
03871 0000540A                      * OPEN A FILE, SEARCH FOR CORRECT DRIVE NUM
03872 0000540A
03873 0000540A                      * MOVEM.L MUST MATCH THAT OF FCS5
03874 0000540A
03875 0000540A 48E70008             FCS1     MOVEM.L  A4-A4,-(A7)
03876 0000540E 4A2C0003                      TST.B    FCBDRV(A4)         CHECK
03877 00005412 6A22                          BPL.S    FCS1DE             IF DRI
03878 00005414 4EB900005D9C         FCS1A    JSR      FCS20                FIND
03879 0000541A 6614                          BNE.S    FCS1BD             NG IF
03880 0000541C 4EB90000540A                  JSR      FCS1                 NOW
03881 00005422 670C                          BEQ.S    FCS1BD             WAS CO
03882 00005424 1A2C0003                      MOVE.B   FCBDRV(A4),D5     CHECK D
03883 00005428 BA3900001722                  CMP.B    MAXDRV,D5          IS IT
03884 0000542E 66E4                          BNE.S    FCS1A              NO, SO
03885 00005430                      * EITHER FUNCTION WAS COMPLETED ON THIS DRI
03886 00005430                      * GOT AN ERROR AND THIS IS THE LAST DRIVE,
03887 00005430                      * ELSE NO DRIVE WAS FOUND; EITHER WAY, EXIT
03888 00005430 4CDF1000             FCS1BD   MOVEM.L  (A7)+,A4-A4
03889 00005434 4E75                          RTS      AND EXIT
03890 00005436
03891 00005436                      * HERE IS THE MAIN CODE FOR FCS1
03892 00005436
03893 00005436 4EB900004DC0         FCS1DE   JSR      FINDEV               GO C
03894 0000543C 670000BA                      BEQ.L    FCS1EX             EXIT I
03895 00005440 4EB90000612E                  JSR      CHKUSE               CHEC
03896 00005446 660000B0                      BNE.L    FCS1EX             EXIT O
03897 0000544A 426C004E                      CLR.W    FCBCRN(A4)         CLEAR
03898 0000544E 4DEC000F                      LEA      15(A4),A6            A6->
03899 00005452 421E                          CLR.B    (A6)+              CLEAR
03900 00005454 3C3C0053                      MOVE.W   #83,D6            READY T
03901 00005458 429E                 FCS1EE   CLR.L    (A6)+              ERASE
03902 0000545A 51CEFFFC                      DBRA     D6,FCS1EE         DEC COU
03903 0000545E 4DEC0023                      LEA      FCBNMB-1(A4),A6      POIN
03904 00005462 4BEC0003                      LEA      FCBNAM-1(A4),A5      AND
03905 00005466 1CDD                          MOVE.B   (A5)+,(A6)+       MOVE DR
03906 00005468 2CDD                          MOVE.L   (A5)+,(A6)+
03907 0000546A 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE NA
03908 0000546C 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE EX
03909 0000546E 4EB900006152                  JSR      FINAME               FIND
03910 00005474                      *         BEQ.S FOUNAM             IF IT WA
03911 00005474                      *         CMP.B #4,ERRTYP          ERROR -
03912 00005474                      *         BNE.S FCS1EX             NO, JUST
03913 00005474                      *         CLR.B FCBNAM(A4)         FOR COMP
03914 00005474                      *         BRA.S FCS1EX             THEN EXI
03915 00005474 66000082                      BNE.L    FCS1EX             IF ERR
03916 00005478
03917 00005478 4DEC0004             FOUNAM   LEA      FCBNAM(A4),A6        A6->
03918 0000547C 4BF90000174E                  LEA      DIRFCB+FCBNAM,A5     A5->
03919 00005482 2CDD                          MOVE.L   (A5)+,(A6)+
03920 00005484 2CDD                          MOVE.L   (A5)+,(A6)+
03921 00005486 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE 27
03922 00005488 2CDD                          MOVE.L   (A5)+,(A6)+
03923 0000548A 2CDD                          MOVE.L   (A5)+,(A6)+
03924 0000548C 2CDD                          MOVE.L   (A5)+,(A6)+
03925 0000548E 2CDD                          MOVE.L   (A5)+,(A6)+       AND AN
03926 00005490 082C0005000F                  BTST.B   #5,FCBATT(A4)     READ PR
03927 00005496 670A                          BEQ.S    FCS1B                NO,
03928 00005498 13FC000C0000170E              MOVE.B   #12,ERRTYP        YES, SO
03929 000054A0 6056                          BRA.S    FCS1EX               AND
03930 000054A2 396C00120060         FCS1B    MOVE.W   FCBFTR(A4),FCBDAT(A4) FIR
03931 000054A8 422C0031                      CLR.B    FCBDPT(A4)         DATA P
03932 000054AC 422C003B                      CLR.B    FCBSCF(A4)         ASSUME
03933 000054B0 42390000170E                  CLR.B    ERRTYP             NO ERR
03934 000054B6 1A3C0001                      MOVE.B   #1,D5             SET FOR
03935 000054BA 6148                          BSR.S    GETUPD               GET
03936 000054BC
03937 000054BC                      * SKIP FIRST TWO SECTORS IF RANDOM FILE
03938 000054BC
03939 000054BC 4A2C001A                      TST.B    FCBRAN(A4)         IS IT
03940 000054C0 6736                          BEQ.S    FCS1EX             NO, SO
03941 000054C2 042C0001003B                  SUB.B    #1,FCBSCF(A4)      YES, K
03942 000054C8 48E78000                      MOVEM.L  D0-D0,-(A7)
03943 000054CC 303C01F7                      MOVE.W   #503,D0           504 BYT
03944 000054D0 4EB900004F42         F1LOOP   JSR      FREAD                GO R
03945 000054D6 661C                          BNE.S    F1LOEX             EXIT O
03946 000054D8 51C8FFF6                      DBRA     D0,F1LOOP         DECREME
03947 000054DC 13EC0003000019AD              MOVE.B   FCBDRV(A4),SIRFCB+FCBDRV
03948 000054E4 4EB9000061CE                  JSR      SUMNAM               GET
03949 000054EA 6608                          BNE.S    F1LOEX             EXIT O
03950 000054EC 1979000019C8003C              MOVE.B   SIRFCB+30,FCBSPT(A4) STOR
03951 000054F4 4CDF0001             F1LOEX   MOVEM.L  (A7)+,D0-D0
03952 000054F8
03953 000054F8 4EB900006230         FCS1EX   JSR      CPYERR               TEST
03954 000054FE 4CDF1000                      MOVEM.L  (A7)+,A4-A4      PULL
03955 00005502 4E75                          RTS
03956 00005504
03957 00005504                      * SET R/W FLAG WITH 1 (READ) OR 2 (WRITE),
03958 00005504                      * UPDATE FCB FILE LIST POINTERS AND GET DIR
03959 00005504 19450002             GETUPD   MOVE.B   D5,FCBRW(A4)      SET R/W
03960 00005508 422C003D                      CLR.B    FCBUPD(A4)         MARK N
03961 0000550C 2979000023A60044              MOVE.L   FBAPTR,FCBLST(A4) MOVE PT
03962 00005514 4DEC0044                      LEA      FCBLST(A4),A6        POIN
03963 00005518 23CE000023A6                  MOVE.L   A6,FBAPTR         GIVE IT
03964 0000551E 397900001794004A              MOVE.W   DIRFCB+FCBDIT,FCBDIT(A4)
03965 00005526 197900001797004D              MOVE.B   DIRFCB+FCBDIB,FCBDIB(A4)
03966 0000552E 4E75                          RTS      RTS
03967 00005530
03968 00005530                      * FCS2 - FCS FUNCTION 2. OPEN A FILE FOR WR
03969 00005530                      *
03970 00005530                      * CALLED BY:
03971 00005530                      * INPUT: A4 POINTS TO FCB
03972 00005530                      * OUTPUT:
03973 00005530                      * REGISTERS USED: A4 PRESERVED
03974 00005530
03975 00005530                      * IF DRIVE NUMBER = $FF, AND IT'S A REQUEST
03976 00005530                      * OPEN A FILE, SEARCH FOR CORRECT DRIVE NUM
03977 00005530
03978 00005530 48E70018             FCS2     MOVEM.L  A3/A4,-(A7)
03979 00005534 4A2C0003                      TST.B    FCBDRV(A4)         CHECK
03980 00005538 6A22                          BPL.S    FCS2DE             IF DRI
03981 0000553A 4EB900005D9C         FCS2A    JSR      FCS20                FIND
03982 00005540 6614                          BNE.S    FCS2BD             NG IF
03983 00005542 4EB90000555C                  JSR      FCS2DE               NOW
03984 00005548 670C                          BEQ.S    FCS2BD             WAS CO
03985 0000554A 1A2C0003                      MOVE.B   FCBDRV(A4),D5     CHECK D
03986 0000554E BA3900001722                  CMP.B    MAXDRV,D5          IS IT
03987 00005554 66E4                          BNE.S    FCS2A              NO, SO
03988 00005556                      * EITHER FUNCTION WAS COMPLETED ON THIS DRI
03989 00005556                      * GOT AN ERROR AND THIS IS THE LAST DRIVE,
03990 00005556                      * ELSE NO DRIVE WAS FOUND; EITHER WAY, EXIT
03991 00005556 4CDF1800             FCS2BD   MOVEM.L  (A7)+,A3/A4
03992 0000555A 4E75                          RTS      AND EXIT
03993 0000555C
03994 0000555C                      * HERE IS THE MAIN CODE FOR FCS2
03995 0000555C
03996 0000555C 4EB900004DC0         FCS2DE   JSR      FINDEV               GO C
03997 00005562 6734                          BEQ.S    FCS2EX             EXIT I
03998 00005564 4EB90000612E                  JSR      CHKUSE               SEE
03999 0000556A 662C                          BNE.S    FCS2EX               EXIT
04000 0000556C 1A2C0003                      MOVE.B   FCBDRV(A4),D5     GET DRI
04001 00005570 13C5000019AD                  MOVE.B   D5,SIRFCB+FCBDRV  PUT INT
04002 00005576 BA3900001722                  CMP.B    MAXDRV,D5          CHECK
04003 0000557C 630A                          BLS.S    FCS2DO             <=9 IS
04004 0000557E 13FC000F0000170E              MOVE.B   #15,ERRTYP        DRIVE N
04005 00005586 6010                          BRA.S    FCS2EX
04006 00005588
04007 00005588 4EB900006152         FCS2DO   JSR      FINAME               FIND
04008 0000558E 6614                          BNE.S    FCS2NT               OK I
04009 00005590 13FC00030000170E              MOVE.B   #3,ERRTYP         ELSE FI
04010 00005598
04011 00005598 4EB900006230         FCS2EX   JSR      CPYERR
04012 0000559E 4CDF1800                      MOVEM.L  (A7)+,A3/A4         PULL
04013 000055A2 4E75                          RTS
04014 000055A4
04015 000055A4                      * OK TO OPEN A FILE NOT YET ON DISK, BUT CH
04016 000055A4 0C3900040000170E     FCS2NT   CMP.B    #4,ERRTYP          FILE N
04017 000055AC 66EA                          BNE.S    FCS2EX             NO, MU
04018 000055AE
04019 000055AE 4DEC000F                      LEA      15(A4),A6            A6->
04020 000055B2 421E                          CLR.B    (A6)+              CLEAR
04021 000055B4 3C3C0053                      MOVE.W   #83,D6            READY T
04022 000055B8 429E                 FCS2EE   CLR.L    (A6)+              ERASE
04023 000055BA 51CEFFFC                      DBRA     D6,FCS2EE         DEC COU
04024 000055BE 42390000170E                  CLR.B    ERRTYP
04025 000055C4 422C0001                      CLR.B    FCBERR(A4)         NO ERR
04026 000055C8
04027 000055C8                      * NOW LOOK AT SIR, MAKE SURE IT'S THE SAME
04028 000055C8                      * THERE'S ROOM
04029 000055C8
04030 000055C8 4EB9000061CE                  JSR      SUMNAM               READ
04031 000055CE 66C8                          BNE.S    FCS2EX             ON ERR
04032 000055D0 1C2C0003                      MOVE.B   FCBDRV(A4),D6     GET DRI
04033 000055D4 4EB900005A08                  JSR      DTPOIN               POIN
04034 000055DA 264D                          MOVE.L   A5,A3             SAVE EN
04035 000055DC 3A13                          MOVE.W   (A3),D5           CHECK I
04036 000055DE 670E                          BEQ.S    F2EMTY               EMPT
04037 000055E0
04038 000055E0                      * TABLE ENTRY NOT EMPTY, SO CHECK CHECKSUM
04039 000055E0 BA7900002B04                  CMP.W    CHKSUM,D5          CHKSUM
04040 000055E6 670C                          BEQ.S    F2DKOK             YES IT
04041 000055E8 4EF9000059F8                  JMP      STOP29               QUIT
04042 000055EE
04043 000055EE                      * TABLE ENTRY EMPTY, SO PUT SIR DATA INTO I
04044 000055EE 4EB900005A20         F2EMTY   JSR      GETSIR               COPY
04045 000055F4
04046 000055F4                      * NOW CHECK IF ENOUGH ROOM IS ON DISK
04047 000055F4 4A6B0006             F2DKOK   TST.W    6(A3)              CHECK
04048 000055F8 660A                          BNE.S    F2ROOM             YES, I
04049 000055FA 13FC00070000170E              MOVE.B   #7,ERRTYP         NO, REP
04050 00005602 6094                          BRA.S    FCS2EX
04051 00005604
04052 00005604                      * NEXT FIND AN EMPTY SPOT IN THE DIRECTORY
04053 00005604 287C0000174A         F2ROOM   MOVE.L   #DIRFCB,A4
04054 0000560A 4EB900005A6C                  JSR      FCS6                 OPEN
04055 00005610 4EB900005A86         F2FIND   JSR      FCS7                 GET
04056 00005616 6612                          BNE.S    F2DIRE             DIRECT
04057 00005618 1A2C0004                      MOVE.B   FCBNAM(A4),D5     LOOK AT
04058 0000561C 67000092                      BEQ.L    F2FOUN             FOUND
04059 00005620 06050001                      ADD.B    #01,D5             CHANGE
04060 00005624 6700008A                      BEQ.L    F2FOUN             FOUND
04061 00005628 60E6                          BRA.S    F2FIND             ELSE G
04062 0000562A
04063 0000562A                      * AT DIRECTORY ERROR, SEE IF EOF OR SOMETHI
04064 0000562A 0C3900080000170E     F2DIRE   CMP.B    #8,ERRTYP          DIRECT
04065 00005632 6600FF64                      BNE.L    FCS2EX             SOMETH
04066 00005636
04067 00005636                      * IT WAS DIRECTORY EOF, SO GRAB ANOTHER SEC
04068 00005636 422C0001                      CLR.B    FCBERR(A4)         CLEAR
04069 0000563A 42390000170E                  CLR.B    ERRTYP
04070 00005640 3C2B0002                      MOVE.W   2(A3),D6          FIND NE
04071 00005644 660C                          BNE.S    HASROO             THERE'
04072 00005646 13FC00060000170E              MOVE.B   #6,ERRTYP         NO, DIR
04073 0000564E 6000FF48                      BRA      FCS2EX
04074 00005652
04075 00005652 39460060             HASROO   MOVE.W   D6,FCBDAT(A4)     PUT IN
04076 00005656 4EB900005FD4                  JSR      FCS8                 WRIT
04077 0000565C 6638                          BNE.S    F2ERR5               SIGN
04078 0000565E 4EB900005A86                  JSR      FCS7                 NOW
04079 00005664 6630                          BNE.S    F2ERR5               SIGN
04080 00005666 376C00600002                  MOVE.W   FCBDAT(A4),2(A3)  SAVE NE
04081 0000566C 046B00010006                  SUB.W    #1,6(A3)           SUBTRA
04082 00005672 4BEC0060                      LEA      FCBDAT(A4),A5        POIN
04083 00005676 3C3C003F                      MOVE.W   #63,D6            SET COU
04084 0000567A 429D                 CLRDIR   CLR.L    (A5)+              CLEAR
04085 0000567C 51CEFFFC                      DBRA     D6,CLRDIR         ERASE 2
04086 00005680 4EB900005FD4                  JSR      FCS8                 GO W
04087 00005686 660E                          BNE.S    F2ERR5               SIGN
04088 00005688 4EB9000059B2                  JSR      UPDSIR               MOVE
04089 0000568E 6600FF08                      BNE.L    FCS2EX
04090 00005692 6000FF60                      BRA      F2DKOK               SEE
04091 00005696
04092 00005696                      * ON DIRECTORY ERROR, SIGNAL IT, BUT CHECK
04093 00005696 0C39000B0000170E     F2ERR5   CMP.B    #11,ERRTYP         WRITE
04094 0000569E 670A                          BEQ.S    WPISOK             YES, I
04095 000056A0 1A3C0005                      MOVE.B   #5,D5             DIRECTO
04096 000056A4 4EB90000438A                  JSR      RPTER0               REPO
04097 000056AA 4EF900005598         WPISOK   JMP      FCS2EX               AND
04098 000056B0
04099 000056B0                      * FOUND ROOM IN DIRECTORY, SET UP USER'S FC
04100 000056B0 287900002B1A         F2FOUN   MOVE.L   CURFCB,A4         POINT T
04101 000056B6 4BEC000F                      LEA      15(A4),A5            POIN
04102 000056BA 421D                          CLR.B    (A5)+              CLEAR
04103 000056BC 3C3C0014                      MOVE.W   #20,D6            COUNT 6
04104 000056C0 429D                 CLRFCB   CLR.L    (A5)+              CLEAR
04105 000056C2 51CEFFFC                      DBRA     D6,CLRFCB           ERASI
04106 000056C6 1979000016E3003B              MOVE.B   SPACOM,FCBSCF(A4) DEFAULT
04107 000056CE 3979000016EE001C              MOVE.W   MONTH,FCBMON(A4)  TRANSFE
04108 000056D6 1979000016F0001E              MOVE.B   YEAR,FCBYR(A4)    YEAR
04109 000056DE 4EB90000572E                  JSR      SEQUEN               GET
04110 000056E4 4EB900001012                  JSR      INTIME               OR R
04111 000056EA 1945001B                      MOVE.B   D5,FCBTIM(A4)
04112 000056EE 197C00040031                  MOVE.B   #4,FCBDPT(A4)     DATA PO
04113 000056F4 1A3C0002                      MOVE.B   #2,D5             SET FOR
04114 000056F8 4EB900005504                  JSR      GETUPD               GET
04115 000056FE                      * NOW MOVE INTO DIRECTORY
04116 000056FE 4BEC0004                      LEA      FCBNAM(A4),A5        POIN
04117 00005702 2C7C0000174E                  MOVE.L   #DIRFCB+FCBNAM,A6 ALSO IN
04118 00005708 2CDD                          MOVE.L   (A5)+,(A6)+
04119 0000570A 2CDD                          MOVE.L   (A5)+,(A6)+
04120 0000570C 2CDD                          MOVE.L   (A5)+,(A6)+
04121 0000570E 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE 27
04122 00005710 2CDD                          MOVE.L   (A5)+,(A6)+
04123 00005712 2CDD                          MOVE.L   (A5)+,(A6)+
04124 00005714 2CDD                          MOVE.L   (A5)+,(A6)+       AND AN
04125 00005716 287C0000174A                  MOVE.L   #DIRFCB,A4
04126 0000571C 4EB900005AF8                  JSR      FCS11                WRIT
04127 00005722 6600FF72                      BNE.L    F2ERR5             IF DIR
04128 00005726                      * THEN FINISH UP
04129 00005726 4285                          CLR.L    D5                 RESET
04130 00005728 4CDF1800                      MOVEM.L  (A7)+,A3/A4
04131 0000572C 4E75                          RTS
04132 0000572E
04133 0000572E                      * THE FOLLOWING ROUTINES ASSIGN A SEQUENCE
04134 0000572E                      * TO WRITTEN FILES WHEN NO CLOCK CHIP IS IN
04135 0000572E
04136 0000572E 0C79123400002B16     SEQUEN   CMP.W    #$1234,SEQFLG      INITIA
04137 00005736 6710                          BEQ.S    SEQNOI             NO, NO
04138 00005738 13FC000100001726              MOVE.B   #1,SEQNO          YES, IN
04139 00005740 33FC123400002B16              MOVE.W   #$1234,SEQFLG     AND ALS
04140 00005748 1A3900001726         SEQNOI   MOVE.B   SEQNO,D5          LOAD SE
04141 0000574E 0639000100001726              ADD.B    #1,SEQNO           THEN I
04142 00005756 4E75                          RTS
04143 00005758
04144 00005758                      * FCS3 - OPEN A FILE FOR UPDATE
04145 00005758                      * RETURNS READY TO READ
04146 00005758                      *
04147 00005758                      * CALLED BY: USER
04148 00005758                      * INPUT: A4 POINTS TO FCB
04149 00005758                      * OUTPUT:
04150 00005758                      * REGISTERS USED: D5 (A4 PRESERVED)
04151 00005758
04152 00005758
04153 00005758 4EB90000540A         FCS3     JSR      FCS1                 GO T
04154 0000575E 6704                          BEQ.S    OPUPOK               IF N
04155 00005760 4285                 RAN3ER   CLR.L    D5
04156 00005762 4E75                 RAN3EX   RTS
04157 00005764
04158 00005764 4A2C001A             OPUPOK   TST.B    FCBRAN(A4)         IS IT
04159 00005768 6610                          BNE.S    FINRA3             YES, F
04160 0000576A 13FC00130000170E              MOVE.B   #19,ERRTYP        NO, ERR
04161 00005772 197C00130001                  MOVE.B   #19,FCBERR(A4)
04162 00005778 4E75                          RTS
04163 0000577A
04164 0000577A                      * IF NO ERROR, CONTINUE
04165 0000577A 197C00030002         FINRA3   MOVE.B   #3,FCBRW(A4)      MARKY O
04166 00005780 4EB900004F42                  JSR      FREAD                GO R
04167 00005786 66D8                          BNE.S    RAN3ER             EXIT O
04168 00005788 042C00010031                  SUB.B    #1,FCBDPT(A4)      THEN U
04169 0000578E 4285                          CLR.L    D5                 CLEAR
04170 00005790 4E75                          RTS
04171 00005792
04172 00005792                      * FCS4 - FCS FUNCTION 4. CLOSE FILE
04173 00005792                      *
04174 00005792                      * CALLED BY:
04175 00005792                      * INPUT:
04176 00005792                      * OUTPUT:
04177 00005792                      * REGISTERS USED:
04178 00005792
04179 00005792
04180 00005792 48E70008             FCS4     MOVEM.L  A4-A4,-(A7)
04181 00005796 1C2C0003                      MOVE.B   FCBDRV(A4),D6     CHECK D
04182 0000579A 422C0001                      CLR.B    FCBERR(A4)         CLEAR
04183 0000579E 04060010                      SUB.B    #$10,D6            CVT $1
04184 000057A2 0C060007                      CMP.B    #7,D6              CHECK
04185 000057A6 6346                          BLS.S    F4EXIT             EXIT I
04186 000057A8 1C2C0002                      MOVE.B   FCBRW(A4),D6      R/W STA
04187 000057AC 04060001                      SUB.B    #01,D6
04188 000057B0 6712                          BEQ.S    F4LST              READ I
04189 000057B2 04060001                      SUB.B    #01,D6
04190 000057B6 670000EE                      BEQ      FCS4W                WRIT
04191 000057BA 04060001                      SUB.B    #01,D6
04192 000057BE E30E                          LSL.B    #1,D6
04193 000057C0 660000D6                      BNE      ERR22                FILE
04194 000057C4
04195 000057C4                      * REMOVE THIS FILE FROM FCB LIST POINTERS
04196 000057C4 287900002B1A         F4LST    MOVE.L   CURFCB,A4           A4->
04197 000057CA 2C7C000023A6                  MOVE.L   #FBAPTR,A6          POINT
04198 000057D0 49EC0044                      LEA      FCBLST(A4),A4          PO
04199 000057D4 2E16                 F4LST0   MOVE.L   (A6),D7             PICK
04200 000057D6 670000C0                      BEQ      ERR22                  ER
04201 000057DA BE8C                          CMP.L    A4,D7                COMP
04202 000057DC 6704                          BEQ.S    F4LST1               FOUN
04203 000057DE 2C47                          MOVE.L   D7,A6               SAVE
04204 000057E0 60F2                          BRA.S    F4LST0               AND
04205 000057E2
04206 000057E2                      * WHEN PREVIOUS POINTER POINTS TO THIS FCB,
04207 000057E2                      * MOVE POINTER FROM THIS FCB INTO PREVIOUS
04208 000057E2 2C94                 F4LST1   MOVE.L   (A4),(A6)           THIS
04209 000057E4 4294                          CLR.L    (A4)                 ERAS
04210 000057E6 2857                          MOVE.L   (A7),A4             POINT
04211 000057E8 4A2C001A                      TST.B    FCBRAN(A4)           IS I
04212 000057EC 6610                          BNE.S    RAN4B                YES,
04213 000057EE
04214 000057EE 422C0002             F4EXIT   CLR.B    FCBRW(A4)            CLEA
04215 000057F2 4EB900006230                  JSR      CPYERR                 TE
04216 000057F8 4CDF1000                      MOVEM.L  (A7)+,A4-A4        PULL
04217 000057FC 4E75                          RTS
04218 000057FE
04219 000057FE                      * WHEN DOING RANDOM FILE, WRITE CURRENT SEC
04220 000057FE                      * MODIFIED, AND DELETE FILE MAP FROM MEMORY
04221 000057FE
04222 000057FE B9F900002B1E         RAN4B    CMP.L    RANADD,A4            CHEC
04223 00005804 6610                          BNE.S    RAN4C                DIFF
04224 00005806 23FCFFFFFFFF00002B1E          MOVE.L   #-1,RANADD        ERASE F
04225 00005810 423900002B26                  CLR.B    FMTRSE             AND TR
04226 00005816 6162                 RAN4C    BSR.S    WRUPDA               WRIT
04227 00005818 66D4                          BNE.S    F4EXIT               IF E
04228 0000581A
04229 0000581A 4A2C003D                      TST.B    FCBUPD(A4)         HAS FI
04230 0000581E 67CE                          BEQ.S    F4EXIT             NO, SO
04231 00005820
04232 00005820                      * IF FILE HAS BEEN UPDATED, THEN ALSO CHANG
04233 00005820
04234 00005820 4EB90000540A                  JSR      FCS1                 GO O
04235 00005826 66C6                          BNE.S    F4EXIT             QUIT O
04236 00005828 4EB900005792                  JSR      FCS4                 GO C
04237 0000582E 66BE                          BNE.S    F4EXIT             QUIT O
04238 00005830 396C004A0022                  MOVE.W   FCBDIT(A4),FCBCTR(A4) TR-
04239 00005836 4EB900005F8C                  JSR      FCS9                 GO R
04240 0000583C 66B0                          BNE.S    F4EXIT             ON ERR
04241 0000583E 4286                          CLR.L    D6
04242 00005840 1C2C004D                      MOVE.B   FCBDIB(A4),D6     BYTE OF
04243 00005844 4DF46060                      LEA      FCBDAT(A4,D6),A6     A6->
04244 00005848 1D79000016EE0015              MOVE.B   MONTH,FCBMON-7(A6) MOVE M
04245 00005850 1D79000016EF0016              MOVE.B   DAY,FCBDAY-7(A6)  DAY
04246 00005858 1D79000016F00017              MOVE.B   YEAR,FCBYR-7(A6)  YEAR
04247 00005860 4EB90000572E                  JSR      SEQUEN               GET
04248 00005866 4EB900001012                  JSR      INTIME               OR R
04249 0000586C 1D450014                      MOVE.B   D5,FCBTIM-7(A6)
04250 00005870 4EB900005FD4                  JSR      FCS10                WRIT
04251 00005876 6000FF76                      BRA      F4EXIT               AND
04252 0000587A
04253 0000587A                      * IF CURRENT SECTOR HAS BEEN UPDATED, WRITE
04254 0000587A 4A2C0002             WRUPDA   TST.B    FCBRW(A4)          UPDATE
04255 0000587E 6A14                          BPL.S    WRUPEX             NO, EX
04256 00005880 196C0002003D                  MOVE.B   FCBRW(A4),FCBUPD(A4) SET
04257 00005886 022C000F0002                  AND.B    #$0F,FCBRW(A4)     CHANGE
04258 0000588C 4EB900005FD4                  JSR      FCS10                WRIT
04259 00005892 4E75                          RTS      AND QUIT
04260 00005894 4205                 WRUPEX   CLR.B    D5                 CLEAR
04261 00005896 4E75                          RTS
04262 00005898
04263 00005898                      * ERROR 22 - ERROR IN CLOSING FILE
04264 00005898
04265 00005898 2857                 ERR22    MOVE.L   (A7),A4           POINT X
04266 0000589A 13FC00160000170E              MOVE.B   #22,ERRTYP        ERROR 2
04267 000058A2 6000FF4A                      BRA      F4EXIT               AND
04268 000058A6
04269 000058A6                      * CLOSING A WRITE FILE IS CONSIDERABLY MORE
04270 000058A6                      * CHECK WHETHER FILE IS REALLY OPEN
04271 000058A6
04272 000058A6 2C7C000023A6         FCS4W    MOVE.L   #FBAPTR,A6          POINT
04273 000058AC 49EC0044                      LEA      FCBLST(A4),A4          PO
04274 000058B0 2E16                 FCS4LS   MOVE.L   (A6),D7             PICK
04275 000058B2 6700FFE4                      BEQ      ERR22                  ER
04276 000058B6 BE8C                          CMP.L    A4,D7                COMP
04277 000058B8 6704                          BEQ.S    FCS4WC               FOUN
04278 000058BA 2C47                          MOVE.L   D7,A6               SAVE
04279 000058BC 60F2                          BRA.S    FCS4LS               AND
04280 000058BE
04281 000058BE                      * NOW CONTINUE IF IT WAS IN LIST
04282 000058BE 2857                 FCS4WC   MOVE.L   (A7),A4           BACK TO
04283 000058C0 13EC0003000019AD              MOVE.B   FCBDRV(A4),SIRFCB+FCBDRV
04284 000058C8 1C2C003B                      MOVE.B   FCBSCF(A4),D6     CHECK F
04285 000058CC 672A                          BEQ.S    FCS4W1             NONE O
04286 000058CE 6B28                          BMI.S    FCS4W1             NO COM
04287 000058D0 1A3C0009                      MOVE.B   #$09,D5           ELSE SE
04288 000058D4 4EB900005086                  JSR      FWRITE
04289 000058DA 6600FF12                      BNE      F4EXIT
04290 000058DE 1A2C003B                      MOVE.B   FCBSCF(A4),D5     NUMBER
04291 000058E2 4EB900005086                  JSR      FWRITE               OUTP
04292 000058E8 6600FF04                      BNE      F4EXIT
04293 000058EC 4285                          CLR.L    D5                 AND A
04294 000058EE 4EB900005086                  JSR      FWRITE
04295 000058F4 6600FEF8                      BNE      F4EXIT               ON E
04296 000058F8 4A6C0018             FCS4W1   TST.W    FCBSIZ(A4)         CHECK
04297 000058FC 660C                          BNE.S    F4NOT0               IF >
04298 000058FE 4EB900005B68                  JSR      FCS12                SIZE
04299 00005904 6600FEE8                      BNE      F4EXIT
04300 00005908 6054                          BRA.S    F4WDON             AND FI
04301 0000590A
04302 0000590A                      * IF SIZE>0, THEN DIRECTORY ENTRY STAYS. WE
04303 0000590A                      * ALWAYS HAVE TO WRITE OUT THE LAST SECTOR.
04304 0000590A 426C0060             F4NOT0   CLR.W    FCBDAT(A4)         SIGNAL
04305 0000590E 4EB900005FD4                  JSR      FCS10                WRIT
04306 00005914 6600FED8                      BNE      F4EXIT
04307 00005918                      * NOW UPDATE DIRECTORY
04308 00005918 396C004A0022                  MOVE.W   FCBDIT(A4),FCBCTR(A4) TR-
04309 0000591E 4EB900005F8C                  JSR      FCS9                 GO R
04310 00005924 6674                          BNE.S    F4ERR5             REPORT
04311 00005926 4286                          CLR.L    D6
04312 00005928 1C2C004D                      MOVE.B   FCBDIB(A4),D6     POINT T
04313 0000592C 4BEC000F                      LEA.L    FCBATT(A4),A5      POINT
04314 00005930 4DF4606B                      LEA.L    FCBDAT+11(A4,D6),A6 POINT
04315 00005934 1CDD                          MOVE.B   (A5)+,(A6)+       ATTRIBU
04316 00005936 1CDD                          MOVE.B   (A5)+,(A6)+       PROTECT
04317 00005938 4BED0001                      LEA      1(A5),A5             SKIP
04318 0000593C 1CDD                          MOVE.B   (A5)+,(A6)+       FTR
04319 0000593E 1CDD                          MOVE.B   (A5)+,(A6)+       FSE
04320 00005940 4BED0002                      LEA      2(A5),A5             SKIP
04321 00005944 1CDD                          MOVE.B   (A5)+,(A6)+       LTR
04322 00005946 1CDD                          MOVE.B   (A5)+,(A6)+       LSE
04323 00005948 1CDD                          MOVE.B   (A5)+,(A6)+       SIZE
04324 0000594A 1CDD                          MOVE.B   (A5)+,(A6)+       SIZE
04325 0000594C 1CDD                          MOVE.B   (A5)+,(A6)+       RANDOM
04326 0000594E 1CDD                          MOVE.B   (A5)+,(A6)+       TIME
04327 00005950 1CDD                          MOVE.B   (A5)+,(A6)+       MONTH
04328 00005952 1CDD                          MOVE.B   (A5)+,(A6)+       DAY
04329 00005954 1CDD                          MOVE.B   (A5)+,(A6)+       YEAR
04330 00005956 4EB900005FD4                  JSR      FCS10                WRIT
04331 0000595C 663C                          BNE.S    F4ERR5             REPORT
04332 0000595E
04333 0000595E                      * NOW UPDATE SIR AND DELETE POINTER IF NO O
04334 0000595E                      * FILES ARE OPEN FOR WRITING ON THIS DRIVE
04335 0000595E 6152                 F4WDON   BSR.S    UPDSIR             GO UPD
04336 00005960 6600FE8C                      BNE      F4EXIT
04337 00005964 287900002B1A                  MOVE.L   CURFCB,A4
04338 0000596A 3A3C0200                      MOVE.W   #$0200,D5         1ST BYT
04339 0000596E 1A2C0003                      MOVE.B   FCBDRV(A4),D5     SECOND
04340 00005972 462C0003                      NOT.B    FCBDRV(A4)         KILL I
04341 00005976 2C79000023A6                  MOVE.L   FBAPTR,A6         ADDRESS
04342 0000597C                      * LOOP TO SEARCH ALL OPEN FCB'S FOR DRIVE N
04343 0000597C BA6EFFBE             SRCHLO   CMP.W    FCBRW-FCBLST(A6),D5 CHECK
04344 00005980 670E                          BEQ.S    RESTDN             FOUND
04345 00005982 2C56                          MOVE.L   (A6),A6           GET NEX
04346 00005984 2E0E                          MOVE.L   A6,D7             MOVE IN
04347 00005986 66F4                          BNE.S    SRCHLO             REPEAT
04348 00005988                      * ALL FCB'S CHECKED AND NONE MATCHED THIS D
04349 00005988                      * SO DELETE THE ENTRY FROM TABLE
04350 00005988 2C7900002B08                  MOVE.L   DRTPTR,A6         POINT T
04351 0000598E 4256                          CLR.W    (A6)               STORE
04352 00005990
04353 00005990 462C0003             RESTDN   NOT.B    FCBDRV(A4)         RESTOR
04354 00005994 4EF9000057C4                  JMP      F4LST                GO R
04355 0000599A
04356 0000599A                      * ON DIRECTORY ERROR, REPORT IT AND MAIN AL
04357 0000599A 1A3C0005             F4ERR5   MOVE.B   #5,D5             DIRECTO
04358 0000599E 4EB90000438A                  JSR      RPTER0               REPO
04359 000059A4 13FC00050000170E              MOVE.B   #5,ERRTYP
04360 000059AC 4EF9000057EE                  JMP      F4EXIT               AND
04361 000059B2
04362 000059B2                      * UPDATE SIR FROM DRIVE DATA TABLE
04363 000059B2                      *    ASSUMES DRTABL ENTRY ALREADY EXISTS FO
04364 000059B2                      *    DRIVE, AND WRITES IT TO SIR (UNLESS CH
04365 000059B2                      *    TABLE DOESN'T MATCH DISK OR THERE IS A
04366 000059B2                      *    READING OR WRITING SIR, IN WHICH CASE
04367 000059B2                      *    ON ENTRY - A4 POINTS TO FCB WITH DRIVE
04368 000059B2                      *    ON EXIT  - A4 POINTS TO SIRFCB
04369 000059B2                      *
04370 000059B2 4EB9000061CE         UPDSIR   JSR      SUMNAM               GO R
04371 000059B8 663C                          BNE.S    UPDEXI             QUIT O
04372 000059BA 1C2C0003                      MOVE.B   FCBDRV(A4),D6     GET DRI
04373 000059BE 6148                          BSR.S    DTPOIN             POINT
04374 000059C0 3A15                          MOVE.W   (A5),D5
04375 000059C2 BA7900002B04                  CMP.W    CHKSUM,D5          COMPAR
04376 000059C8 662E                          BNE.S    STOP29             OOOPS
04377 000059CA 2C7C00001A27                  MOVE.L   #SIRFCB+FCBDAT+29,A6 POIN
04378 000059D0 4BED0002                      LEA.L    2(A5),A5           POINT
04379 000059D4 1CDD                          MOVE.B   (A5)+,(A6)+       FIRST T
04380 000059D6 1CDD                          MOVE.B   (A5)+,(A6)+       FIRST S
04381 000059D8 1CDD                          MOVE.B   (A5)+,(A6)+       LAST TR
04382 000059DA 1CDD                          MOVE.B   (A5)+,(A6)+       LAST SE
04383 000059DC 1CDD                          MOVE.B   (A5)+,(A6)+       NUMBER
04384 000059DE 1CDD                          MOVE.B   (A5)+,(A6)+       DITTO
04385 000059E0 287C000019AA                  MOVE.L   #SIRFCB,A4        SIRFCB
04386 000059E6 4EB900005FD4                  JSR      FCS10                WRIT
04387 000059EC 6708                          BEQ.S    UPDEXI             IF OK
04388 000059EE 13FC00050000170E              MOVE.B   #5,ERRTYP         ELSE IT
04389 000059F6 4E75                 UPDEXI   RTS
04390 000059F8 1A3C001D             STOP29   MOVE.B   #29,D5            ERROR 2
04391 000059FC 4EB90000438A                  JSR      RPTER0
04392 00005A02 4EF90000303A                  JMP      WARMS
04393 00005A08                      *
04394 00005A08                      * DTPOIN - POINT X TO DRIVE'S ENTRY IN DRIV
04395 00005A08                      *     ON ENTRY - DRIVE NUMBER IN D6
04396 00005A08                      *     ON EXIT  - D6, A5, AND DRTPTR POINT T
04397 00005A08                      *
04398 00005A08 024600FF             DTPOIN   AND.W    #$00FF,D6          KEEP O
04399 00005A0C CCFC000A                      MULU     #10,D6              MULT
04400 00005A10 068600002D2A                  ADD.L    #DRTABL,D6         ADD PT
04401 00005A16 2A46                          MOVE.L   D6,A5             POINT T
04402 00005A18 23C600002B08                  MOVE.L   D6,DRTPTR         AND SAV
04403 00005A1E 4E75                          RTS
04404 00005A20                      *
04405 00005A20                      * GETSIR - COPY SIR DATA INTO DRIVE DATA TA
04406 00005A20                      *   ON ENTRY - A5 POINTS TO DRIVE'S ENTRY I
04407 00005A20                      *   ON EXIT  - DITTO FOR A5
04408 00005A20                      *
04409 00005A20 3AB900002B04         GETSIR   MOVE.W   CHKSUM,(A5)         CHECK
04410 00005A26 3B79000019BC0002              MOVE.W   SIRFCB+FCBFTR,2(A5) FIRST
04411 00005A2E 3B79000019C00004              MOVE.W   SIRFCB+FCBLTR,4(A5) LAST
04412 00005A36 3B79000019C20006              MOVE.W   SIRFCB+FCBSIZ,6(A5) NUMBE
04413 00005A3E 4E75                          RTS      RTS
04414 00005A40
04415 00005A40                      * FCS 5 - REWIND A FILE - REALLY CONSISTS O
04416 00005A40                      * CLOSING AND OPENING A FILE
04417 00005A40                      *
04418 00005A40                      * CALLED BY:
04419 00005A40                      * INPUT:
04420 00005A40                      * OUTPUT:
04421 00005A40                      * REGISTERS USED:
04422 00005A40
04423 00005A40                      * MOVEM.L MUST MATCH THAT OF FCS1
04424 00005A40
04425 00005A40 48E70008             FCS5     MOVEM.L  A4-A4,-(A7)
04426 00005A44 0C2C00010002                  CMP.B    #1,FCBRW(A4)       IS RW
04427 00005A4A 670A                          BEQ.S    FCS5A              YES, I
04428 00005A4C 13FC00120000170E     F5ER18   MOVE.B   #18,ERRTYP        NO - NO
04429 00005A54 600A                          BRA.S    FCS5B              AND QU
04430 00005A56
04431 00005A56 4EB900005792         FCS5A    JSR      FCS4                 OK,
04432 00005A5C 6700F9B6                      BEQ      FCS1A                IF N
04433 00005A60
04434 00005A60 4EB900006230         FCS5B    JSR      CPYERR
04435 00005A66 4CDF1000                      MOVEM.L  (A7)+,A4-A4      PULL
04436 00005A6A 4E75                          RTS
04437 00005A6C
04438 00005A6C                      * FCS6 - OPEN DIRECTORY FILE, AND
04439 00005A6C                      * FCS16 - OPEN SYSTEM INFORMATION RECORD
04440 00005A6C                      *
04441 00005A6C                      * CALLED BY:
04442 00005A6C                      * INPUT:
04443 00005A6C                      * OUTPUT:
04444 00005A6C                      * REGISTERS USED:
04445 00005A6C
04446 00005A6C
04447 00005A6C 397C00050060         FCS6     MOVE.W   #$0005,FCBDAT(A4) POINT S
04448 00005A72 197C00FF003B         FCS6A    MOVE.B   #$FF,FCBSCF(A4)   NO SPAC
04449 00005A78 422C0031                      CLR.B    FCBDPT(A4)         DATA P
04450 00005A7C 4E75                          RTS
04451 00005A7E
04452 00005A7E
04453 00005A7E 397C00030060         FCS16    MOVE.W   #$0003,FCBDAT(A4) POINT S
04454 00005A84 60EC                          BRA.S    FCS6A
04455 00005A86
04456 00005A86                      * FCS7 - READ NEXT INFORMATION ENTRY
04457 00005A86
04458 00005A86 197C00010002         FCS7     MOVE.B   #1,FCBRW(A4)      MAKE AS
04459 00005A8C 422C001A                      CLR.B    FCBRAN(A4)         FORCE
04460 00005A90 4EB900004F42                  JSR      FREAD                GO R
04461 00005A96 6658                          BNE.S    FCS7EX             EXIT O
04462 00005A98 042C00010031                  SUB.B    #1,FCBDPT(A4)      STEP B
04463 00005A9E 0C2C00040031                  CMP.B    #4,FCBDPT(A4)      FIRST
04464 00005AA4 6606                          BNE.S    FCS7A              NO, JU
04465 00005AA6 197C00100031                  MOVE.B   #16,FCBDPT(A4)    YES, SO
04466 00005AAC
04467 00005AAC                      * NOW READ NEXT ENTRY FROM THIS SECTOR
04468 00005AAC 396C0022004A         FCS7A    MOVE.W   FCBCTR(A4),FCBDIT(A4) CUR
04469 00005AB2 4286                          CLR.L    D6                 READY
04470 00005AB4 1C2C0031                      MOVE.B   FCBDPT(A4),D6
04471 00005AB8 1946004D                      MOVE.B   D6,FCBDIB(A4)     INDEX I
04472 00005ABC 062C00180031                  ADD.B    #24,FCBDPT(A4)     STEP P
04473 00005AC2 4DEC0004                      LEA      FCBNAM(A4),A6        WHER
04474 00005AC6 4BF46060                      LEA      FCBDAT(A4,D6),A5     POIN
04475 00005ACA 2CDD                          MOVE.L   (A5)+,(A6)+       NAME
04476 00005ACC 2CDD                          MOVE.L   (A5)+,(A6)+       NAME
04477 00005ACE 2CDD                          MOVE.L   (A5)+,(A6)+       EXTENSI
04478 00005AD0 1CDD                          MOVE.B   (A5)+,(A6)+       COPY PR
04479 00005AD2 421E                          CLR.B    (A6)+              CLEAR
04480 00005AD4 1CDD                          MOVE.B   (A5)+,(A6)+       FTR
04481 00005AD6 1CDD                          MOVE.B   (A5)+,(A6)+       FSE
04482 00005AD8 425E                          CLR.W    (A6)+              CLEAR
04483 00005ADA 1CDD                          MOVE.B   (A5)+,(A6)+       LTR
04484 00005ADC 1CDD                          MOVE.B   (A5)+,(A6)+       LSE
04485 00005ADE 1CDD                          MOVE.B   (A5)+,(A6)+       SIZE
04486 00005AE0 1CDD                          MOVE.B   (A5)+,(A6)+       SIZE
04487 00005AE2 1CDD                          MOVE.B   (A5)+,(A6)+       RANDOM
04488 00005AE4 1CDD                          MOVE.B   (A5)+,(A6)+       TIME
04489 00005AE6 1CDD                          MOVE.B   (A5)+,(A6)+       MONTH
04490 00005AE8 1CDD                          MOVE.B   (A5)+,(A6)+       DAY
04491 00005AEA 1CDD                          MOVE.B   (A5)+,(A6)+       YEAR
04492 00005AEC 421E                          CLR.B    (A6)+              FINALL
04493 00005AEE
04494 00005AEE 4E75                          RTS
04495 00005AF0
04496 00005AF0 4EB900006230         FCS7EX   JSR      CPYERR
04497 00005AF6 4E75                          RTS
04498 00005AF8
04499 00005AF8
04500 00005AF8 00000000                      EVEN
04501 00005AF8
04502 00005AF8                      *         LIB      1.TXFMS3
04503 00005AF8                      * FCS 11 - WRITE BACK DIRECTORY ENTRY
04504 00005AF8                      * THIS FUNCTION IS USED INTERNALLY BY STAR-
04505 00005AF8                      * NOT DOCUMENTED BY US OR OTHERS. ANYONE US
04506 00005AF8                      * SO AT HIS OWN RISK, AND IS TO BE ASSUMED
04507 00005AF8                      * EITHER VERY SMART OR VERY STUPID.
04508 00005AF8                      *
04509 00005AF8                      * CALLED BY:
04510 00005AF8                      * INPUT:
04511 00005AF8                      * OUTPUT:
04512 00005AF8                      * REGISTERS USED:
04513 00005AF8
04514 00005AF8 3C2C004A             FCS11    MOVE.W   FCBDIT(A4),D6     DIRECTO
04515 00005AFC BC6C0022                      CMP.W    FCBCTR(A4),D6      CHECK
04516 00005B00 672A                          BEQ.S    F11GO                SAME
04517 00005B02 39460022                      MOVE.W   D6,FCBCTR(A4)     ELSE SO
04518 00005B06 4EB900005F8C                  JSR      FCS9                 READ
04519 00005B0C 6658                          BNE.S    F11EX
04520 00005B0E BC790000176C                  CMP.W    DIRFCB+FCBCTR,D6   CHECK
04521 00005B14 6616                          BNE.S    F11GO              NO, SO
04522 00005B16 4DEC0060                      LEA      FCBDAT(A4),A6        ELSE
04523 00005B1A 4BF9000017AA                  LEA      DIRFCB+FCBDAT,A5     SAME
04524 00005B20 1C3C0040                      MOVE.B   #64,D6            COUNTER
04525 00005B24 2CDD                 MOVE11   MOVE.L   (A5)+,(A6)+       MOVE 4
04526 00005B26 04060001                      SUB.B    #01,D6
04527 00005B2A 66F8                          BNE.S    MOVE11
04528 00005B2C 4286                 F11GO    CLR.L    D6                 PREP F
04529 00005B2E 1C2C004D                      MOVE.B   FCBDIB(A4),D6     DIRECTO
04530 00005B32 4DF46060                      LEA      FCBDAT(A4,D6),A6     POIN
04531 00005B36 4BEC0004                      LEA      FCBNAM(A4),A5        POIN
04532 00005B3A 2CDD                          MOVE.L   (A5)+,(A6)+       NAME
04533 00005B3C 2CDD                          MOVE.L   (A5)+,(A6)+       NAME
04534 00005B3E 2CDD                          MOVE.L   (A5)+,(A6)+       EXTENSI
04535 00005B40 1CDD                          MOVE.B   (A5)+,(A6)+       COPY PR
04536 00005B42 4BED0001                      LEA      1(A5),A5             SKIP
04537 00005B46 1CDD                          MOVE.B   (A5)+,(A6)+       FTR
04538 00005B48 1CDD                          MOVE.B   (A5)+,(A6)+       FSE
04539 00005B4A 4BED0002                      LEA      2(A5),A5             SKIP
04540 00005B4E 1CDD                          MOVE.B   (A5)+,(A6)+       LTR
04541 00005B50 1CDD                          MOVE.B   (A5)+,(A6)+       LSE
04542 00005B52 1CDD                          MOVE.B   (A5)+,(A6)+       SIZE
04543 00005B54 1CDD                          MOVE.B   (A5)+,(A6)+       SIZE
04544 00005B56 1CDD                          MOVE.B   (A5)+,(A6)+       RANDOM
04545 00005B58 1CDD                          MOVE.B   (A5)+,(A6)+       TIME
04546 00005B5A 1CDD                          MOVE.B   (A5)+,(A6)+       MONTH
04547 00005B5C 1CDD                          MOVE.B   (A5)+,(A6)+       DAY
04548 00005B5E 1CDD                          MOVE.B   (A5)+,(A6)+       YEAR
04549 00005B60 4EF900005FD4                  JMP      FCS8                 WRIT
04550 00005B66
04551 00005B66 4E75                 F11EX    RTS      RETURN IN CASE OF ERROR
04552 00005B68
04553 00005B68                      * FCS12 - FCS FUNCTION 12. DELETE A FILE
04554 00005B68                      *
04555 00005B68                      * CALLED BY:
04556 00005B68                      * INPUT:
04557 00005B68                      * OUTPUT:
04558 00005B68                      * REGISTERS USED:
04559 00005B68
04560 00005B68
04561 00005B68 48E70008             FCS12    MOVEM.L  A4-A4,-(A7)
04562 00005B6C
04563 00005B6C 4DEC0024                      LEA      FCBNMB(A4),A6        POIN
04564 00005B70 4BEC0004                      LEA      FCBNAM(A4),A5        AND
04565 00005B74 2CDD                          MOVE.L   (A5)+,(A6)+
04566 00005B76 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE 12
04567 00005B78 2CDD                          MOVE.L   (A5)+,(A6)+
04568 00005B7A 13EC0003000019AD              MOVE.B   FCBDRV(A4),SIRFCB+FCBDRV
04569 00005B82 4EB900006152                  JSR      FINAME               FIND
04570 00005B88 660000BE                      BNE.L    FCS12E             EXIT O
04571 00005B8C 287C0000174A                  MOVE.L   #DIRFCB,A4        POINT T
04572 00005B92 1A2C000F                      MOVE.B   FCBATT(A4),D5     CHECK A
04573 00005B96 020500C0                      AND.B    #$C0,D5            DELETE
04574 00005B9A 670C                          BEQ.S    FCS12A               OK T
04575 00005B9C 13FC000C0000170E              MOVE.B   #12,ERRTYP        ELSE IT
04576 00005BA4 600000A2                      BRA.L    FCS12E             AND EX
04577 00005BA8
04578 00005BA8 197C00FF0004         FCS12A   MOVE.B   #$FF,FCBNAM(A4)   ERASE 1
04579 00005BAE 6100FF48                      BSR      FCS11                WRIT
04580 00005BB2 66000094                      BNE.L    FCS12E
04581 00005BB6 2A57                          MOVE.L   (A7),A5           POINT B
04582 00005BB8 3B6C00120012                  MOVE.W   FCBFTR(A4),FCBFTR(A5) PUT
04583 00005BBE 3B6C00160016                  MOVE.W   FCBLTR(A4),FCBLTR(A5) PUT
04584 00005BC4 3B6C00180018                  MOVE.W   FCBSIZ(A4),FCBSIZ(A5) PUT
04585 00005BCA 677C                          BEQ.S    FCS12E             DO NOT
04586 00005BCC 1C2C0003                      MOVE.B   FCBDRV(A4),D6     DRIVE N
04587 00005BD0 4EB900005A08                  JSR      DTPOIN               POIN
04588 00005BD6 3C15                          MOVE.W   (A5),D6           LOOK AT
04589 00005BD8 13C600005C5E                  MOVE.B   D6,DTFLAG         =0 IF E
04590 00005BDE 660E                          BNE.S    ENTHER             IF ENT
04591 00005BE0 4EB9000061CE                  JSR      SUMNAM               READ
04592 00005BE6 6660                          BNE.S    FCS12E             IF ERR
04593 00005BE8 4EB900005A20                  JSR      GETSIR               GET
04594 00005BEE
04595 00005BEE                      * NOW THAT DRIVE ENTRY IS IN TABLE, USE IT
04596 00005BEE 3C2D0004             ENTHER   MOVE.W   4(A5),D6          TEMP SA
04597 00005BF2 3B79000017600004              MOVE.W   DIRFCB+FCBLTR,4(A5) SAVE
04598 00005BFA 3A3900001762                  MOVE.W   DIRFCB+FCBSIZ,D5  LENGTH
04599 00005C00 DB6D0006                      ADD.W    D5,6(A5)           ADD TO
04600 00005C04 4A46                          TST.W    D6                 CHECK
04601 00005C06 674C                          BEQ.S    SIREMT             IF DIS
04602 00005C08 287C000019AA                  MOVE.L   #SIRFCB,A4        POINT T
04603 00005C0E 39460022                      MOVE.W   D6,FCBCTR(A4)     READY T
04604 00005C12 4EB900005F8C                  JSR      FCS9                 READ
04605 00005C18 662E                          BNE.S    FCS12E
04606 00005C1A 39790000175C0060              MOVE.W   DIRFCB+FCBFTR,FCBDAT(A4)
04607 00005C22 4EB900005FD4                  JSR      FCS10                WRIT
04608 00005C28 661E                          BNE.S    FCS12E               IF E
04609 00005C2A
04610 00005C2A                      * UPDATE SIR FROM DRTABL. THEN, IF DRTABL E
04611 00005C2A                      * EXISTED BEFORE ALL THIS (INDICATING THAT
04612 00005C2A                      * IS AN OPEN WRITE FILE SOMEWHERE), THEN LE
04613 00005C2A                      * ELSE ERASE IT
04614 00005C2A 287C000019AA         F12DON   MOVE.L   #SIRFCB,A4
04615 00005C30 4EB9000059B2                  JSR      UPDSIR               WRIT
04616 00005C36 6610                          BNE.S    FCS12E
04617 00005C38 4A3900005C5E                  TST.B    DTFLAG             WAS DR
04618 00005C3E 6608                          BNE.S    FCS12E             YES, L
04619 00005C40 2A7900002B08                  MOVE.L   DRTPTR,A5         NO, ERA
04620 00005C46 4255                          CLR.W    (A5)               ERASE
04621 00005C48
04622 00005C48 4EB900006230         FCS12E   JSR      CPYERR
04623 00005C4E 4CDF1000                      MOVEM.L  (A7)+,A4-A4
04624 00005C52 4E75                          RTS
04625 00005C54
04626 00005C54                      * IF SIR INDICATES DISK WAS FULL, MAKE FIRS
04627 00005C54                      * OF FREE SPACE SAME AS THAT OF DELETED FIL
04628 00005C54 3B790000175C0002     SIREMT   MOVE.W   DIRFCB+FCBFTR,2(A5) DELET
04629 00005C5C 60CC                          BRA.S    F12DON               AND
04630 00005C5E
04631 00005C5E 00                   DTFLAG   FCB      0 DRIVE DATA TABLE FLAG
04632 00005C5F
04633 00005C5F                      * FCS13 - FCS FUNCTION 13. RENAME A FILE
04634 00005C5F                      *
04635 00005C5F                      * CALLED BY:
04636 00005C5F                      * INPUT:
04637 00005C5F                      * OUTPUT:
04638 00005C5F                      * REGISTERS USED:
04639 00005C5F
04640 00005C5F
04641 00005C60 48E70008             FCS13    MOVEM.L  A4-A4,-(A7)
04642 00005C64
04643 00005C64 4A2C003C                      TST.B    FCBNMS+8(A4)       LOOK A
04644 00005C68 660C                          BNE.S    FCS13A             CONTIN
04645 00005C6A 396C000C003C                  MOVE.W   FCBNAM+8(A4),FCBNMS+8(A4)
04646 00005C70 196C000E003E                  MOVE.B   FCBNAM+10(A4),FCBNMS+10(A
04647 00005C76
04648 00005C76 4DEC0024             FCS13A   LEA      FCBNMB(A4),A6        POIN
04649 00005C7A 4BEC0004                      LEA      FCBNAM(A4),A5        SAVE
04650 00005C7E 2CDD                          MOVE.L   (A5)+,(A6)+
04651 00005C80 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE NA
04652 00005C82 2CDD                          MOVE.L   (A5)+,(A6)+
04653 00005C84
04654 00005C84 4DEC0004                      LEA      FCBNAM(A4),A6
04655 00005C88 4BEC0034                      LEA      FCBNMS(A4),A5        NEW
04656 00005C8C 2CDD                          MOVE.L   (A5)+,(A6)+
04657 00005C8E 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE NA
04658 00005C90 2CDD                          MOVE.L   (A5)+,(A6)+
04659 00005C92
04660 00005C92 4EB900006152                  JSR      FINAME               FIND
04661 00005C98 6768                          BEQ.S    F13E3              ERROR
04662 00005C9A
04663 00005C9A 1A390000170E                  MOVE.B   ERRTYP,D5         CHECK E
04664 00005CA0 0C050004                      CMP.B    #4,D5              IS IT
04665 00005CA4 6650                          BNE.S    F13EXT             NOTHIN
04666 00005CA6 42390000170E                  CLR.B    ERRTYP             ERASE
04667 00005CAC 422C0001                      CLR.B    FCBERR(A4)
04668 00005CB0
04669 00005CB0 1A2C0003                      MOVE.B   FCBDRV(A4),D5     DRIVE N
04670 00005CB4 49EC0020                      LEA      FCBNMB-FCBNAM(A4),A4 FOOL
04671 00005CB8 19450003                      MOVE.B   D5,FCBDRV(A4)     BUT GIV
04672 00005CBC 4EB900006152                  JSR      FINAME               FIND
04673 00005CC2 6632                          BNE.S    F13EXT             IF IT
04674 00005CC4 2857                          MOVE.L   (A7),A4           POINT T
04675 00005CC6 4BEC0034                      LEA      FCBNMS(A4),A5        A5->
04676 00005CCA 4DF90000174E                  LEA      DIRFCB+FCBNAM,A6     A6->
04677 00005CD0 2CDD                          MOVE.L   (A5)+,(A6)+
04678 00005CD2 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE NA
04679 00005CD4 3CDD                          MOVE.W   (A5)+,(A6)+
04680 00005CD6 1CDD                          MOVE.B   (A5)+,(A6)+
04681 00005CD8
04682 00005CD8 49F90000174A                  LEA      DIRFCB,A4
04683 00005CDE 4EB900005AF8                  JSR      FCS11                WRIT
04684 00005CE4 2857                          MOVE.L   (A7),A4           POINT T
04685 00005CE6 4BEC0024                      LEA      FCBNMB(A4),A5        A5->
04686 00005CEA 4DEC0034                      LEA      FCBNMS(A4),A6        A6->
04687 00005CEE 2CDD                          MOVE.L   (A5)+,(A6)+
04688 00005CF0 2CDD                          MOVE.L   (A5)+,(A6)+       MOVE NA
04689 00005CF2 3CDD                          MOVE.W   (A5)+,(A6)+
04690 00005CF4 1CDD                          MOVE.B   (A5)+,(A6)+
04691 00005CF6 4EB900006230         F13EXT   JSR      CPYERR
04692 00005CFC 4CDF1000                      MOVEM.L  (A7)+,A4-A4
04693 00005D00 4E75                          RTS
04694 00005D02
04695 00005D02                      * ERROR EXIT
04696 00005D02 13FC00030000170E     F13E3    MOVE.B   #3,ERRTYP         ERROR 3
04697 00005D0A 60EA                          BRA.S    F13EXT
04698 00005D0C
04699 00005D0C                      * FCS 15 - NEXT SEQUENTIAL SECTOR
04700 00005D0C                      * FCS-15 NO LONGER FITS ORIGINAL DOCUMENTAT
04701 00005D0C                      * IGNORED IF NOTHING WRITTEN TO CURRENT SEC
04702 00005D0C                      * SKIPS SECTOR EVEN IF NOTHING WAS READ FRO
04703 00005D0C                      *
04704 00005D0C                      * CALLED BY:
04705 00005D0C                      * INPUT:
04706 00005D0C                      * OUTPUT:
04707 00005D0C                      * REGISTERS USED:
04708 00005D0C
04709 00005D0C
04710 00005D0C 48E70008             FCS15    MOVEM.L  A4-A4,-(A7)
04711 00005D10 1A2C0002                      MOVE.B   FCBRW(A4),D5      CHECK F
04712 00005D14 04050001                      SUB.B    #01,D5
04713 00005D18 6726                          BEQ.S    F15RD                IS O
04714 00005D1A 04050001                      SUB.B    #01,D5
04715 00005D1E 6600FD2C                      BNE      F5ER18               MUST
04716 00005D22
04717 00005D22                      * FILE WAS OPEN FOR WRITE
04718 00005D22 0C2C00040031         F15WR    CMP.B    #4,FCBDPT(A4)      DPT AT
04719 00005D28 67CC                          BEQ.S    F13EXT             YES, J
04720 00005D2A
04721 00005D2A                      * WRITE A 0 TO THE FILE
04722 00005D2A 4205                          CLR.B    D5
04723 00005D2C 422C0031                      CLR.B    FCBDPT(A4)         CLEAR
04724 00005D30 4EB900005086                  JSR      FWRITE               GO W
04725 00005D36 66BE                          BNE.S    F13EXT             EXIT O
04726 00005D38 022C00FE0031                  AND.B    #$FE,FCBDPT(A4)    CHANGE
04727 00005D3E 60B6                          BRA.S    F13EXT             COPY E
04728 00005D40
04729 00005D40                      * READ THE FILE
04730 00005D40 4205                 F15RD    CLR.B    D5
04731 00005D42 422C0031                      CLR.B    FCBDPT(A4)         CLEAR
04732 00005D46 4EB900004F42                  JSR      FREAD                GO R
04733 00005D4C 66A8                          BNE.S    F13EXT             EXIT O
04734 00005D4E 022C00FE0031                  AND.B    #$FE,FCBDPT(A4)    CHANGE
04735 00005D54 60A0                          BRA.S    F13EXT             COPY E
04736 00005D56
04737 00005D56                      * FCS 17 - GET RANDOM BYTE FROM FILE
04738 00005D56                      *
04739 00005D56                      * CALLED BY:
04740 00005D56                      * INPUT:
04741 00005D56                      * OUTPUT:
04742 00005D56                      * REGISTERS USED:
04743 00005D56
04744 00005D56
04745 00005D56 4285                 FCS17    CLR.L    D5                 READY
04746 00005D58 1A2C0033                      MOVE.B   FCBRIN(A4),D5     GET RAN
04747 00005D5C 1A345060                      MOVE.B   FCBDAT(A4,D5),D5  GET BYT
04748 00005D60 4286                          CLR.L    D6                 CLEAR
04749 00005D62 4E75                          RTS
04750 00005D64
04751 00005D64                      * FCS 18 - PUT RANDOM BYTE INTO FILE
04752 00005D64                      *
04753 00005D64                      * CALLED BY:
04754 00005D64                      * INPUT:
04755 00005D64                      * OUTPUT:
04756 00005D64                      * REGISTERS USED:
04757 00005D64
04758 00005D64
04759 00005D64 1C2C0002             FCS18    MOVE.B   FCBRW(A4),D6      CHECK F
04760 00005D68 0206007F                      AND.B    #$7F,D6
04761 00005D6C 0C060003                      CMP.B    #3,D6              CHECK
04762 00005D70 661A                          BNE.S    F18ER1               ERRO
04763 00005D72 4286                          CLR.L    D6
04764 00005D74 1C2C0033                      MOVE.B   FCBRIN(A4),D6     GET RAN
04765 00005D78 19846060                      MOVE.B   D4,FCBDAT(A4,D6)  PUT BYT
04766 00005D7C 1C3C0083                      MOVE.B   #$83,D6           SIGNAL
04767 00005D80 19460002                      MOVE.B   D6,FCBRW(A4)      PUT BAC
04768 00005D84 1946003D                      MOVE.B   D6,FCBUPD(A4)     ALSO SI
04769 00005D88 4286                          CLR.L    D6                 CLEAR
04770 00005D8A 4E75                          RTS
04771 00005D8C
04772 00005D8C 13FC00010000170E     F18ER1   MOVE.B   #1,ERRTYP
04773 00005D94 197C00010001                  MOVE.B   #1,FCBERR(A4)     ALSO IN
04774 00005D9A 4E75                          RTS
04775 00005D9C
04776 00005D9C                      * FCS 20 - FIND NEXT READY DRIVE
04777 00005D9C                      *
04778 00005D9C                      * CALLED BY:
04779 00005D9C                      * INPUT: USUALLY FCB HAS DRIVE $FF
04780 00005D9C                      * OUTPUT: NEXT AVAILABLE DRIVE NUM IN FCB
04781 00005D9C                      * REGISTERS USED: D5 (DCHK USES D6 AND A6)
04782 00005D9C
04783 00005D9C 1A2C0003             FCS20    MOVE.B   FCBDRV(A4),D5     GET CUR
04784 00005DA0 06050001                      ADD.B    #01,D5             GO TO
04785 00005DA4 BA3900001722                  CMP.B    MAXDRV,D5          CHECK
04786 00005DAA 6226                          BHI.S    F20NG              NG IF
04787 00005DAC 19450003                      MOVE.B   D5,FCBDRV(A4)     ELSE SA
04788 00005DB0 4DFAB38A                      LEA      DRUSED(PC),A6        POIN
04789 00005DB4 02850000000F                  AND.L    #$F,D5             CLEAR
04790 00005DBA 1A365000                      MOVE.B   0(A6,D5.W),D5      GET PH
04791 00005DBE 67DC                          BEQ.S    FCS20              IF NO
04792 00005DC0 0205000F                      AND.B    #$0F,D5            KEEP O
04793 00005DC4 19450048                      MOVE.B   D5,FCBPHY(A4)     PUT PHY
04794 00005DC8 611C                          BSR.S    DCHK               CHECK
04795 00005DCA 66D0                          BNE.S    FCS20              REPEAT
04796 00005DCC 023C00FE                      AND.B    #$FE,CCR
04797 00005DD0 4E75                          RTS
04798 00005DD2
04799 00005DD2 13FC00100000170E     F20NG    MOVE.B   #16,ERRTYP        DRIVE N
04800 00005DDA 197C00100001                  MOVE.B   #16,FCBERR(A4)    STORE I
04801 00005DE0 003C0001                      DC.L     $003C0001 OR #1,CCR SET C
04802 00005DE4 4E75                          RTS
04803 00005DE6
04804 00005DE6 4EB900001070         DCHK     JSR      SECCHK               CHEC
04805 00005DEC 4EF900001118                  JMP      DICHEK               THEN
04806 00005DF2
04807 00005DF2                      * FCS 21 - POSITION TO RECORD N
04808 00005DF2                      *
04809 00005DF2                      * CALLED BY:
04810 00005DF2                      * INPUT:
04811 00005DF2                      * OUTPUT:
04812 00005DF2                      * REGISTERS USED:
04813 00005DF2
04814 00005DF2
04815 00005DF2 4A2C001A             FCS21    TST.B    FCBRAN(A4)         IS IT
04816 00005DF6 670000DC                      BEQ      ERR19                NO
04817 00005DFA 48E70808                      MOVEM.L  D4/A4,-(A7)
04818 00005DFE 6100FA7A                      BSR      WRUPDA               WRIT
04819 00005E02 6628                          BNE.S    F21RTS               IF E
04820 00005E04 3E2C004E             RN2123   MOVE.W   FCBCRN(A4),D7     GET DES
04821 00005E08 6628                          BNE.S    GETREC               WANT
04822 00005E0A
04823 00005E0A                      * IF CRN=0, MEANS WANT MAP ONLY
04824 00005E0A 3C2C0012                      MOVE.W   FCBFTR(A4),D6     POINT T
04825 00005E0E 39460022             FCS21A   MOVE.W   D6,FCBCTR(A4)     IS CURR
04826 00005E12 4EB900005F8C                  JSR      FCS9                 GO R
04827 00005E18 6612                          BNE.S    F21RTS
04828 00005E1A 197C00040031                  MOVE.B   #4,FCBDPT(A4)     DATA PO
04829 00005E20 3A2C0062                      MOVE.W   FCBDAT+2(A4),D5   GET REC
04830 00005E24 BA6C004E                      CMP.W    FCBCRN(A4),D5      CHECK
04831 00005E28 66000090                      BNE      ERR25                IF D
04832 00005E2C 4CDF1010             F21RTS   MOVEM.L  (A7)+,D4/A4
04833 00005E30 4E75                          RTS
04834 00005E32
04835 00005E32                      * IF CRN>0, MEANS GET A REAL RECORD
04836 00005E32 06470002             GETREC   ADD.W    #2,D7              NUMBER
04837 00005E36 BE6C0018                      CMP.W    FCBSIZ(A4),D7        COMP
04838 00005E3A 625E                          BHI.S    ERR24                BAD
04839 00005E3C 6100F50E                      BSR      RDFMAP               READ
04840 00005E40 66EA                          BNE.S    F21RTS
04841 00005E42 4DF900002B2E                  LEA      FILMAP,A6            POIN
04842 00005E48 3E2C004E                      MOVE.W   FCBCRN(A4),D7     GET DES
04843 00005E4C
04844 00005E4C                      * NOW LOOP THROUGH MAP UNTIL WE FIND IT
04845 00005E4C 4A2E0002             CKNEXT   TST.B    2(A6)              CHECK
04846 00005E50 6748                          BEQ.S    ERR24              BAD NU
04847 00005E52 4286                          CLR.L    D6                 READY
04848 00005E54 1C2E0002                      MOVE.B   2(A6),D6          GET SEG
04849 00005E58 9E46                          SUB.W    D6,D7              SUBTRA
04850 00005E5A 6710                          BEQ.S    GET21              ZERO M
04851 00005E5C 2C07                          MOVE.L   D7,D6             COPY IN
04852 00005E5E E04E                          LSR.W    #8,D6              MOVE B
04853 00005E60 0C0600FF                      CMP.B    #$FF,D6            BELOW
04854 00005E64 6706                          BEQ.S    GET21              YES, G
04855 00005E66 4DEE0003             NOTZER   LEA      3(A6),A6             ELSE
04856 00005E6A 60E0                          BRA.S    CKNEXT
04857 00005E6C
04858 00005E6C                      * NOW CALCULATE NEXT ENTRY
04859 00005E6C DE2E0002             GET21    ADD.B    2(A6),D7           FIX SE
04860 00005E70 1C16                          MOVE.B   (A6),D6           GET TRA
04861 00005E72 1A2E0001                      MOVE.B   1(A6),D5          SECTOR
04862 00005E76
04863 00005E76 04070001             ONEMOR   SUB.B    #01,D7             BUMP C
04864 00005E7A 6716                          BEQ.S    NOWON
04865 00005E7C 06050001                      ADD.B    #01,D5             BUMP S
04866 00005E80 BA2C003C                      CMP.B    FCBSPT(A4),D5      PAST E
04867 00005E84 6300FFF0                      BLS      ONEMOR               NO
04868 00005E88 1A3C0001                      MOVE.B   #1,D5             YES, ST
04869 00005E8C 06060001                      ADD.B    #1,D6              NEXT T
04870 00005E90 60E4                          BRA.S    ONEMOR               REPE
04871 00005E92
04872 00005E92 E14E                 NOWON    LSL.W    #8,D6              MOVE T
04873 00005E94 DC05                          ADD.B    D5,D6              ADD IN
04874 00005E96 6000FF76                      BRA.L    FCS21A               GO G
04875 00005E9A
04876 00005E9A                      * ON TOO LARGE RECORD, RETURN FIRST FILE MA
04877 00005E9A 396C00120022         ERR24    MOVE.W   FCBFTR(A4),FCBCTR(A4) MAP
04878 00005EA0 4BEC0060                      LEA      FCBDAT(A4),A5        POIN
04879 00005EA4 4DF900002B2A                  LEA      HDR1,A6              AND
04880 00005EAA 3C3C003F                      MOVE.W   #63,D6            COUNTER
04881 00005EAE 2ADE                 E24MOV   MOVE.L   (A6)+,(A5)+       MOVE FO
04882 00005EB0 51CEFFFC                      DBRA     D6,E24MOV
04883 00005EB4 1A3C0018                      MOVE.B   #24,D5            REC NO
04884 00005EB8 6004                          BRA.S    ERR25A
04885 00005EBA
04886 00005EBA 1A3C0019             ERR25    MOVE.B   #25,D5            REC NO
04887 00005EBE 19450001             ERR25A   MOVE.B   D5,FCBERR(A4)
04888 00005EC2 13C50000170E                  MOVE.B   D5,ERRTYP
04889 00005EC8 4CDF1010                      MOVEM.L  (A7)+,D4/A4
04890 00005ECC 4E75                          RTS
04891 00005ECE
04892 00005ECE                      * FCS 22 - BACKUP ONE RECORD
04893 00005ECE                      *
04894 00005ECE                      * CALLED BY:
04895 00005ECE                      * INPUT:
04896 00005ECE                      * OUTPUT:
04897 00005ECE                      * REGISTERS USED:
04898 00005ECE
04899 00005ECE
04900 00005ECE 4A2C001A             FCS22    TST.B    FCBRAN(A4)         CHECK
04901 00005ED2 6610                          BNE.S    FCS22A             YES, O
04902 00005ED4 197C00130001         ERR19    MOVE.B   #19,FCBERR(A4)    ERROR 1
04903 00005EDA 13FC00130000170E              MOVE.B   #19,ERRTYP
04904 00005EE2 4E75                          RTS
04905 00005EE4
04906 00005EE4 046D0001004E         FCS22A   SUB.W    #1,FCBCRN(A5)      BACKUP
04907 00005EEA 6000FF06                      BRA      FCS21                GO S
04908 00005EEE
04909 00005EEE                      * FCS 23 - POSITION TO RECORD N, BUT EXTEND
04910 00005EEE                      *
04911 00005EEE                      * CALLED BY:
04912 00005EEE                      * INPUT:
04913 00005EEE                      * OUTPUT:
04914 00005EEE                      * REGISTERS USED:
04915 00005EEE
04916 00005EEE
04917 00005EEE 4A2C001A             FCS23    TST.B    FCBRAN(A4)         IS IT
04918 00005EF2 67E0                          BEQ.S    ERR19              NO
04919 00005EF4 6100FEFC                      BSR      FCS21                TRY
04920 00005EF8 6602                          BNE.S    FCS23A             IF THE
04921 00005EFA 4E75                 F23RTS   RTS      ELSE JUST EXIT IF SECTOR
04922 00005EFC
04923 00005EFC 42390000170E         FCS23A   CLR.B    ERRTYP
04924 00005F02 0C2C00180001                  CMP.B    #24,FCBERR(A4)     CHECK
04925 00005F08 66F0                          BNE.S    F23RTS             NO, SO
04926 00005F0A 48E70808                      MOVEM.L  D4/A4,-(A7)
04927 00005F0E 3C2C004E                      MOVE.W   FCBCRN(A4),D6     GET DES
04928 00005F12 33C600002B24                  MOVE.W   D6,CRNTMP         TEMPORA
04929 00005F18 0C46A758                      CMP.W    #42840,D6          CHECK
04930 00005F1C 6200FF7C                      BHI.L    ERR24              BAD NU
04931 00005F20
04932 00005F20                      * OK, WE NEED TO EXTEND THE FILE. FIRST GO
04933 00005F20 396C00160022                  MOVE.W   FCBLTR(A4),FCBCTR(A4) LAS
04934 00005F26 197C0009003D                  MOVE.B   #9,FCBUPD(A4)     MARK FI
04935 00005F2C 4EB900005F8C                  JSR      FCS9                 ...G
04936 00005F32 6652                          BNE.S    F23EXI               EXIT
04937 00005F34 197C00020002                  MOVE.B   #2,FCBRW(A4)      STATUS
04938 00005F3A 197C0002003D                  MOVE.B   #2,FCBUPD(A4)     SET FIL
04939 00005F40 422C0031                      CLR.B    FCBDPT(A4)         POINT
04940 00005F44 396C0062004E                  MOVE.W   FCBDAT+2(A4),FCBCRN(A4) U
04941 00005F4A
04942 00005F4A                      * NOW START WRITING EMPTY SECTORS
04943 00005F4A 4284                 F23SKP   CLR.L    D4                 WRITE
04944 00005F4C 4EB900005086                  JSR      FWRITE               GO W
04945 00005F52 6632                          BNE.S    F23EXI             EXIT O
04946 00005F54 3C2C004E                      MOVE.W   FCBCRN(A4),D6     GET CUR
04947 00005F58 BC7900002B24                  CMP.W    CRNTMP,D6          COMPAR
04948 00005F5E 670A                          BEQ.S    F23DON             FINISH
04949 00005F60 4EB900005D0C                  JSR      FCS15                GO S
04950 00005F66 661E                          BNE.S    F23EXI             ON ERR
04951 00005F68 60E0                          BRA.S    F23SKP
04952 00005F6A
04953 00005F6A                      * WHEN DONE, CLOSE AND REOPEN FILE
04954 00005F6A 4EB900005792         F23DON   JSR      FCS4                 CLOS
04955 00005F70 6614                          BNE.S    F23EXI             EXIT O
04956 00005F72 4EB900005758                  JSR      FCS3                 REOP
04957 00005F78 660C                          BNE.S    F23EXI             EXIT O
04958 00005F7A 397900002B24004E              MOVE.W   CRNTMP,FCBCRN(A4) RESTORE
04959 00005F82 6000FE80                      BRA.L    RN2123             SEEK B
04960 00005F86
04961 00005F86 4CDF1010             F23EXI   MOVEM.L  (A7)+,D4/A4
04962 00005F8A 4E75                          RTS
04963 00005F8C
04964 00005F8C
04965 00005F8C                      * FCS8 - WRITE NEXT INFORMATION ENTRY
04966 00005F8C                      *        (EITHER DIRECTORY OR SIR)
04967 00005F8C                      * FCS9 AND FCS10 - FCS FUNCTIONS 9 (READ) A
04968 00005F8C                      *        10 (WRITE) SINGLE SECTOR
04969 00005F8C
04970 00005F8C                      * CALLED BY:
04971 00005F8C                      *      FCS9: FCS0 RDFMAP FCS4 WRUPDA FCS12
04972 00005F8C                      *      FCS10: FCS0 F0WRIT PUTINM FCS2 FCS4
04973 00005F8C                      * INPUT: A4 POINTS TO FCB
04974 00005F8C                      * OUTPUT: ZERO IF NO ERROR; ERROR CODE IN E
04975 00005F8C                      * REGISTERS USED: IMPORTANT TO PRESERVE ALL
04976 00005F8C
04977 00005F8C
04978 00005F8C                      * READ ENTRY POINT
04979 00005F8C
04980 00005F8C 00005F8C             FCS9
04981 00005F8C 48E70402                      MOVEM.L  D5/A6,-(A7)
04982 00005F90 1A2C0003                      MOVE.B   FCBDRV(A4),D5     CHECK D
04983 00005F94 BA3900001722                  CMP.B    MAXDRV,D5          AGAINS
04984 00005F9A 62000024                      BHI      F9DRER               IF H
04985 00005F9E 4DFAB19C                      LEA      DRUSED(PC),A6        POIN
04986 00005FA2 02850000000F                  AND.L    #$F,D5             CLEAR
04987 00005FA8 197650000048                  MOVE.B   0(A6,D5.W),FCBPHY(A4) GET
04988 00005FAE 6710                          BEQ.S    F9DRER             IF NO
04989 00005FB0 4CDF4020                      MOVEM.L  (A7)+,D5/A6
04990 00005FB4 4EB900001020                  JSR      SECTRD               FIRS
04991 00005FBA 4EF90000110C                  JMP      DIREAD               THEN
04992 00005FC0
04993 00005FC0 4CDF4020             F9DRER   MOVEM.L  (A7)+,D5/A6
04994 00005FC4 197C000F0001                  MOVE.B   #15,FCBERR(A4)
04995 00005FCA 13FC000F0000170E              MOVE.B   #15,ERRTYP        PUT IN
04996 00005FD2 4E75                          RTS      AND RETURN
04997 00005FD4
04998 00005FD4                      * WRITE ENTRY POINT
04999 00005FD4
05000 00005FD4 00005FD4             FCS10
05001 00005FD4 00005FD4             FCS8
05002 00005FD4 48E70602                      MOVEM.L  D5-D6/A6,-(A7)
05003 00005FD8 1A2C0003                      MOVE.B   FCBDRV(A4),D5     CHECK L
05004 00005FDC BA3900001722                  CMP.B    MAXDRV,D5          AGAINS
05005 00005FE2 6200002A                      BHI      F10DER               IF H
05006 00005FE6 4DFAB154                      LEA      DRUSED(PC),A6        POIN
05007 00005FEA 02850000000F                  AND.L    #$F,D5             CLEAR
05008 00005FF0 1C36500A                      MOVE.B   10(A6,D5.W),D6    GET DRI
05009 00005FF4 6B2C                          BMI.S    F10WPE             IF WRI
05010 00005FF6 197650000048                  MOVE.B   0(A6,D5.W),FCBPHY(A4) GET
05011 00005FFC 6710                          BEQ.S    F10DER             IF NO
05012 00005FFE 4CDF4060                      MOVEM.L  (A7)+,D5-D6/A6
05013 00006002 4EB900001034                  JSR      SECTWR               FIRS
05014 00006008 4EF900001112                  JMP      DIWRIT               THEN
05015 0000600E
05016 0000600E                      * ON DRIVE NUMBER ERROR
05017 0000600E
05018 0000600E 4CDF4060             F10DER   MOVEM.L  (A7)+,D5-D6/A6
05019 00006012 197C000F0001                  MOVE.B   #15,FCBERR(A4)
05020 00006018 13FC000F0000170E              MOVE.B   #15,ERRTYP        PUT IN
05021 00006020 4E75                          RTS      AND RETURN
05022 00006022
05023 00006022                      * ON WRITE-PROTECTED DRIVE ERROR
05024 00006022
05025 00006022 4CDF4060             F10WPE   MOVEM.L  (A7)+,D5-D6/A6
05026 00006026 197C000B0001                  MOVE.B   #11,FCBERR(A4)
05027 0000602C 13FC000B0000170E              MOVE.B   #11,ERRTYP        PUT IN
05028 00006034 4E75                          RTS      AND RETURN
05029 00006036
05030 00006036                      * DISK RESTORE AND DISK SEEK ROUTINES: CONV
05031 00006036                      * PHYSICAL DRIVE (FLOPPY ONLY) AND PUT INTO
05032 00006036
05033 00006036 610E                 DIREPH   BSR.S    CVTL2P             CONVER
05034 00006038 4EF900001124                  JMP      DIREST               THEN
05035 0000603E 6106                 DISEPH   BSR.S    CVTL2P             CONVER
05036 00006040 4EF90000112A                  JMP      DISEEK               THEN
05037 00006046
05038 00006046 1A2C0003             CVTL2P   MOVE.B   FCBDRV(A4),D5     CHECK L
05039 0000604A BA3900001722                  CMP.B    MAXDRV,D5          AGAINS
05040 00006050 6200001C                      BHI      CVTERR               IF H
05041 00006054 4DFAB0E6                      LEA      DRUSED(PC),A6        POIN
05042 00006058 02850000000F                  AND.L    #$F,D5             CLEAR
05043 0000605E 1A365000                      MOVE.B   0(A6,D5.W),D5      GET PH
05044 00006062 19450048                      MOVE.B   D5,FCBPHY(A4)     PUT INT
05045 00006066 08050004                      BTST.B   #4,D5             CHECK I
05046 0000606A 6702                          BEQ.S    CVTERR             NO
05047 0000606C 4E75                          RTS      OK, RETURN
05048 0000606E
05049 0000606E                      * ON DRIVE NUMBER ERROR
05050 0000606E
05051 0000606E 1A3C000F             CVTERR   MOVE.B   #15,D5            ERROR 1
05052 00006072 19450001                      MOVE.B   D5,FCBERR(A4)
05053 00006076 DFFC00000004                  ADD.L    #4,A7              REMOVE
05054 0000607C E20D                          LSR.B    #1,D5              NON-ZE
05055 0000607E 4E75                          RTS      RETURN TO USER
05056 00006080
05057 00006080 00000000                      EVEN
05058 00006080
05059 00006080                      *         LIB      1.TXFMSUBR
05060 00006080
05061 00006080                      * FCS SUBROUTINE CODE FOLLOWS
05062 00006080
05063 00006080                      * GRABIT - SUBROUTINE TO GRAB NEXT SECTOR F
05064 00006080                      *  ENTRY: ASSUMES DRTABL HAS AN ENTRY FOR D
05065 00006080                      *         READS IT IN IF NOT THERE
05066 00006080                      *         A4-> FCB WHERE SPACE IS NEEDED
05067 00006080                      *  DURING: A5-> SIRFCB, A6-> DRTABL ENTRY
05068 00006080                      *  EXIT: T-S OF FOUND SECTOR IS IN FCBLTR,A
05069 00006080                      *        Z INDICATES MINOR ERROR, ELSE ROUT
05070 00006080                      *          RETURNS TO WARMS ON DIR OR SIR E
05071 00006080
05072 00006080 48E70008             GRABIT   MOVEM.L  A4-A4,-(A7)
05073 00006084
05074 00006084 1C2C0003                      MOVE.B   FCBDRV(A4),D6     DRIVE N
05075 00006088 13C6000019AD                  MOVE.B   D6,SIRFCB+FCBDRV  SAVE IN
05076 0000608E 4EB900005A08                  JSR      DTPOIN               POIN
05077 00006094 2C4D                          MOVE.L   A5,A6             SAVE IT
05078 00006096 4A2E0001                      TST.B    1(A6)              DOES C
05079 0000609A 6616                          BNE.S    GRBYES             YES
05080 0000609C 48E70002                      MOVEM.L  A6-A6,-(A7)
05081 000060A0 4EB9000061CE                  JSR      SUMNAM               NO,
05082 000060A6 4CDF4000                      MOVEM.L  (A7)+,A6-A6
05083 000060AA 6654                          BNE.S    GRABEX             IF ERR
05084 000060AC 4EB900005A20                  JSR      GETSIR               COPY
05085 000060B2 3A2E0006             GRBYES   MOVE.W   6(A6),D5          NUMBER
05086 000060B6 673C                          BEQ.S    GRFULL             DISK F
05087 000060B8 3A2E0002                      MOVE.W   2(A6),D5          1ST FRE
05088 000060BC 6736                          BEQ.S    GRFULL             DISK F
05089 000060BE                      * NOT FULL, GRAB A SECTOR
05090 000060BE 39450016                      MOVE.W   D5,FCBLTR(A4)     SAVE AS
05091 000060C2 287C000019AA                  MOVE.L   #SIRFCB,A4        POINT B
05092 000060C8 39450022                      MOVE.W   D5,FCBCTR(A4)     CURRENT
05093 000060CC 4EB900005F8C                  JSR      FCS9                 READ
05094 000060D2 662C                          BNE.S    GRABEX
05095 000060D4 3A2C0060                      MOVE.W   FCBDAT(A4),D5     POINTER
05096 000060D8 673C                          BEQ.S    CLEARG             CLEAR
05097 000060DA 3D450002                      MOVE.W   D5,2(A6)          PUT INT
05098 000060DE 3A2E0006                      MOVE.W   6(A6),D5
05099 000060E2 04450001                      SUB.W    #1,D5              DECREM
05100 000060E6 672E                          BEQ.S    CLEARG             CLEAR
05101 000060E8 3D450006                      MOVE.W   D5,6(A6)
05102 000060EC 4285                          CLR.L    D5                 NO ERR
05103 000060EE 4CDF1000                      MOVEM.L  (A7)+,A4-A4
05104 000060F2 4E75                          RTS
05105 000060F4
05106 000060F4                      * IF DISK IS FULL, CAN'T GRAB IT
05107 000060F4 6124                 GRFULL   BSR.S    GRCLR              CLEAR
05108 000060F6 6608                          BNE.S    GRABEX
05109 000060F8 13FC00070000170E              MOVE.B   #7,ERRTYP         DISK FU
05110 00006100 4EB900006230         GRABEX   JSR      CPYERR
05111 00006106 4CDF1000                      MOVEM.L  (A7)+,A4-A4
05112 0000610A 4E75                          RTS
05113 0000610C
05114 0000610C 13FC00050000170E     ERR5     MOVE.B   #5,ERRTYP         DIRECTO
05115 00006114 60EA                          BRA.S    GRABEX
05116 00006116
05117 00006116                      * CLEAR ALL WHEN DISK FILLED UP
05118 00006116 6102                 CLEARG   BSR.S    GRCLR              CLEAR
05119 00006118 60E6                          BRA.S    GRABEX             AND EX
05120 0000611A
05121 0000611A 42AE0002             GRCLR    CLR.L    2(A6)              MAKE E
05122 0000611E 426E0006                      CLR.W    6(A6)
05123 00006122 286F0004                      MOVE.L   4(A7),A4          POINT B
05124 00006126 4EB9000059B2                  JSR      UPDSIR               WRIT
05125 0000612C 4E75                          RTS      RTS AND RETURN
05126 0000612E                      * CHKUSE - CHECK WHETHER AN FCB IS ALREADY
05127 0000612E                      *
05128 0000612E                      * CALLED BY: FCS1 AND FCS2
05129 0000612E                      * INPUT: A4 POINTS TO FCB TO BE CHECKED
05130 0000612E                      * OUTPUT: ZERO IF NOT IN USE, ELSE ERROR 2
05131 0000612E                      * REGISTERS USED: D7, A5, A6
05132 0000612E
05133 0000612E 4DEC0044             CHKUSE   LEA      FCBLST(A4),A6        POIN
05134 00006132 2A7C000023A6                  MOVE.L   #FBAPTR,A5        POINT T
05135 00006138 2E15                 SINUSE   MOVE.L   (A5),D7           GET POI
05136 0000613A 6714                          BEQ.S    SNOTIN             FINISH
05137 0000613C 2A47                          MOVE.L   D7,A5
05138 0000613E BDCD                          CMP.L    A5,A6              COMPAR
05139 00006140 66F6                          BNE.S    SINUSE             NOT FO
05140 00006142                      * FOUND ANOTHER ONE WITH OPEN
05141 00006142 13FC00020000170E              MOVE.B   #2,ERRTYP         ERROR 2
05142 0000614A 197C00020001                  MOVE.B   #2,FCBERR(A4)
05143 00006150 4E75                 SNOTIN   RTS
05144 00006152
05145 00006152                      * FINAME - FIND NAME IN DIRECTORY
05146 00006152                      *
05147 00006152                      * CALLED BY:
05148 00006152                      * INPUT: A4-> FCB WITH NAME TO BE FOUND
05149 00006152                      * OUTPUT: ZERO IF FOUND, ELSE ERROR CODE IN
05150 00006152                      * REGISTERS USED: D3/D4 RESTORED,
05151 00006152
05152 00006152
05153 00006152 48E71808             FINAME   MOVEM.L  D3-D4/A4,-(A7)
05154 00006156
05155 00006156 42390000170E                  CLR.B    ERRTYP             NO ERR
05156 0000615C 2C4C                          MOVE.L   A4,A6             SAVE FC
05157 0000615E 262C0004                      MOVE.L   FCBNAM(A4),D3     PUT USE
05158 00006162 282C0008                      MOVE.L   FCBNAM+4(A4),D4
05159 00006166 2E2C000C                      MOVE.L   FCBNAM+8(A4),D7
05160 0000616A 4207                          CLR.B    D7                 HAS 11
05161 0000616C 13EC00030000174D              MOVE.B   FCBDRV(A4),DIRFCB+FCBDRV
05162 00006174 287C0000174A                  MOVE.L   #DIRFCB,A4        POINT T
05163 0000617A                      * OPEN DIRECTORY (SAME AS FCS6)
05164 0000617A 397C00050060                  MOVE.W   #$0005,FCBDAT(A4) SECTOR
05165 00006180 197C00FF003B                  MOVE.B   #$FF,FCBSCF(A4)   NO SPAC
05166 00006186 422C0031                      CLR.B    FCBDPT(A4)         DATA P
05167 0000618A
05168 0000618A 4EB900005A86         FINLO1   JSR      FCS7                 READ
05169 00006190 6628                          BNE.S    FINAER             EXIT O
05170 00006192 4A2C0004                      TST.B    FCBNAM(A4)         CHECK
05171 00006196 672C                          BEQ.S    FINER4             END OF
05172 00006198 B6AC0004                      CMP.L    FCBNAM(A4),D3      COMPAR
05173 0000619C 66EC                          BNE.S    FINLO1             DO NEX
05174 0000619E B8AC0008                      CMP.L    FCBNAM+4(A4),D4    COMPAR
05175 000061A2 66E6                          BNE.S    FINLO1             DO NEX
05176 000061A4 2A2C000C                      MOVE.L   FCBNAM+8(A4),D5
05177 000061A8 4205                          CLR.B    D5
05178 000061AA BE85                          CMP.L    D5,D7              COMPAR
05179 000061AC 66DC                          BNE.S    FINLO1             DO NEX
05180 000061AE
05181 000061AE 4CDF1018             FINAEX   MOVEM.L  (A7)+,D3-D4/A4
05182 000061B2 4EB900006230                  JSR      CPYERR
05183 000061B8 4E75                          RTS
05184 000061BA
05185 000061BA                      * ON ERROR DURING ACTUAL READING, CHECK IF
05186 000061BA 0C3900080000170E     FINAER   CMP.B    #8,ERRTYP          EOF?
05187 000061C2 66EA                          BNE.S    FINAEX             NO, MU
05188 000061C4 13FC00040000170E     FINER4   MOVE.B   #4,ERRTYP         ELSE NA
05189 000061CC 60E0                          BRA.S    FINAEX             AND EX
05190 000061CE
05191 000061CE                      * SUMNAM - READ SIR INTO SIRFCB AND CHECKSU
05192 000061CE                      *
05193 000061CE                      * CALLED BY:
05194 000061CE                      * INPUT:
05195 000061CE                      * OUTPUT: NUMBER OF SECT/TR IN B AND ZERO C
05196 000061CE                      * REGISTERS USED: D5 AND D6; RESTORES A4
05197 000061CE
05198 000061CE
05199 000061CE 48E7000C             SUMNAM   MOVEM.L  A4-A5,-(A7)
05200 000061D2
05201 000061D2 287C000019AA                  MOVE.L   #SIRFCB,A4
05202 000061D8 4EB900005A7E                  JSR      FCS16                OPEN
05203 000061DE 4EB900005A86                  JSR      FCS7                 READ
05204 000061E4 6644                          BNE.S    SUMNEX
05205 000061E6 4285                          CLR.L    D5                 SET CH
05206 000061E8 023C00FE                      DC.L     $023C00FE AND #$FE,CCR CL
05207 000061EC 2A39000019C4                  MOVE.L   SIRFCB+FCBRAN,D5  3 BYTES
05208 000061F2 E39D                          ROL.L    #1,D5
05209 000061F4 BBB9000019AE                  EOR.L    D5,SIRFCB+FCBNAM   EOR IN
05210 000061FA E39D                          ROL.L    #1,D5
05211 000061FC BBB9000019B2                  EOR.L    D5,SIRFCB+FCBNAM+4 EOR NE
05212 00006202 E39D                          ROL.L    #1,D5
05213 00006204 BBB9000019B6                  EOR.L    D5,SIRFCB+FCBNAM+8 EOR EX
05214 0000620A E39D                          ROL.L    #1,D5
05215 0000620C BB39000019B2                  EOR.B    D5,SIRFCB+FCBNAM+4 EOR RE
05216 00006212 2C05                          MOVE.L   D5,D6             PUT INT
05217 00006214 E08D                          LSR.L    #8,D5
05218 00006216 E08D                          LSR.L    #8,D5              MOVE L
05219 00006218 BD45                          EOR.W    D6,D5              COMBIN
05220 0000621A 00050001                      OR.B     #1,D5               ENSUR
05221 0000621E 33C500002B04                  MOVE.W   D5,CHKSUM         STORE C
05222 00006224 2A3C00000000                  MOVE.L   #0,D5             RESET Z
05223 0000622A
05224 0000622A 4CDF3000             SUMNEX   MOVEM.L  (A7)+,A4-A5
05225 0000622E 4E75                          RTS
05226 00006230
05227 00006230                      * CPYERR ROUTINE - TEST ERRTYP AND ALSO
05228 00006230                      * MOVE IT INTO FCB ERROR BYTE
05229 00006230                      *
05230 00006230                      * CALLED BY: EVERYBODY
05231 00006230                      * INPUT: FCB ADDRESS IN A4, ERROR CODE IN E
05232 00006230                      * OUTPUT: ERROR CODE IN FCB
05233 00006230                      * REGISTERS USED:  A5
05234 00006230
05235 00006230
05236 00006230 2A7900002B1A         CPYERR   MOVE.L   CURFCB,A5         RESTORE
05237 00006236 1B790000170E0001              MOVE.B   ERRTYP,1(A5)      MOVE ER
05238 0000623E 4E75                          RTS      RTS AND RETURN WITH ERROR
05239 00006240
05240 00006240                      * RSTRIO - RESTORE I/O BACK TO CONSOLE I/O
05241 00006240                      *
05242 00006240                      * CALLED BY: USER AND WARMS
05243 00006240                      * INPUT:
05244 00006240                      * OUTPUT:
05245 00006240                      * REGISTERS USED: NONE
05246 00006240
05247 00006240
05248 00006240 42B900001710         RESIO    CLR.L    FOADDR             CLEAR
05249 00006246 42B900001714                  CLR.L    FIADDR             CLEAR
05250 0000624C 423900001718                  CLR.B    SPECIO             CLEAR
05251 00006252 4E75                          RTS
05252 00006254
05253 00006254                      * DEFEXT - SET DEFAULT EXTENSION
05254 00006254                      *
05255 00006254                      * CALLED BY: USER
05256 00006254                      * INPUT: D4=DEFAULT EXTENSION CODE, A4=FCB
05257 00006254                      * OUTPUT:
05258 00006254                      * REGISTERS USED: D5, A5
05259 00006254
05260 00006254 1A2C000C             DEFEXT   MOVE.B   FCBEXT(A4),D5     CHECK E
05261 00006258 6706                          BEQ.S    SETEX0             PROBAB
05262 0000625A 0C050020                      CMP.B    #$20,D5            IS IT
05263 0000625E 6634                          BNE.S    SETEX2             NOT SP
05264 00006260
05265 00006260 1A2C0003             SETEX0   MOVE.B   FCBDRV(A4),D5
05266 00006264 04050010                      SUB.B    #$10,D5            CVT 10
05267 00006268 0C050007                      CMP.B    #7,D5              CHECK
05268 0000626C 6326                          BLS.S    SETEX2             YES, S
05269 0000626E
05270 0000626E 0C04000E             SETEX1   CMP.B    #14,D4             CHECK
05271 00006272 6220                          BHI.S    SETEX2             IGNORE
05272 00006274 4285                          CLR.L    D5                 READY
05273 00006276 1A04                          MOVE.B   D4,D5
05274 00006278 CAFC0003                      MULU     #3,D5               MULT
05275 0000627C 2A7C00006296                  MOVE.L   #EXTTAB,A5        POINT T
05276 00006282 19755000000C                  MOVE.B   0(A5,D5),FCBEXT(A4) FIRST
05277 00006288 19755001000D                  MOVE.B   1(A5,D5),FCBEXT+1(A4)
05278 0000628E 19755002000E                  MOVE.B   2(A5,D5),FCBEXT+2(A4) THI
05279 00006294
05280 00006294 4E75                 SETEX2   RTS
05281 00006296
05282 00006296 42494E545854434F4D42 EXTTAB   FCC      'BINTXTCOMBASSYSBAKSCRDAT
               415353595342414B5343                   BACDIRPRTOUT'
               52444154424143444952
               5052544F5554
05283 000062BA
05284 000062BA
05285 000062BA
05286 000062BA 424154535243504950            FCC      'BATSRCPIP'
05287 000062C3
05288 000062C3 000062C3             SKEND    EQU      *                    THIS
05289 000062C3
05290 000062C4 00001000                      END      COLDSV
05291 000062C4

No Syntax Error(s)
